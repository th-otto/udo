@database ARx_Index
@node MAIN "ARexxGuide | Index"
@next ARx_NDXCONT
@prev ARx_NDXCONT
@toc ARx_NDXCONT
      This file is designed to be viewed from the main ARexxGuide
      node.

      Press either <Browse> key to see the index contents.

@endnode
@node ARX_NDXCONT "ARexxGuide | Index"
@toc ARexxGuide.guide/COMPCONT
@prev ARexxGuide.guide/MAIN
@next ARexxGuide.guide/MAIN
   @{fg highlight}AN AMIGAGUIDE® TO ARexx@{fg text}                 Second edition (v2.0)
   by Robin Evans

   @{" Non-alphabetic characters (opeators and special characters)       " link ARx_Ndx}
   @{"     A     " link ARx_Ndx 51 }   @{"     B     " link ARx_Ndx 101}   @{"     C     " link ARx_Ndx 137}   @{"     D     " link ARx_Ndx 230}   @{"     E     " link ARx_Ndx 271}
   @{"     F     " link ARx_Ndx 305}   @{"     G     " link ARx_Ndx 367}   @{"     H     " link ARx_Ndx 388}   @{"     I     " link ARx_Ndx 403}   @{"     J     " link ARx_Ndx 447}
   @{"     K     " link ARx_Ndx 452}   @{"     L     " link ARx_Ndx 457}   @{"     M     " link ARx_Ndx 484}   @{"     N     " link ARx_Ndx 506}   @{"     O     " link ARx_Ndx 529}
   @{"     P     " link ARx_Ndx 551}   @{"     Q     " link ARx_Ndx 602}   @{"     R     " link ARx_Ndx 609}   @{"     S     " link ARx_Ndx 661}   @{"     T     " link ARx_Ndx 746}
   @{"     U     " link ARx_Ndx 801}   @{"     V     " link ARx_Ndx 815}   @{"     W     " link ARx_Ndx 842}   @{"     X     " link ARx_Ndx 871}   @{"     Z     " link ARx_Ndx 878}

         Copyright © 1993,1994 Robin Evans.  All rights reserved.

    This guide is @{" shareware " link ARexxGuide.guide/REG}. If you find it useful, please register.

@endnode
@node ARx_Ndx "ARexxGuide | Index"
@{fg highlight}Non-alphabetic@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" %  , arithmetic operator            " link ARx_Operator.ag/ARITHTABLE}
   @{" &  , logical operator               " link ARx_Operator.ag/LOGTABLE}
   @{" && , logical operator               " link ARx_Operator.ag/LOGTABLE}
   @{" () , Grouping/Argument list         " link ARx_Elements.ag/PAREN}
   @{" () , Used in PARSE template         " link ARx_Instr2.ag/PARSETMP5 10}
   @{" *  , arithmetic operator            " link ARx_Operator.ag/ARITHTABLE}
   @{" ** , arithmetic operator            " link ARx_Operator.ag/ARITHTABLE}
   @{" +  , arithmetic operator            " link ARx_Operator.ag/ARITHTABLE}
   @{" +  , Used in PARSE template         " link ARx_Instr2.ag/PARSETMP5 16}
   @{" ,    Comma                          " link ARx_Elements.ag/COMMA}
   @{" -  , arithmetic operator            " link ARx_Operator.ag/ARITHTABLE}
   @{" -  , Used in PARSE template         " link ARx_Instr2.ag/PARSETMP5 16}
   @{" /  , arithmetic operator            " link ARx_Operator.ag/ARITHTABLE}
   @{" // , arithmetic operator            " link ARx_Operator.ag/ARITHTABLE}
   @{" ;  Clause end symbol                " link ARx_Elements.ag/SEMICOLON}
   @{" <  , comparative operator           " link ARx_Operator.ag/CMPRTABLE}
   @{" <= , comparative operator           " link ARx_Operator.ag/CMPRTABLE}
   @{" <> , Used in templates              " link ARx_Instr.ag/ABOUT 14}
   @{" =  , Used on TRACE console          " link ARx_Instr3.ag/TRACEOPT1 11}
   @{" =  , comparative operator           " link ARx_Operator.ag/CMPRTABLE}
   @{" =  , Assignment token               " link ARx_Elements3.ag/ASSIGNMENT}
   @{" =  , Used in PARSE template         " link ARx_Instr2.ag/PARSETMP5 13}
   @{" == , comparative operator           " link ARx_Operator.ag/CMPRTABLE}
   @{" >  , comparative operator           " link ARx_Operator.ag/CMPRTABLE}
   @{" >+>, TRACE console output           " link ARx_Instr3.ag/TRACEOPT1}
   @{" >.>, TRACE console output           " link ARx_Instr3.ag/TRACEICODE 5}
   @{" >= , comparative operator           " link ARx_Operator.ag/CMPRTABLE}
   @{" >>>, TRACE console output           " link ARx_Instr3.ag/TRACEICODE 5}
   @{" >>>, Used in templates              " link ARx_Instr.ag/ABOUT 31}
   @{" >C>, TRACE console output           " link ARx_Instr3.ag/TRACEICODE 5}
   @{" >F>, TRACE console output           " link ARx_Instr3.ag/TRACEICODE 5}
   @{" >L>, TRACE console output           " link ARx_Instr3.ag/TRACEICODE 5}
   @{" >O>, TRACE console output           " link ARx_Instr3.ag/TRACEICODE 5}
   @{" >P>, TRACE console output           " link ARx_Instr3.ag/TRACEICODE 5}
   @{" >U>, TRACE console output           " link ARx_Instr3.ag/TRACEICODE 5}
   @{" >V>, TRACE console output           " link ARx_Instr3.ag/TRACEICODE 5}
   @{" [] , Used in templates              " link ARx_Instr.ag/ABOUT 18}
   @{" ^ , logical operator                " link ARx_Operator.ag/LOGTABLE}
   @{" {} , Used in templates              " link ARx_Instr.ag/ABOUT 20}
   @{" |  , logical operator               " link ARx_Operator.ag/LOGTABLE}
   @{" |  , Used in templates              " link ARx_Instr.ag/ABOUT 24}
   @{" || , concatenation operator         " link ARx_Operator.ag/CONCATENATION}
   @{" ~  , logical operator               " link ARx_Operator.ag/LOGICAL}
   @{" ~< , comparative operator           " link ARx_Operator.ag/CMPRTABLE}
   @{" ~= , comparative operator           " link ARx_Operator.ag/CMPRTABLE}
   @{" ~==, comparative operator           " link ARx_Operator.ag/CMPRTABLE}
   @{" ~> , comparative operator           " link ARx_Operator.ag/CMPRTABLE}

@{fg highlight}A@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" ABBREV() Built-in function          " link ARx_Func.ag/ABBREV()}
   @{" About this guide                    " link ARx_Intro.ag/MAIN}
   @{" ABS() Built-in function             " link ARx_Func2.ag/ABS()}
   @{" Absolute marker                     " link ARx_Instr2.ag/PARSETMP4 8}
   @{" Abuttal, concatenation operator     " link ARx_Operator.ag/CONCATENATION}
   @{" Accidental commands                 " link ARx_Elements3.ag/ACICMD}
   @{" Acknowledgements                    " link ARx_Intro.ag/ACKN}
   @{" AddComma(): add commas to integer   " link ARx_Tknq.ag/ADDCOMMA()}
   @{" ADDLIB() Built-in function          " link ARx_Func3.ag/ADDLIB()}
   @{" ADDRESS: Instruction keyword        " link ARx_Instr.ag/ADDRESS}
   @{"    Command host                     " link ARx_Elements3.ag/HOST 30}
   @{"    Determine original address       " link ARx_Elements3.ag/INITHOST}
   @{" ADDRESS and the macro               " link ARx_Tutor.ag/MCR6}
   @{" ADDRESS COMMAND                     " link ARx_Instr.ag/ADDRESS}
   @{" Address string, defined             " link ARexxGuide.guide/GLOSSARY 2}
   @{"    Used in functions                " link ARx_Func4.ag/MEMLIST 37}
   @{" Address, Find location in memory    " link ARx_Func2.ag/SHOWLIST() 14}
   @{" ADDRESS() Built-in function         " link ARx_Func3.ag/ADDRESS()}
   @{" ALLOCMEM() Support function         " link ARx_Func4.ag/ALLOCMEM()}
   @{" Alphanumeric, DATATYPE() argument   " link ARx_Func3.ag/DATATYPESUB}
   @{" Amiga system functions              " link ARx_Func4.ag/MEMLIST 21}
   @{" AmigaDOS command programs           " link ARx_Cmd.ag/MAIN}
   @{" AmigaDOS, Reading output of command " link ARx_Tknq.ag/READCMD}
   @{" Anchor position, in PARSE template  " link ARx_Instr2.ag/PARSETMP6 31}
   @{" ANSI REXX                           " link ARx_Intro.ag/COMPATIBILITY}
   @{" APPEND                              " link ARx_Func3.ag/OPEN() 19}
   @{" Arbitrary precision of number       " link ARx_Elements2.ag/PRECISION}
   @{" Arc: Program example, Uncrunch.rexx " link ARx_PrgUcr.ag/UCREXPLAN}
   @{" ARexx Applications List             " link ARx_Intro.ag/WHYREXX 51}
   @{" ARexx control functions             " link ARx_Func3.ag/ARXLIST}
   @{" ARexx, host name                    " link ARx_Elements3.ag/DEFHOST 32}
   @{" ARexx search path                   " link ARx_Cmd.ag/RX 9}
   @{" ARexxGuide Online Help System       " link ARx_Tutor.ag/HELPKEYMACRO}
   @{" ARG() Built-in function             " link ARx_Func3.ag/ARG()}
   @{" ARG, PARSE option                   " link ARx_Instr2.ag/PARSESRC1}
   @{" ARG: Instruction keyword            " link ARx_Instr.ag/ARG}
   @{" Argument                            " link ARx_Elements3.ag/FUNCARG}
   @{" Argument string, commas             " link ARx_Elements3.ag/EXTFUNC 28}
   @{" Argument, exists                    " link ARx_Func3.ag/ARG()}
   @{" Arithmetic operator: Table          " link ARx_Operator.ag/ARITHTABLE}
   @{" Arithmetic operators                " link ARx_Operator.ag/ARITHMETIC}
   @{" Array                               " link ARx_Elements2.ag/COMPVAR3 33}
   @{" Assign, SHOWLIST() option           " link ARx_Func2.ag/SHOWLISTSUB}
   @{" Assigned variable                   " link ARx_Elements2.ag/VARIABLE}
   @{" Assigning                           " link ARx_Elements3.ag/ASSIGNMENT}
   @{" Assignment clause                   " link ARx_Elements3.ag/ASSIGNMENT}
   @{" Astonishment factor                 " link ARx_Func3.ag/LOGFILE 17}
   @{" Author                              " link ARx_Intro.ag/AUTHOR}

@{fg highlight}B@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" B, identifying a binary string      " link ARx_Elements.ag/HEXSTRING 16}
   @{" B2C() Built-in function             " link ARx_Func2.ag/B2C()}
   @{" Back up in PARSE source string      " link ARx_Instr2.ag/PARSETMP6 100}
   @{" BADDR() Support function            " link ARx_Func4.ag/BADDR()}
   @{" Basic Elements                      " link ARx_Elements.ag/MAIN}
   @{" Binary string                       " link ARx_Elements.ag/HEXSTRING}
   @{" Binary, DATATYPE() argument         " link ARx_Func3.ag/DATATYPESUB}
   @{" Bit-wise operation functions        " link ARx_Func4.ag/BITLIST}
   @{" BITAND() Built-in function          " link ARx_Func4.ag/BITAND()}
   @{" BITCHG() Built-in function          " link ARx_Func4.ag/BITCHG()}
   @{" BITCLR() Built-in function          " link ARx_Func4.ag/BITCLR()}
   @{" BITCOMP() Built-in function         " link ARx_Func4.ag/BITCOMP()}
   @{" BITOR() Built-in function           " link ARx_Func4.ag/BITOR()}
   @{" BITSET() Built-in function          " link ARx_Func4.ag/BITSET()}
   @{" BITTST() Built-in function          " link ARx_Func4.ag/BITTST()}
   @{" BITXOR() Built-in function          " link ARx_Func4.ag/BITXOR()}
   @{" Blank lines                         " link ARx_Elements3.ag/NULL 7}
   @{" Boolean, defined                    " link ARexxGuide.guide/GLOSSARY 19}
   @{" BoolReq: Help system function       " link ARx_Tutor.ag/BOOLREQ}
   @{" Branch name                         " link ARx_Elements2.ag/COMPVAR5}
   @{" Branch name, Use of constant        " link ARx_Elements.ag/CONSTANT 7}
   @{" Branch variable                     " link ARx_Elements2.ag/COMPVAR3}
   @{" BREAK: Instruction keyword          " link ARx_Instr.ag/BREAK}
   @{" Breaking structure                  " link ARx_Instr.ag/BREAKSTRUCT}
   @{" BREAK_C                             " link ARx_Instr3.ag/BREAK_C}
   @{" BREAK_D                             " link ARx_Instr3.ag/BREAK_}
   @{" BREAK_E                             " link ARx_Instr3.ag/BREAK_}
   @{" BREAK_F                             " link ARx_Instr3.ag/BREAK_}
   @{" Building a new help-key macro       " link ARx_Tutor.ag/BUILDHELP}
   @{" Built-in function                   " link ARx_Elements3.ag/BLTFUNC}
   @{" Busy-loop                           " link ARx_Func3.ag/DELAY() 6}
   @{" BY, DO subkeyword                   " link ARx_Instr.ag/DOOPT2 50}
   @{" Byte boundaries                     " link ARx_Elements.ag/HEXSTRING 25}

@{fg highlight}C@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" C2B() Built-in function             " link ARx_Func2.ag/C2B()}
   @{" C2D() Built-in function             " link ARx_Func2.ag/C2D()}
   @{" C2X() Built-in function             " link ARx_Func2.ag/C2X()}
   @{" CACHE, NUMERIC option               " link ARx_Instr2.ag/OPTIONS 23}
   @{" CALL: Instruction keyword           " link ARx_Instr.ag/CALL}
   @{" Case-sensitivity in PARSE template  " link ARx_Instr2.ag/PARSETMP3 35}
   @{" CD, changed directory with PRAGMA() " link ARx_Func3.ag/PRAGMASUB}
   @{" CENTER() Built-in function          " link ARx_Func.ag/CENTER()}
   @{" Char/Num translation functions      " link ARx_Func2.ag/TRANLIST}
   @{" Character position                  " link ARx_Instr2.ag/PARSETMP4}
   @{" Character translat                  " link ARx_Func2.ag/TRANLIST}
   @{" Check unique datatypes              " link ARx_Tknq.ag/VERIFYNOTE}
   @{" Clause                              " link ARx_Elements3.ag/CLAUSE}
   @{"    Assignment                       " link ARx_Elements3.ag/ASSIGNMENT}
   @{"    Commands                         " link ARx_Elements3.ag/COMMAND}
   @{"    Instructions                     " link ARx_Elements3.ag/INSTRUCTION}
   @{"    Label                            " link ARx_Elements3.ag/LABEL}
   @{"    Null                             " link ARx_Elements3.ag/NULL}
   @{"    Including several on one line    " link ARx_Elements.ag/INLINE 8}
   @{" Clause information, Help system     " link ARx_Tutor.ag/FULLHELP}
   @{" Clip-list                           " link ARx_Tknq.ag/CLIPLIST}
   @{"    Removing entries                 " link ARx_Tknq.ag/CLIPLIST 37}
   @{" CLOSE() Built-in function           " link ARx_Func3.ag/CLOSE()}
   @{" CLOSEPORT() Support function        " link ARx_Func4.ag/CLOSEPORT()}
   @{" CMS                                 " link ARx_Cmd.ag/EXECIO 34}
   @{" Colon: Label identifier             " link ARx_Elements.ag/LABELID}
   @{" Color strings                       " link ARx_Instr3.ag/EXPOSE 34}
   @{" Combining markers in PARSE template " link ARx_Instr2.ag/PARSETMP6}
   @{" Comma                               " link ARx_Elements.ag/COMMA}
   @{"    Continuation character           " link ARx_Elements.ag/COMMA}
   @{"    Used in an argument string       " link ARx_Elements3.ag/EXTFUNC 28}
   @{" Comma: AddComma(): add to integer   " link ARx_Tknq.ag/ADDCOMMA()}
   @{" COMMAND, ADDRESS option             " link ARx_Instr.ag/ADDRESS 8}
   @{" Command clause                      " link ARx_Elements3.ag/CMDSTRING}
   @{"    Assigning output to stem         " link ARx_Cmd.ag/EXECIO 14}
   @{"    Default host                     " link ARx_Elements3.ag/DEFHOST}
   @{"    Determine initial host           " link ARx_Elements3.ag/INITHOST}
   @{"    Host: what is it?                " link ARx_Elements3.ag/HOST}
   @{"    Entering in a script             " link ARx_Elements3.ag/CMDSTRING}
   @{"    Example script                   " link ARx_Elements3.ag/TTXCOMMAND}
   @{"    Retrieve result                  " link ARx_Tknq.ag/READCMD}
   @{" Command error                       " link ARx_Instr3.ag/ERROR}
   @{" Command failure                     " link ARx_Instr3.ag/FAILURE}
   @{" Command inhibition, in TRACE        " link ARx_Instr3.ag/TRACEOPT2}
   @{" Command programs                    " link ARx_Cmd.ag/MAIN}
   @{" Command returned 20                 " link ARx_Instr3.ag/FAILURE 17}
   @{" Command returned 5/1                " link ARx_Elements.ag/COMMENT 19}
   @{" Comment tokens                      " link ARx_Elements.ag/COMMENT}
   @{"    Nested comment                    " link ARx_Elements.ag/COMMENT 10}
   @{" Comparative                         " link ARx_Operator.ag/COMPARISON}
   @{" COMPARE() Built-in function         " link ARx_Func.ag/COMPARE()}
   @{" Comparison functions                " link ARx_Func.ag/CMPRLIST}
   @{" Comparison operator                 " link ARx_Operator.ag/COMPARISON}
   @{"    Table                            " link ARx_Operator.ag/CMPRTABLE}
   @{" Compatibility issues                " link ARx_Intro.ag/COMPATIBILITY}
   @{" Complete program example            " link ARx_PrgUcr.ag/UCREXPLAN}
   @{" Compound symbol                     " link ARx_Elements.ag/VARSYMBOL}
   @{" Compound variable                   " link ARx_Elements2.ag/COMPVAR}
   @{"    Case sensitivity                 " link ARx_Elements2.ag/COMPVAR5 30}
   @{"    Default value                    " link ARx_Elements2.ag/COMPVAR6}
   @{"    Finding values                   " link ARx_Elements2.ag/COMPVAR7}
   @{"    Overview                         " link ARx_Elements2.ag/COMPVAR1}
   @{"    Stem                             " link ARx_Elements2.ag/COMPVAR2}
   @{"    Tail                             " link ARx_Elements2.ag/COMPVAR3}
   @{"    Strings in tail                  " link ARx_Elements2.ag/COMPVAR5}
   @{" COMPRESS() Built-in function        " link ARx_Func.ag/COMPRESS()}
   @{" CON: Open window, example           " link ARx_Tknq.ag/CONWINDOW}
   @{" CON: I/O functions                  " link ARx_Func3.ag/OTHERIO}
   @{" CON:, defined                       " link ARexxGuide.guide/GLOSSARY 35}
   @{" Concatenate, defined                " link ARexxGuide.guide/GLOSSARY 41}
   @{" Concatenation operator              " link ARx_Operator.ag/CONCATENATION}
   @{"    Used for formatted table         " link ARx_Tknq.ag/FORMATNOTE 40}
   @{" CONDITION()                         " link ARx_Instr3.ag/SIGTRAP 45}
   @{" Conditional expression              " link ARx_Instr.ag/DOOPT4}
   @{"    In DO instruction                " link ARx_Instr.ag/DOOPT4}
   @{"    Using functions                  " link ARx_Elements3.ag/CONDITIONAL 30}
   @{" Console device, defined             " link ARexxGuide.guide/GLOSSARY 35}
   @{" Constant symbol                     " link ARx_Elements.ag/CONSTANT}
   @{"    Used as file-handle name         " link ARx_Func3.ag/LOGFILE 46}
   @{" Continuation token                  " link ARx_Elements.ag/COMMA}
   @{" Control loop                        " link ARx_Instr.ag/DOOPT6}
   @{" Control-structure, defined          " link ARexxGuide.guide/GLOSSARY 59}
   @{" COPIES() Built-in function          " link ARx_Func.ag/COPIES()}
   @{" Copy data from the program code     " link ARx_Tknq.ag/INLDATA}
   @{" Count of stem variables             " link ARx_Instr.ag/DOOPT2 76}
   @{" CountChar(): count characters       " link ARx_Tknq.ag/COUNTCHAR()}
   @{" Counter                             " link ARx_Instr.ag/DOOPT2 8}
   @{" CountWords(): count words in file   " link ARx_Tknq.ag/COUNTWORDS()}
   @{" Cowlishaw, M.F.                     " link ARx_Intro.ag/REF}
   @{" Current host                        " link ARx_Elements3.ag/DEFHOST}

@{fg highlight}D@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" D2C() Built-in function             " link ARx_Func2.ag/D2C()}
   @{" D2X() Built-in function             " link ARx_Func2.ag/D2X()}
   @{" Data file: pull single record from  " link ARx_Tknq.ag/SEEKTORECORD()}
   @{" Data scratchpad                     " link ARx_Tknq.ag/SCRATCHPAD}
   @{" Data storage/retrieval, examples    " link ARx_Tknq.ag/MAIN}
   @{" Database, read records              " link ARx_Tknq.ag/SEEKTORECORD()}
   @{" Datatype                            " link ARx_Elements2.ag/VARTYPE}
   @{" DATATYPE() Built-in function        " link ARx_Func3.ag/DATATYPE()}
   @{"    Arguments                        " link ARx_Func3.ag/DATATYPESUB}
   @{" DATE() Built-in function            " link ARx_Func2.ag/DATE()}
   @{"    Arguments                        " link ARx_Func2.ag/DATESUB}
   @{"    Persistence of settings          " link ARx_Func2.ag/TIMEPERSIST}
   @{" Debug, defined                      " link ARexxGuide.guide/GLOSSARY 64}
   @{" Debugging a macro                   " link ARx_Tutor.ag/MCR7}
   @{" Default address                     " link ARx_Elements3.ag/DEFHOST}
   @{" Default address, PARSE result       " link ARx_Instr2.ag/PARSESRC5 29}
   @{" Default host                        " link ARx_Elements3.ag/DEFHOST}
   @{" Default precision                   " link ARx_Elements2.ag/PRECISION}
   @{" Default value, compound variable    " link ARx_Elements2.ag/COMPVAR6}
   @{" Default value, variable             " link ARx_Elements2.ag/VARIABLE 16}
   @{" DELAY() Support function            " link ARx_Func3.ag/DELAY()}
   @{" DELETE() Support function           " link ARx_Func2.ag/DELETE()}
   @{" DELSTR() Built-in function          " link ARx_Func.ag/DELSTR()}
   @{" DELWORD() Built-in function         " link ARx_Func2.ag/DELWORD()}
   @{" Derived name of compound variable   " link ARx_Elements2.ag/COMPVAR5}
   @{" Devices, SHOWLIST() argument        " link ARx_Func2.ag/SHOWLISTSUB}
   @{" DIGITS, NUMERIC option              " link ARx_Instr2.ag/NUMERIC 13}
   @{" DIGITS() Built-in function          " link ARx_Func3.ag/DIGITS()}
   @{" DIGITS: Numbers larger than         " link ARx_Elements2.ag/PRECISION 16}
   @{" Directory, SHOWLIST() argument      " link ARx_Func2.ag/SHOWDIR()}
   @{" Directory, PRAGMA() option          " link ARx_Func3.ag/PRAGMASUB}
   @{" DisplayAG: Help System function     " link ARx_Tutor.ag/DISPLAYAG}
   @{" DisplayStatus: Help System function " link ARx_Tutor.ag/DISPLAYSTATUS}
   @{" DO: Instruction keyword             " link ARx_Instr.ag/DO}
   @{"    Empty loop                       " link ARx_Elements2.ag/COMPVAR7 9}
   @{" DROP: Instruction keyword           " link ARx_Instr.ag/DROP}
   @{" Dummy instruction                   " link ARx_Instr.ag/NOP}
   @{" Dyadic, defined                     " link ARexxGuide.guide/GLOSSARY 68}

@{fg highlight}E@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" ECHO: Instruction keyword           " link ARx_Instr3.ag/SAY}
   @{" EditorExit: Help System function    " link ARx_Tutor.ag/EDITOREXIT}
   @{" Egregious, defined                  " link ARexxGuide.guide/GLOSSARY 75}
   @{" Elapsed-timer                       " link ARx_Func2.ag/TIMENOTE}
   @{" ELSE: Instruction keyword           " link ARx_Instr.ag/IF}
   @{" END: Instruction keyword            " link ARx_Instr.ag/END}
   @{" Environmental variable              " link ARx_Tutor.ag/HELPENVVAR}
   @{" Environmental variable: Get and set " link ARx_Tknq.ag/GETSETENV}
   @{" EOF() Built-in function             " link ARx_Func3.ag/EOF()}
   @{" Error code                          " link ARx_Error.ag/MAIN}
   @{" Error message                       " link ARx_Error.ag/MAIN}
   @{" Error message: redirect to a file   " link ARx_Instr3.ag/SYNTAX 10}
   @{" ERRORTEXT() Built-in function       " link ARx_Func3.ag/ERRORTEXT()}
   @{" ExecIO                              " link ARx_Cmd.ag/EXECIO}
   @{" EXISTS, ARG() argument              " link ARx_Func3.ag/ARG() 12}
   @{" EXISTS() Support function           " link ARx_Func2.ag/EXISTS()}
   @{" EXIT: Instruction keyword           " link ARx_Instr.ag/EXIT}
   @{" Exponential notatation, defined     " link ARexxGuide.guide/GLOSSARY 80}
   @{" Exponential notation                " link ARx_Elements2.ag/NUMBER}
   @{" EXPORT() Support function           " link ARx_Func4.ag/EXPORT()}
   @{" EXPOSE: Instruction keyword         " link ARx_Instr3.ag/EXPOSE}
   @{" Expression                          " link ARx_Elements2.ag/EXPRESSION}
   @{"    Accidental commands              " link ARx_Elements3.ag/ACICMD}
   @{"    Function                         " link ARx_Elements3.ag/FUNCTION}
   @{"    Number                           " link ARx_Elements2.ag/NUMBER}
   @{"    Operation                        " link ARx_Elements3.ag/OPERATION}
   @{"    String                           " link ARx_Elements2.ag/STRINGEXPR}
   @{"    Variable                         " link ARx_Elements2.ag/VARIABLE}
   @{" Extending stem variable             " link ARx_Elements2.ag/COMPVAR3}
   @{" EXTERNAL, PARSE option              " link ARx_Instr2.ag/PARSESRC3}
   @{" External function                   " link ARx_Elements3.ag/EXTFUNC}

@{fg highlight}F@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" FAILAT, OPTIONS option              " link ARx_Instr2.ag/OPTIONS 17}
   @{" FAILURE, SIGNAL condition           " link ARx_Instr3.ag/FAILURE}
   @{" Field divider                       " link ARx_Tknq.ag/COUNTCHAR() 11}
   @{" File extension                      " link ARx_Instr2.ag/PARSESRC5 25}
   @{" File handle                         " link ARx_Func3.ag/LOGFILE}
   @{" File input/output functions         " link ARx_Func3.ag/FILEIOLIST}
   @{"    Access protection                " link ARx_Func3.ag/IOFUNC 59}
   @{"    File pointer                     " link ARx_Func3.ag/IOFUNC 22}
   @{"    Error conditions                 " link ARx_Func3.ag/OPEN() 35}
   @{"    Information about                " link ARx_Func2.ag/STATEF()}
   @{"    Logical file name                " link ARx_Func3.ag/LOGFILE}
   @{"    Moving to new location           " link ARx_Func3.ag/IOFUNC 53}
   @{"    Other devices                    " link ARx_Func3.ag/OTHERIO}
   @{"    Overview of I/O functions        " link ARx_Func3.ag/IOFUNC}
   @{"    Redirection                      " link ARx_Func3.ag/STDIO 21}
   @{"    Standard I/O files               " link ARx_Func3.ag/STDIO}
   @{"    Storing ARexx files              " link ARx_Intro.ag/STARTUP 18}
   @{" File management functions           " link ARx_Func2.ag/FILEMGTLIST}
   @{" Filename: split name from path      " link ARx_Tknq.ag/FILENAME}
   @{" Filename extension                  " link ARx_Cmd.ag/RX 9}
   @{" File size, determining              " link ARx_Func2.ag/STATEF()}
   @{" FIND() Built-in function            " link ARx_Func.ag/FIND()}
   @{" Finding values, compound variable   " link ARx_Elements2.ag/COMPVAR7}
   @{" Fixed symbol                        " link ARx_Elements.ag/CONSTANT}
   @{" FOR, DO subkeyword                  " link ARx_Instr.ag/DOOPT3}
   @{" FORBID() Support function           " link ARx_Func4.ag/FORBID()}
   @{" FOREVER, DO subkeyword              " link ARx_Instr.ag/DOOPT5}
   @{" Foreword                            " link ARx_Intro.ag/MAIN}
   @{" FORM, NUMERIC option                " link ARx_Instr2.ag/NUMERIC 28}
   @{" FORM() Built-in function            " link ARx_Func3.ag/FORM()}
   @{" Format data into table form         " link ARx_Tknq.ag/FORMATNOTE}
   @{" Format(): round and format number   " link ARx_Tknq.ag/FORMAT()}
   @{" Formatting strings                  " link ARx_Instr3.ag/EXPOSE 19}
   @{" FREEMEM() Support function          " link ARx_Func4.ag/FREEMEM()}
   @{" FREESPACE() Support function        " link ARx_Func4.ag/FREESPACE()}
   @{" Function                            " link ARx_Elements3.ag/FUNCTION}
   @{"    Argument                         " link ARx_Elements3.ag/FUNCARG}
   @{"    Host                             " link ARx_Elements3.ag/LIBFUNC}
   @{"    Built-in                         " link ARx_Elements3.ag/BLTFUNC}
   @{"    External                         " link ARx_Elements3.ag/EXTFUNC}
   @{"    Internal                         " link ARx_Elements3.ag/PROGFUNC}
   @{"    Library/Host                     " link ARx_Elements3.ag/LIBFUNC}
   @{"       Listing                       " link ARx_Func2.ag/SHOW() 31}
   @{"    Named by a variable              " link ARx_Instr.ag/CALL 35}
   @{" Function reference                  " link ARx_Func.ag/MAIN}
   @{"    ARexx control                    " link ARx_Func3.ag/ARXLIST}
   @{"    Bit-wise                         " link ARx_Func4.ag/BITLIST}
   @{"    Char/Num                         " link ARx_Func2.ag/TRANLIST}
   @{"    Comparison                       " link ARx_Func.ag/CMPRLIST}
   @{"    File I/O                         " link ARx_Func3.ag/FILEIOLIST}
   @{"       File management               " link ARx_Func2.ag/FILEMGTLIST}
   @{"       Informational                 " link ARx_Func2.ag/INFOLIST}
   @{"       Memory control                " link ARx_Func4.ag/MEMLIST}
   @{"       Message port                  " link ARx_Func4.ag/PORTLIST}
   @{"       Number changes                " link ARx_Func2.ag/NUMLIST}
   @{"       String changes                " link ARx_Func.ag/STRLIST}
   @{"       Word changes                  " link ARx_Func2.ag/WORDLIST}
   @{" FUZZ, NUMERIC option                " link ARx_Instr2.ag/NUMERIC 20}
   @{" FUZZ() Built-in function            " link ARx_Func3.ag/FUZZ()}

@{fg highlight}G@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" Get and send message packet         " link ARx_Tknq.ag/PORTXMP}
   @{" Get and set environmental variable  " link ARx_Tknq.ag/GETSETENV}
   @{" GETARG() Support function           " link ARx_Func4.ag/GETARG()}
   @{" GetCLine: Help System function      " link ARx_Tutor.ag/GETCLINE}
   @{" GETCLIP() Built-in function         " link ARx_Func3.ag/GETCLIP()}
   @{" GetCPos: Help System function       " link ARx_Tutor.ag/GETCPOS}
   @{" GetCWord: Help System function      " link ARx_Tutor.ag/GETCWORD}
   @{" GETPKT() Support function           " link ARx_Func4.ag/GETPKT()}
   @{" GETSPACE() Support function         " link ARx_Func4.ag/GETSPACE()}
   @{" Getting ARexx started               " link ARx_Intro.ag/STARTUP}
   @{" GetWinInfo: Help System function    " link ARx_Tutor.ag/GETWININFO}
   @{" Global tracing console              " link ARx_Cmd.ag/TCO}
   @{" Global variables                    " link ARx_Tknq.ag/CLIPLIST}
   @{" Global variable, in subroutine      " link ARx_Instr3.ag/EXPOSE 14}
   @{" Glossary of terms                   " link ARexxGuide.guide/GLOSSARY}
   @{" Goldberg, Gabriel                   " link ARx_Intro.ag/REF}
   @{" Growing a macro                     " link ARx_Tutor.ag/MCR5}
   @{" GUI, defined                        " link ARexxGuide.guide/GLOSSARY 100}

@{fg highlight}H@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" HALT, SIGNAL condition              " link ARx_Instr3.ag/HALT}
   @{" Handlers, SHOWLIST() argument       " link ARx_Func2.ag/SHOWLISTSUB}
   @{" HASH() Built-in function            " link ARx_Func2.ag/HASH()}
   @{" Hawes, William S.                   " link ARx_Intro.ag/REF}
   @{" Hello World!                        " link ARx_Intro.ag/HIWRLD}
   @{" Help system                         " link ARx_Tutor.ag/HELPKEYMACRO}
   @{"    Setup                            " link ARx_Tutor.ag/SETUPHELP}
   @{" Hex string                          " link ARx_Elements.ag/HEXSTRING}
   @{" Hex, DATATYPE argument              " link ARx_Func3.ag/DATATYPESUB}
   @{" Hexadecimal, changing to character  " link ARx_Func2.ag/C2X() 11}
   @{" HI: Command utility                 " link ARx_Cmd.ag/HI}
   @{" Host, current and previous          " link ARx_Elements3.ag/DEFHOST 10}

@{fg highlight}I@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" I/O, defined                        " link ARexxGuide.guide/GLOSSARY 122}
   @{"    Functions                        " link ARx_Func3.ag/FILEIOLIST}
   @{"    Other devices                    " link ARx_Func3.ag/OTHERIO}
   @{"    Overview of I/O functions        " link ARx_Func3.ag/IOFUNC}
   @{"    Setting the logical file name    " link ARx_Func3.ag/LOGFILE}
   @{"    Standard I/O files               " link ARx_Func3.ag/STDIO}
   @{"    Technique examples               " link ARx_Tknq.ag/MAIN}
   @{" IF: Instruction keyword             " link ARx_Instr.ag/IF}
   @{"    A closer look                    " link ARx_Tutor.ag/MCR3}
   @{" Implied semicolons                  " link ARx_Elements.ag/SEMICOLON 12}
   @{" IMPORT() Support function           " link ARx_Func4.ag/IMPORT()}
   @{" In-line script                      " link ARx_Elements.ag/INLINE}
   @{"    Stored on clip-list              " link ARx_Tknq.ag/CLIPLIST 27}
   @{" Index variable                      " link ARx_Instr.ag/DOOPT2 8}
   @{" Index variable, with END            " link ARx_Instr.ag/END 25}
   @{" INDEX() Built-in function           " link ARx_Func.ag/INDEX()}
   @{" Informational functions             " link ARx_Func2.ag/INFOLIST}
   @{" Input/Output, defined               " link ARexxGuide.guide/GLOSSARY 122}
   @{"    Technique examples               " link ARx_Tknq.ag/MAIN}
   @{" INSERT() Built-in function          " link ARx_Func.ag/INSERT()}
   @{" Instruction                         " link ARx_Elements3.ag/INSTRUCTION}
   @{" Instruction reference               " link ARx_Instr.ag/MAIN}
   @{" Integer: AddComma(): add commas to  " link ARx_Tknq.ag/ADDCOMMA()}
   @{"    Requirements                     " link ARexxGuide.guide/IACTEXMP}
   @{" Interactive examples, list          " link ARx_Tutor.ag/MAIN}
   @{" Interactive trace, TRACE option     " link ARx_Instr3.ag/TRACEOPT1}
   @{"    TS command                       " link ARx_Cmd.ag/TS}
   @{" Internal function                   " link ARx_Elements3.ag/PROGFUNC}
   @{" INTERPRET: Instruction keyword      " link ARx_Instr.ag/INTERPRET}
   @{"    Similarity to VALUE()            " link ARx_Tknq.ag/VALUENOTE}
   @{"    Using BREAK                      " link ARx_Instr.ag/BREAKSTRUCT 22}
   @{" Interpreted variable name           " link ARx_Tknq.ag/VALUENOTE}
   @{" Interpreter, defined                " link ARexxGuide.guide/GLOSSARY 117}
   @{" Interprocess Communication          " link ARx_Elements3.ag/COMMAND}
   @{" Interrupts, SHOWLIST() argument     " link ARx_Func2.ag/SHOWLISTSUB}
   @{" Interval timer                      " link ARx_Func2.ag/TIMENOTE}
   @{" Introduction to ARexx               " link ARx_Intro.ag/MAIN}
   @{" IO, defined                         " link ARexxGuide.guide/GLOSSARY 122}
   @{" IOERR, SIGNAL condition             " link ARx_Instr3.ag/IOERR}
   @{" Iterate, defined                    " link ARexxGuide.guide/GLOSSARY 127}
   @{" ITERATE: Instruction keyword        " link ARx_Instr.ag/ITERATE}

@{fg highlight}J@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" Julian, TIME() argument             " link ARx_Func2.ag/DATESUB}
   @{" Jump                                " link ARx_Elements2.ag/SIGL}

@{fg highlight}K@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" Keyword conflict                    " link ARx_Elements3.ag/CMDSTRING 19}
   @{" Keyword, defined                    " link ARexxGuide.guide/GLOSSARY 135}

@{fg highlight}L@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" Label clause                        " link ARx_Elements3.ag/LABEL}
   @{"    Identified by colon              " link ARx_Elements.ag/LABELID}
   @{"    Stacked                          " link ARx_Elements3.ag/LABEL 7}
   @{" LASTPOS() Built-in function         " link ARx_Func.ag/LASTPOS()}
   @{" Launch a new script                 " link ARx_Elements3.ag/EXTFUNC}
   @{" LEAVE: Instruction keyword          " link ARx_Instr.ag/LEAVE}
   @{" LEFT() Built-in function            " link ARx_Func.ag/LEFT()}
   @{" LENGTH() Built-in function          " link ARx_Func.ag/LENGTH()}
   @{" Lha: Program example, Uncrunch.rexx " link ARx_PrgUcr.ag/UCREXPLAN}
   @{" Library function                    " link ARx_Elements3.ag/LIBFUNC}
   @{"    Adding to list                   " link ARx_Func3.ag/ADDLIB()}
   @{"    Removing from list               " link ARx_Func3.ag/REMLIB()}
   @{" Library: Determining version number " link ARx_Tknq.ag/LIBVER()}
   @{" Line-feed character                 " link ARx_Elements.ag/HEXSTRING 65}
   @{" LINES() Built-in function           " link ARx_Func3.ag/LINES()}
   @{" Literal string                      " link ARx_Elements.ag/STRING}
   @{" Logical device, defined             " link ARexxGuide.guide/GLOSSARY 139}
   @{" Logical expression                  " link ARx_Elements3.ag/CONDITIONAL}
   @{" Logical file name                   " link ARx_Func3.ag/LOGFILE}
   @{" Logical operator                    " link ARx_Operator.ag/LOGICAL}
   @{"    Table                            " link ARx_Operator.ag/LOGTABLE}
   @{" Loop, defined                       " link ARexxGuide.guide/GLOSSARY 145}
   @{" Lowercase, converting to            " link ARx_Func.ag/TRANSLATE() 19}
   @{" Lowercase, DATATYPE() option        " link ARx_Func3.ag/DATATYPESUB}

@{fg highlight}M@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" Macro language                      " link ARx_Elements3.ag/COMMAND}
   @{" Macro: Adding ARexx control         " link ARx_Tutor.ag/MCR2}
   @{" MAKEDIR() Support function          " link ARx_Func2.ag/MAKEDIR()}
   @{" Mantra, defined                     " link ARexxGuide.guide/GLOSSARY 149}
   @{" Matched pattern                     " link ARx_Instr2.ag/PARSETMP3}
   @{" Matching strings                    " link ARx_Func.ag/CMPRLIST 15}
   @{" Math coprocessor                    " link ARx_Instr2.ag/PARSESRC6 19}
   @{" MAX() Built-in function             " link ARx_Func2.ag/MAX()}
   @{" MED/MOD                             " link ARx_Intro.ag/WHYREXX 39}
   @{" Memory addresses                    " link ARx_Elements.ag/HEXSTRING}
   @{" Memory management functions         " link ARx_Func4.ag/MEMLIST}
   @{" Memory-types, SHOWLIST() argument   " link ARx_Func2.ag/SHOWLISTSUB}
   @{" Message port functions              " link ARx_Func4.ag/PORTLIST}
   @{"    Using in script                  " link ARx_Tknq.ag/PORTXMP}
   @{" MIN() Built-in function             " link ARx_Func2.ag/MIN()}
   @{" Mixed, DATATYPE() argument          " link ARx_Func3.ag/DATATYPESUB}
   @{" Month, DATE() argument              " link ARx_Func2.ag/DATESUB}
   @{" Multiple argument strings           " link ARx_Instr2.ag/PARSESRC1 20}
   @{" Multiple template                   " link ARx_Instr2.ag/PARSETMP7}

@{fg highlight}N@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" Natural typing                      " link ARx_Elements2.ag/VARTYPE}
   @{" Navigating hints                    " link ARx_Intro.ag/NAVG}
   @{" Nested comment                      " link ARx_Elements.ag/COMMENT 10}
   @{" Nested, defined                     " link ARexxGuide.guide/GLOSSARY 155}
   @{" NEXT() Support function             " link ARx_Func4.ag/NEXT()}
   @{" NIL:, defined                       " link ARexxGuide.guide/GLOSSARY 163}
   @{" Node-Surfing                        " link ARx_Intro.ag/NAVG 44}
   @{" NOP: Instruction keyword            " link ARx_Instr.ag/NOP}
   @{" NOVALUE                             " link ARx_Instr3.ag/NOVALUE}
   @{" Null clause                         " link ARx_Elements3.ag/NULL}
   @{" NULL() Support function             " link ARx_Func4.ag/NULL()}
   @{" Number                              " link ARx_Elements2.ag/NUMBER}
   @{"    Possible loss of precision       " link ARx_Operator.ag/ARITHMETIC 23}
   @{"    Precision                        " link ARx_Elements2.ag/PRECISION}
   @{"    Precision, Setting               " link ARx_Instr2.ag/NUMERIC}
   @{"    Treated as string                " link ARx_Elements2.ag/NUMASTEXT}
   @{" Number manipulation functions       " link ARx_Func2.ag/NUMLIST}
   @{" Numeric                             " link ARx_Func3.ag/DATATYPESUB}
   @{" NUMERIC: Instruction keyword        " link ARx_Instr2.ag/NUMERIC}
   @{" NUMERIC: PARSE option               " link ARx_Instr2.ag/PARSESRC4}

@{fg highlight}O@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" OFFSET() Support function           " link ARx_Func4.ag/OFFSET()}
   @{" OMITTED                             " link ARx_Func3.ag/ARG() 12}
   @{" ON | OFF, SIGNAL options            " link ARx_Instr3.ag/SIGTRAP}
   @{" Open console windows for I/O        " link ARx_Tknq.ag/CONWINDOW}
   @{" OPEN() Built-in function            " link ARx_Func3.ag/OPEN()}
   @{" OPENPORT() Support function         " link ARx_Func4.ag/OPENPORT()}
   @{" Operation                           " link ARx_Elements3.ag/OPERATION}
   @{" Operator                            " link ARx_Operator.ag/MAIN}
   @{"    priority                         " link ARx_Operator.ag/PRIORITY}
   @{"    Table of arithmetic              " link ARx_Operator.ag/ARITHTABLE}
   @{"    Table of comparison              " link ARx_Operator.ag/CMPRTABLE}
   @{"    Table of logical                 " link ARx_Operator.ag/LOGTABLE}
   @{" OPTIONS: Instruction keyword        " link ARx_Instr2.ag/OPTIONS}
   @{" OTHERWISE: Instruction keyword      " link ARx_Instr3.ag/OTHERWISE}
   @{"    Implied semicolon                " link ARx_Elements.ag/SEMICOLON 6}
   @{" Output text to a printer            " link ARx_Tknq.ag/PRINTTEST}
   @{" OVERLAY() Built-in function         " link ARx_Func.ag/OVERLAY()}
   @{" Overview: Compound variables        " link ARx_Elements2.ag/COMPVAR1}
   @{" Overview: I/O functions             " link ARx_Func3.ag/IOFUNC}

@{fg highlight}P@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" Parentheses                         " link ARx_Elements.ag/PAREN}
   @{" Parentheses: Change priority        " link ARx_Operator.ag/PARENPRIORITY}
   @{" PARSE: Instruction keyword          " link ARx_Instr2.ag/PARSE}
   @{"    Template                         " link ARx_Instr2.ag/PARSETMP1}
   @{"       Back up in source string      " link ARx_Instr2.ag/PARSETMP6 100}
   @{"       End position                  " link ARx_Instr2.ag/PARSETMP6 27}
   @{"       Pattern                       " link ARx_Instr2.ag/PARSETMP3}
   @{"       Pattern marker                " link ARx_Instr2.ag/PARSETMP3}
   @{"       Period: Placeholder token     " link ARx_Instr2.ag/PARSETMP2 46}
   @{" ParseFileName(): split name/path    " link ARx_Tknq.ag/FILENAME}
   @{" Pattern                             " link ARx_Instr2.ag/PARSETMP3}
   @{" Pattern marker                      " link ARx_Instr2.ag/PARSETMP3}
   @{" Pause for port to open              " link ARx_Cmd.ag/WAITFORPORT}
   @{" Period: Placeholder token           " link ARx_Instr2.ag/PARSETMP2 46}
   @{" PERMIT() Support function           " link ARx_Func4.ag/PERMIT()}
   @{" Pipe: Get command output with pipe  " link ARx_Tknq.ag/READCMD}
   @{" Placeholder token                   " link ARx_Instr2.ag/PARSETMP2 46}
   @{" Pointer                             " link ARx_Func3.ag/IOFUNC 22}
   @{"    Moving                           " link ARx_Func3.ag/SEEK()}
   @{" Port, SHOWLIST() argument           " link ARx_Func2.ag/SHOWLISTSUB}
   @{" Port, Waiting for a port to open    " link ARx_Cmd.ag/WAITFORPORT 6}
   @{" POS() Built-in function             " link ARx_Func.ag/POS()}
   @{" Positional marker                   " link ARx_Instr2.ag/PARSETMP4}
   @{" PRAGMA() Built-in function          " link ARx_Func3.ag/PRAGMA()}
   @{" Precision of number                 " link ARx_Elements2.ag/PRECISION}
   @{" Preface                             " link Arx_Intro.ag/MAIN}
   @{" Preferences, defined                " link ARexxGuide.guide/GLOSSARY 192}
   @{" Prefix, defined                     " link ARexxGuide.guide/GLOSSARY 68}
   @{" Previous host                       " link ARx_Elements3.ag/DEFHOST 10}
   @{" Printing, example                   " link ARx_Tknq.ag/PRINTTEST}
   @{" Print: I/O functions                " link ARx_Func3.ag/OTHERIO}
   @{" Printer, sending output to          " link ARx_Func3.ag/OTHERIO}
   @{" Priority                            " link ARx_Func3.ag/PRAGMASUB 22}
   @{" Priority of operator                " link ARx_Operator.ag/PRIORITY}
   @{" Priority, parentheses               " link ARx_Operator.ag/PARENPRIORITY}
   @{" PROCEDURE: Instruction keyword      " link ARx_Instr3.ag/PROCEDURE}
   @{" Processor, Determining system's     " link ARx_Instr2.ag/PARSESRC6 16}
   @{" Program, start script from another  " link ARx_Elements3.ag/EXTFUNC}
   @{" Program not found                   " link ARx_Elements.ag/COMMENT 19}
   @{" Prompt, OPTIONS option              " link ARx_Instr2.ag/OPTIONS 12}
   @{" Prototyping, defined                " link ARexxGuide.guide/GLOSSARY 196}
   @{" PRT:, defined                       " link ARexxGuide.guide/GLOSSARY 201}
   @{"    I/O functions                    " link ARx_Func3.ag/OTHERIO}
   @{" Public message ports                " link ARx_Func2.ag/SHOW() 36}
   @{" PULL, PARSE option                  " link ARx_Instr2.ag/PARSESRC2}
   @{" PULL: Instruction keyword           " link ARx_Instr3.ag/PULL}
   @{" PUSH, Data-stream I/O               " link ARx_Instr3.ag/PUSHNOTE}
   @{" PUSH: Instruction keyword           " link ARx_Instr3.ag/PUSH}

@{fg highlight}Q@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" QUEUE: Instruction keyword          " link ARx_Instr3.ag/QUEUE}
   @{" Quotation marks                     " link ARx_Elements.ag/STRING}
   @{"    Using marks within a string      " link ARx_Elements.ag/STRING 26}
   @{"    Used in commands                 " link ARx_Elements3.ag/CMDSTRING}

@{fg highlight}R@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" RANDOM() Built-in function          " link ARx_Func2.ag/RANDOM()}
   @{" RANDU() Built-in function           " link ARx_Func2.ag/RANDU()}
   @{" RC: Special variable                " link ARx_Elements2.ag/RC}
   @{" READ, OPEN() argument               " link ARx_Func3.ag/OPEN() 19}
   @{" READCH() Built-in function          " link ARx_Func3.ag/READCH()}
   @{" READLN() Built-in function          " link ARx_Func3.ag/READLN()}
   @{" Redirection                         " link ARx_Func3.ag/STDIO 21}
   @{" Registration form                   " link ARexxGuide.guide/REG}
   @{" Relative marker                     " link ARx_Instr2.ag/PARSETMP4 32}
   @{" REMLIB() Built-in function          " link ARx_Func3.ag/REMLIB()}
   @{" RENAME() Support function           " link ARx_Func2.ag/RENAME()}
   @{" Repeating macro with an ARexx loop  " link ARx_Tutor.ag/MCR4}
   @{" Repetitor in DO instruction         " link ARx_Instr.ag/DOOPT1}
   @{"    TO/BY options                    " link ARx_Instr.ag/DOOPT2 50}
   @{" REPLY() Support function            " link ARx_Func4.ag/REPLY()}
   @{" ReqTools.library                    " link ARx_Elements3.ag/LIBFUNC 25}
   @{" Reserved, defined                   " link ARexxGuide.guide/GLOSSARY 206}
   @{"    Keywords                        " link ARx_Elements3.ag/INSTRUCTION 14}
   @{"    Characters                       " link ARx_Elements.ag/SPECCHAR}
   @{"    Operator tokens                  " link ARx_Elements.ag/OPERATOR 12}
   @{"    X and B                          " link ARx_Elements.ag/HEXSTRING 44}
   @{" Resolved name of the program        " link ARx_Instr2.ag/PARSESRC5 22}
   @{" Resources, SHOWLIST() argument      " link ARx_Func2.ag/SHOWLISTSUB}
   @{" RESULT: Special variable            " link ARx_Elements2.ag/RESULT}
   @{" RESULTS, OPTIONS option             " link ARx_Instr2.ag/OPTIONS 8}
   @{" Retrieve data from source code      " link ARx_Tknq.ag/INLDATA}
   @{" Retrieve result of AmigaDOS command " link ARx_Tknq.ag/READCMD}
   @{" Return code                         " link ARx_Elements2.ag/RC}
   @{" Return control                      " link ARx_Instr.ag/EXIT 5}
   @{" RETURN: Instruction keyword         " link ARx_Instr3.ag/RETURN}
   @{" Returned                            " link ARx_Instr3.ag/RETURN}
   @{" REVERSE() Built-in function         " link ARx_Func.ag/REVERSE()}
   @{" REXX host, Commands understood      " link ARx_Elements3.ag/DEFHOST 21}
   @{" REXX standard                       " link ARx_Intro.ag/COMPATIBILITY}
   @{" REXX: directory                     " link ARx_Intro.ag/STARTUP 18}
   @{" rexxarplib.library                  " link ARx_Elements3.ag/LIBFUNC 13}
   @{" RexxDosSupport.library              " link ARx_Elements3.ag/LIBFUNC 33}
   @{" RexxMast                            " link ARx_Cmd.ag/REXXMAST}
   @{" rexxreqtools.library                " link ARx_Elements3.ag/LIBFUNC 25}
   @{" rexxserdev.library                  " link ARx_Intro.ag/WHYREXX 36}
   @{" rexxsupport.library                 " link ARx_Func.ag/RXSPTLIB}
   @{" RIGHT() Built-in function           " link ARx_Func.ag/RIGHT()}
   @{" Round and format a number           " link ARx_Tknq.ag/FORMAT()}
   @{" Running a script                    " link ARx_Intro.ag/RUNAREXX}
   @{" RX: Command utility                 " link ARx_Cmd.ag/RX}
   @{" RXC: Command utility                " link ARx_Cmd.ag/RXC}
   @{" RXLIB: Command utility              " link ARx_Cmd.ag/RXLIB}
   @{" RXSET: Command utility              " link ARx_Cmd.ag/RXSET}
   @{" rx_intui.library                    " link ARx_Elements3.ag/LIBFUNC 13}

@{fg highlight}S@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" SAY: Instruction keyword            " link ARx_Instr3.ag/SAY}
   @{" Scan, in PARSE template             " link ARx_Instr2.ag/PARSETMP6 27}
   @{" Search path                         " link ARx_Cmd.ag/RX 9}
   @{" Search priority, in Library List    " link ARx_Func3.ag/ADDLIB() 17}
   @{" Seed                                " link ARx_Func2.ag/RANDOM() 22}
   @{" SEEK() Built-in function            " link ARx_Func3.ag/SEEK()}
   @{" SeekToRecord(): technique example   " link ARx_Tknq.ag/SEEKTORECORD()}
   @{" SELECT: Instruction keyword         " link ARx_Instr3.ag/SELECT}
   @{" Semaphores, SHOWLIST() argument     " link ARx_Func2.ag/SHOWLISTSUB}
   @{" Semicolon: Clause end symbol        " link ARx_Elements.ag/SEMICOLON}
   @{" Serial port                         " link ARx_Intro.ag/WHYREXX 36}
   @{" SetAddress: Help System function    " link ARx_Tutor.ag/SETADDRESS}
   @{" SETCLIP() Built-in function         " link ARx_Func3.ag/SETCLIP()}
   @{" SetExecStr: Help System function    " link ARx_Tutor.ag/SETEXECSTR}
   @{" Shareware                           " link ARexxGuide.guide/REG}
   @{" SHOW() Built-in function            " link ARx_Func2.ag/SHOW()}
   @{" SHOWDIR() Support function          " link ARx_Func2.ag/SHOWDIR()}
   @{" SHOWLIST() Options                  " link ARx_Func2.ag/SHOWLISTSUB}
   @{" SHOWLIST() Support function         " link ARx_Func2.ag/SHOWLIST()}
   @{" SIGL: Special variable              " link ARx_Elements2.ag/SIGL}
   @{"    Used to locate a subroutine      " link ARx_Tknq.ag/INLDATA 13}
   @{" SIGN() Built-in function            " link ARx_Func2.ag/SIGN()}
   @{" SIGNAL: Instruction keyword         " link ARx_Instr3.ag/SIGNAL}
   @{"    Trapping error conditions        " link ARx_Instr3.ag/SIGTRAP}
   @{"    Unconditional jump (Goto)        " link ARx_Instr3.ag/SIGTRAN}
   @{" Simple macro: recording keystrokes  " link ARx_Tutor.ag/MCR1}
   @{" Simple symbol                       " link ARx_Elements.ag/VARSYMBOL}
   @{" Simple variable                     " link ARx_Elements.ag/VARSYMBOL}
   @{" Smith, Philip H. III                " link ARx_Intro.ag/REF}
   @{" Source code: Retrieve data from     " link ARx_Tknq.ag/INLDATA}
   @{" SOURCE, PARSE option                " link ARx_Instr2.ag/PARSESRC5}
   @{" SOURCELINE() Built-in function      " link ARx_Func3.ag/SOURCELINE()}
   @{" Space operator                      " link ARx_Operator.ag/CONCATENATION}
   @{" SPACE() Built-in function           " link ARx_Func2.ag/SPACE()}
   @{" Spaces, removing from string        " link ARx_Func.ag/STRIP()}
   @{" Special character                   " link ARx_Elements.ag/SPECCHAR}
   @{" Special variable                    " link ARx_Elements2.ag/SPECVAR}
   @{"    RC                               " link ARx_Elements2.ag/RC}
   @{"    RESULT                           " link ARx_Elements2.ag/RESULT}
   @{"    SIGL                             " link ARx_Elements2.ag/SIGL}
   @{" SQLdb                               " link ARx_Intro.ag/WHYREXX 30}
   @{" Stack, PRAGMA() argument            " link ARx_Func3.ag/PRAGMASUB 38}
   @{" Stacked labels                      " link ARx_Elements3.ag/LABEL 7}
   @{" Standard I/O file                   " link ARx_Func3.ag/STDIO}
   @{" STATEF() Support function           " link ARx_Func2.ag/STATEF()}
   @{" STDERR, defined                     " link ARexxGuide.guide/GLOSSARY 219}
   @{"    Standard I/O file                " link ARx_Func3.ag/STDIO}
   @{" STDIN, defined                      " link ARexxGuide.guide/GLOSSARY 225}
   @{"    Stacking data to                 " link ARx_Instr3.ag/QUEUE 9}
   @{"    Standard I/O file                " link ARx_Func3.ag/STDIO}
   @{" STDOUT, defined                     " link ARexxGuide.guide/GLOSSARY 232}
   @{"    Pulling input from               " link ARx_Instr2.ag/PARSESRC2}
   @{"    Standard I/O file                " link ARx_Func3.ag/STDIO}
   @{" Stem symbol                         " link ARx_Elements.ag/VARSYMBOL}
   @{"    Assignment to                    " link ARx_Elements2.ag/COMPVAR6}
   @{"    Count of variables               " link ARx_Instr.ag/DOOPT2 76}
   @{" Step value                          " link ARx_Instr.ag/DOOPT6 50}
   @{" STORAGE() Support function          " link ARx_Func4.ag/STORAGE()}
   @{" Storing ARexx Files                 " link ARx_Intro.ag/STARTUP 18}
   @{" String manipulation functions       " link ARx_Func.ag/STRLIST}
   @{" String                              " link ARx_Elements2.ag/STRINGEXPR}
   @{"    Token                            " link ARx_Elements.ag/STRING}
   @{"    Used as file-handle name         " link ARx_Func3.ag/LOGFILE 8}
   @{"    Technique examples               " link ARx_Tknq.ag/MAIN}
   @{" STRIP() Built-in function           " link ARx_Func.ag/STRIP()}
   @{" Structured programming              " link ARx_Instr.ag/BREAKSTRUCT}
   @{" Subroutine, defined                 " link ARexxGuide.guide/GLOSSARY 248}
   @{" Subroutine, local settings          " link ARx_Func2.ag/TIMENOTE 9}
   @{" SUBSTR() Built-in function          " link ARx_Func.ag/SUBSTR()}
   @{" SUBWORD() Built-in function         " link ARx_Func2.ag/SUBWORD()}
   @{" Sullivan, Nick                      " link ARx_Intro.ag/REF}
   @{" Symbol token                        " link ARx_Elements.ag/SYMBOL}
   @{"    Compound                         " link ARx_Elements.ag/VARSYMBOL}
   @{"    Fixed                            " link ARx_Elements.ag/CONSTANT}
   @{"    Stem                             " link ARx_Elements.ag/VARSYMBOL}
   @{"    Translated to uppercase          " link ARx_Elements.ag/SYMBOL 10}
   @{"    Variable                         " link ARx_Elements.ag/VARSYMBOL}
   @{" SYMBOL() Built-in function          " link ARx_Func3.ag/SYMBOL()}
   @{" Symbol, DATATYPE argument           " link ARx_Func3.ag/DATATYPESUB}
   @{" SYNTAX, SIGNAL condition            " link ARx_Instr3.ag/SYNTAX}
   @{" System libraries                    " link ARx_Func2.ag/SHOWLISTSUB}
   @{" System requester, disable           " link ARx_Func3.ag/PRAGMASUB 51}

@{fg highlight}T@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" Table: Format data into table form  " link ARx_Tknq.ag/FORMATNOTE}
   @{" Target variable in PARSE template   " link ARx_Instr2.ag/PARSETMP1}
   @{" Task ID, PRAGMA() argument          " link ARx_Func3.ag/PRAGMASUB 13}
   @{" Task-ready, SHOWLIST() argument     " link ARx_Func2.ag/SHOWLISTSUB}
   @{" TCC: Command utility                " link ARx_Cmd.ag/TCC}
   @{" TCO: Command utility                " link ARx_Cmd.ag/TCO}
   @{" TE: Command utility                 " link ARx_Cmd.ag/TE}
   @{" Techniques:                         " link ARx_Tknq.ag/MAIN}
   @{" Template                            " link ARx_Instr2.ag/PARSETMP1}
   @{"    Variable                         " link ARx_Instr2.ag/PARSETMP5}
   @{" THEN, Instruction subkeyword        " link ARx_Instr.ag/THEN}
   @{"    Implied semicolon                " link ARx_Elements.ag/SEMICOLON 24}
   @{" TIME() Built-in function            " link ARx_Func2.ag/TIME()}
   @{"    Arguments                        " link ARx_Func2.ag/TIMESUB}
   @{"    Elapsed time counter             " link ARx_Func2.ag/TIMENOTE}
   @{"    Persistence of settings          " link ARx_Func2.ag/TIMEPERSIST}
   @{" TO, DO subkeyword                   " link ARx_Instr.ag/DOOPT2 50}
   @{" Toggle addresses                    " link ARx_Instr.ag/ADDRESS 23}
   @{" Token                               " link ARx_Elements.ag/TOKEN}
   @{"    Arithmetic                       " link ARx_Operator.ag/ARITHMETIC}
   @{"    Colon label identifier           " link ARx_Elements.ag/LABELID}
   @{"    Comment token                    " link ARx_Elements.ag/COMMENT}
   @{"    Comparative                      " link ARx_Operator.ag/COMPARISON}
   @{"    Concatenation                    " link ARx_Operator.ag/CONCATENATION}
   @{"    Delimiter                        " link ARx_Elements.ag/SPECCHAR 7}
   @{"    Fixed symbol                     " link ARx_Elements.ag/CONSTANT}
   @{"    Hex and binary string            " link ARx_Elements.ag/HEXSTRING}
   @{"    Logical                          " link ARx_Operator.ag/LOGICAL}
   @{"    Operator token                   " link ARx_Elements.ag/OPERATOR}
   @{"    Parenthesis                      " link ARx_Elements.ag/PAREN}
   @{"    Reserved character               " link ARx_Elements.ag/SPECCHAR}
   @{"    Semicolon clause end symbol      " link ARx_Elements.ag/SEMICOLON}
   @{"    Strings                          " link ARx_Elements.ag/STRING}
   @{"    Symbol token                     " link ARx_Elements.ag/SYMBOL}
   @{"    Comma                            " link ARx_Elements.ag/COMMA}
   @{"    Variable symbol                  " link ARx_Elements.ag/VARSYMBOL}
   @{" Tokenization in PARSE template      " link ARx_Instr2.ag/PARSETMP2}
   @{" TRACE() Built-in function           " link ARx_Func3.ag/TRACE()}
   @{" TRACE: Instruction keyword          " link ARx_Instr3.ag/TRACE}
   @{"    Options                          " link ARx_Instr3.ag/TRACEOPT}
   @{" TRANSLATE() Built-in function       " link ARx_Func.ag/TRANSLATE()}
   @{" TRIM() Built-in function            " link ARx_Func.ag/TRIM()}
   @{" TRL1                                " link ARx_Intro.ag/REF}
   @{" TRL2                                " link ARx_Intro.ag/COMPATIBILITY 26}
   @{" TRUNC() Built-in function           " link ARx_Func2.ag/TRUNC()}
   @{" Truncate, defined                   " link ARexxGuide.guide/GLOSSARY 270}
   @{" TS: Command utility                 " link ARx_Cmd.ag/TS}
   @{" TurboText: Example script           " link ARx_Elements3.ag/TTXCOMMAND}
   @{"    Assigning macros to keys         " link ARx_Tknq.ag/CLIPLIST 27}
   @{" Tutorials                           " link ARx_Tutor.ag/MAIN}
   @{" Typeless variable                   " link ARx_Elements2.ag/VARTYPE}
   @{" TYPEPKT() Support function          " link ARx_Func4.ag/TYPEPKT()}

@{fg highlight}U@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" Uncrunch.rexx: Program example      " link ARx_PrgUcr.ag/UCREXPLAN}
   @{" Uninitialized                       " link ARx_Elements.ag/VARSYMBOL 7}
   @{" UNTIL, DO subkeyword                " link ARx_Instr.ag/DOOPT4}
   @{" UPPER() Built-in function           " link ARx_Func.ag/UPPER()}
   @{" Upper, DATATYPE() argument          " link ARx_Func3.ag/DATATYPESUB}
   @{" UPPER, PARSE option                 " link ARx_Instr2.ag/PARSE 19}
   @{" UPPER: Instruction keyword          " link ARx_Instr3.ag/UPPER}
   @{" Useful tools                        " link ARx_Cmd.ag/MAIN}
   @{" User function                       " link ARx_Elements3.ag/FUNCTION}
   @{" User settings, storing on clip-list " link ARx_Tknq.ag/CLIPLIST 9}
   @{" Using variable as template marker   " link ARx_Instr2.ag/PARSETMP5}

@{fg highlight}V@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" VALUE() Built-in function           " link ARx_Func3.ag/VALUE()}
   @{" VALUE, ADDRESS subkeyword           " link ARx_Instr.ag/ADDRESS 26}
   @{" VALUE, PARSE subkeyword             " link ARx_Instr2.ag/PARSESRC7}
   @{" VAR, PARSE option                   " link ARx_Instr2.ag/PARSESRC8}
   @{" Variable                            " link ARx_Elements2.ag/VARIABLE}
   @{"    Compound                         " link ARx_Elements2.ag/COMPVAR}
   @{"    Data type                        " link ARx_Elements2.ag/VARTYPE}
   @{"    Default value                    " link ARx_Elements2.ag/VARIABLE 16}
   @{"    In PARSE template                " link ARx_Instr2.ag/PARSETMP5}
   @{"    Mandatory declaration            " link ARx_Elements2.ag/VARTYPE 50}
   @{"    Used as file-handle name         " link ARx_Func3.ag/LOGFILE 57}
   @{"    Overview                         " link ARx_Elements2.ag/VARDES}
   @{"    Scope                            " link ARx_Instr3.ag/PROCEDURE}
   @{"    Special variable                 " link ARx_Elements2.ag/SPECVAR}
   @{"    Symbol                           " link ARx_Elements.ag/VARSYMBOL}
   @{"    Used as file-handle name         " link ARx_Func3.ag/LOGFILE 54}
   @{" Stored on the clip list             " link ARx_Tknq.ag/CLIPLIST}
   @{" VERIFY() Built-in function          " link ARx_Func.ag/VERIFY()}
   @{" VERSION, PARSE option               " link ARx_Instr2.ag/PARSESRC6}
   @{" Version, determining library        " link ARx_Tknq.ag/LIBVER()}
   @{" Video frequency, determining        " link ARx_Instr2.ag/PARSESRC6 25}
   @{" Video standard, determining         " link ARx_Instr2.ag/PARSESRC6 22}
   @{" VM                                  " link ARx_Cmd.ag/EXECIO 34}
   @{" Volumes, SHOWLIST() argument        " link ARx_Func2.ag/SHOWLISTSUB}

@{fg highlight}W@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" WaitForPort: Command utility        " link ARx_Cmd.ag/WAITFORPORT}
   @{" Waiting, SHOWLIST argument          " link ARx_Func2.ag/SHOWLISTSUB}
   @{" WAITPKT() Support function          " link ARx_Func4.ag/WAITPKT()}
   @{" Weekday, DATE() argument            " link ARx_Func2.ag/DATESUB}
   @{" Weinstein, Marvin                   " link ARx_Intro.ag/REF}
   @{" WHEN: Instruction keyword           " link ARx_Instr3.ag/WHEN}
   @{"    Implied semicolon                " link ARx_Elements.ag/SEMICOLON 6}
   @{" WHILE, DO subkeyword                " link ARx_Instr.ag/DOOPT4}
   @{" Whole, DATATYPE() argument          " link ARx_Func3.ag/DATATYPESUB}
   @{" Why ARexx?                          " link ARx_Intro.ag/WHYREXX}
   @{" Window, sending output to           " link ARx_Func3.ag/OTHERIO 17}
   @{" Window, example                     " link ARx_Tknq.ag/CONWINDOW}
   @{" WITH, PARSE subkeyword              " link ARx_Instr2.ag/PARSESRC7 5}
   @{" Word count, example function        " link ARx_Tknq.ag/COUNTWORDS()}
   @{" Word manipulation functions         " link ARx_Func2.ag/WORDLIST}
   @{" WORD() Built-in function            " link ARx_Func2.ag/WORD()}
   @{" WORDINDEX() Built-in function       " link ARx_Func2.ag/WORDINDEX()}
   @{" WORDLENGTH() Built-in function      " link ARx_Func2.ag/WORDLENGTH()}
   @{" WORDS() Built-in function           " link ARx_Func2.ag/WORDS()}
   @{" WordWrap(): technique example       " link ARx_Tknq.ag/WORDWRAP()}
   @{" Write data to a new file            " link ARx_Tknq.ag/INOUTFILE}
   @{" WRITE, OPEN() argument              " link ARx_Func3.ag/OPEN() 19}
   @{" WRITECH() Built-in function         " link ARx_Func3.ag/WRITECH()}
   @{" WRITELN() Built-in function         " link ARx_Func3.ag/WRITELN()}
   @{" Writing programs                    " link ARx_Intro.ag/WRITING}
   @{" WShell                              " link ARx_Cmd.ag/WSHELL}

@{fg highlight}X@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" X, identifying hex string           " link ARx_Elements.ag/HEXSTRING 12}
   @{" X2C() Built-in function             " link ARx_Func2.ag/X2C()}
   @{" X2D() Built-in function             " link ARx_Func2.ag/X2D()}
   @{" XRANGE() Built-in function          " link ARx_Func.ag/XRANGE()}

@{fg highlight}Z@{fg text}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   @{" Zamara, Chris                       " link ARx_Intro.ag/REF}
   @{" zoo: Program example                " link ARx_PrgUcr.ag/UCREXPLAN}


@endnode
