/*
 * GEM resource C output of hypview
 *
 * created by ORCS 2.14
 */

#include <portab.h>

#ifdef OS_WINDOWS
#  include <portaes.h>
#  define SHORT _WORD
#  ifdef __WIN32__
#    define _WORD signed short
#  else
#    define _WORD signed int
#    pragma option -zE_FARDATA
#  endif
#else
#  ifdef __TURBOC__
#    include <portaes.h>
#    define CP (_WORD *)
#  endif
#endif

#ifdef OS_UNIX
#  include <portaes.h>
#  define SHORT _WORD
#else
#  ifdef __GNUC__
#    ifndef __PORTAES_H__
#      include <aesbind.h>
#      define _WORD int
#      define CP (char *)
#      define CW (short *)
#    endif
#  endif
#endif


#ifdef __SOZOBONX__
#  include <xgemfast.h>
#else
#  ifdef SOZOBON
#    include <aes.h>
#  endif
#endif

#ifdef MEGAMAX
#  include <gembind.h>
#  include <gemdefs.h>
#  include <obdefs.h>
#  define _WORD int
#  define SHORT int
#endif

#ifndef OS_NORMAL
#  define OS_NORMAL 0x0000
#endif
#ifndef OS_SELECTED
#  define OS_SELECTED 0x0001
#endif
#ifndef OS_CROSSED
#  define OS_CROSSED 0x0002
#endif
#ifndef OS_CHECKED
#  define OS_CHECKED 0x0004
#endif
#ifndef OS_DISABLED
#  define OS_DISABLED 0x0008
#endif
#ifndef OS_OUTLINED
#  define OS_OUTLINED 0x0010
#endif
#ifndef OS_SHADOWED
#  define OS_SHADOWED 0x0020
#endif
#ifndef OS_WHITEBAK
#  define OS_WHITEBAK 0x0040
#endif
#ifndef OS_DRAW3D
#  define OS_DRAW3D 0x0080
#endif

#ifndef OF_NONE
#  define OF_NONE 0x0000
#endif
#ifndef OF_SELECTABLE
#  define OF_SELECTABLE 0x0001
#endif
#ifndef OF_DEFAULT
#  define OF_DEFAULT 0x0002
#endif
#ifndef OF_EXIT
#  define OF_EXIT 0x0004
#endif
#ifndef OF_EDITABLE
#  define OF_EDITABLE 0x0008
#endif
#ifndef OF_RBUTTON
#  define OF_RBUTTON 0x0010
#endif
#ifndef OF_LASTOB
#  define OF_LASTOB 0x0020
#endif
#ifndef OF_TOUCHEXIT
#  define OF_TOUCHEXIT 0x0040
#endif
#ifndef OF_HIDETREE
#  define OF_HIDETREE 0x0080
#endif
#ifndef OF_INDIRECT
#  define OF_INDIRECT 0x0100
#endif
#ifndef OF_FL3DIND
#  define OF_FL3DIND 0x0200
#endif
#ifndef OF_FL3DBAK
#  define OF_FL3DBAK 0x0400
#endif
#ifndef OF_FL3DACT
#  define OF_FL3DACT 0x0600
#endif
#ifndef OF_MOVEABLE
#  define OF_MOVEABLE 0x0800
#endif
#ifndef OF_POPUP
#  define OF_POPUP 0x1000
#endif

#ifndef R_CICONBLK
#  define R_CICONBLK 17
#endif
#ifndef R_CICON
#  define R_CICON 18
#endif

#ifndef G_SWBUTTON
#  define G_SWBUTTON 34
#endif
#ifndef G_POPUP
#  define G_POPUP 35
#endif
#ifndef G_EDIT
#  define G_EDIT 37
#endif
#ifndef G_SHORTCUT
#  define G_SHORTCUT 38
#endif
#ifndef G_SLIST
#  define G_SLIST 39
#endif
#ifndef G_EXTBOX
#  define G_EXTBOX 40
#endif
#ifndef G_OBLINK
#  define G_OBLINK 41
#endif

#ifndef _WORD
#  ifdef WORD
#    define _WORD WORD
#  else
#    define _WORD short
#  endif
#endif

#ifndef _UBYTE
#  define _UBYTE char
#endif

#ifndef _LONG
#  ifdef LONG
#    define _LONG LONG
#  else
#    define _LONG long
#  endif
#endif

#ifdef __PORTAES_H__
#  define C_UNION(x) { (_LONG)(x) }
#endif
#ifdef __PUREC__
#  define C_UNION(x) { (_LONG)(x) }
#endif
#ifndef C_UNION
#  define C_UNION(x) (_LONG)(x)
#endif

#ifndef SHORT
#  define SHORT short
#endif

#ifndef CP
#  define CP (SHORT *)
#endif

#ifndef CW
#  define CW (_WORD *)
#endif


#define RSC_STATIC_FILE 1

#include "hypview.h"

#ifndef RSC_NAMED_FUNCTIONS
#  define RSC_NAMED_FUNCTIONS 0
#endif

#undef defRSHInit
#undef defRSHInitBit
#undef defRSHInitStr
#ifndef RsArraySize
#define RsArraySize(array) (_WORD)(sizeof(array)/sizeof(array[0]))
#define RsPtrArraySize(type, array) (type *)array, RsArraySize(array)
#endif
#define defRSHInit( aa, bb ) RSHInit( aa, bb, RsPtrArraySize(OBJECT *, rs_trindex), RsArraySize(rs_object) )
#define defRSHInitBit( aa, bb ) RSHInitBit( aa, bb, RsPtrArraySize(BITBLK *, rs_frimg) )
#define defRSHInitStr( aa, bb ) RSHInitStr( aa, bb, RsPtrArraySize(_UBYTE *, rs_frstr) )

#ifndef GetTextSize
extern _VOID GetTextSize(_WORD *_width, _WORD *_height);
#endif
#ifndef W_Cicon_Setpalette
extern _BOOL W_Cicon_Setpalette(_WORD *_palette);
#endif
#ifndef hrelease_objs
extern _VOID hrelease_objs(OBJECT *_ob, _WORD _num_objs);
#endif
#ifndef hfix_objs
extern _VOID *hfix_objs(RSHDR *_hdr, OBJECT *_ob, _WORD _num_objs);
#endif

#ifndef RLOCAL
#  if RSC_STATIC_FILE
#    ifdef LOCAL
#      define RLOCAL LOCAL
#    else
#      define RLOCAL static
#    endif
#  else
#    define RLOCAL
#  endif
#endif


static char hypview_string_0[] = "";
static char hypview_string_1[] = "";
static char hypview_string_2[] = "";
static char hypview_string_3[] = "";
static char hypview_string_4[] = "";
static char hypview_string_5[] = "";
static char hypview_string_6[] = "";
static char hypview_string_7[] = "";
static char hypview_string_8[] = "";
static char hypview_string_9[] = "";
static char hypview_string_10[] = "";
static char hypview_string_11[] = "";
static char hypview_string_12[] = "";
static char hypview_string_13[] = "";
static char hypview_string_14[] = "";
static char hypview_string_15[] = "@@@@@@@@@@@@@@@@@@@@@@@@@";
static char hypview_string_16[] = "Search: _________________________";
static char hypview_string_17[] = "X";
static char hypview_string_18[] = "not found!";
static char hypview_string_19[] = "";
static char hypview_string_20[] = "";
static char hypview_string_21[] = "  Back          BS";
static char hypview_string_22[] = "  Copy          ^C";
static char hypview_string_23[] = "  Insert        ^V";
static char hypview_string_24[] = "-------------------";
static char hypview_string_25[] = "  Select all    ^A";
static char hypview_string_26[] = "-------------------";
static char hypview_string_27[] = "  Save as...    ^S";
static char hypview_string_28[] = "-------------------";
static char hypview_string_29[] = "  Find...       ^F";
static char hypview_string_30[] = "  Repeat find   ^G";
static char hypview_string_31[] = "  Empty stack   \007E";
static char hypview_string_32[] = "  Print...      ^P";
static char hypview_string_33[] = "-------------------";
static char hypview_string_34[] = "  Switch Font   ^Z";
static char hypview_string_35[] = "  Select Font   \007Z";
static char hypview_string_36[] = "  Remarker      \007R";
static char hypview_string_37[] = "";
static char hypview_string_38[] = "";
static char hypview_string_39[] = "";
static char hypview_string_40[] = "";
static char hypview_string_41[] = "";
static char hypview_string_42[] = "";
static char hypview_string_43[] = "";
static char hypview_string_44[] = "";
static char hypview_string_45[] = "";
static char hypview_string_46[] = "";
static char hypview_string_47[] = "";
static char hypview_string_48[] = "";
static char hypview_string_49[] = "ProgrammnameXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
static char hypview_string_50[] = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
static char hypview_string_51[] = "File:";
static char hypview_string_52[] = "1234567890123456789012345678901234567890";
static char hypview_string_53[] = "";
static char hypview_string_54[] = "";
static char hypview_string_55[] = "Topic:";
static char hypview_string_56[] = "1234567890123456789012345678901234567890";
static char hypview_string_57[] = "";
static char hypview_string_58[] = "";
static char hypview_string_59[] = "Author:";
static char hypview_string_60[] = "1234567890123456789012345678901234567890";
static char hypview_string_61[] = "";
static char hypview_string_62[] = "";
static char hypview_string_63[] = "Version:";
static char hypview_string_64[] = "1234567890123456789012345678901234567890";
static char hypview_string_65[] = "";
static char hypview_string_66[] = "";
static char hypview_string_67[] = "";
static char hypview_string_68[] = "12345";
static char hypview_string_69[] = "Nodes       :   _____";
static char hypview_string_70[] = "9";
static char hypview_string_71[] = "1234567";
static char hypview_string_72[] = "Index Size  : _______";
static char hypview_string_73[] = "9";
static char hypview_string_74[] = "xxx";
static char hypview_string_75[] = "HCP-Version :     ___";
static char hypview_string_76[] = "9";
static char hypview_string_77[] = "xxxxxxxxxx";
static char hypview_string_78[] = "Compiled on : __________";
static char hypview_string_79[] = "X";
static char hypview_string_80[] = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";
static char hypview_string_81[] = "@help       : _________________________________";
static char hypview_string_82[] = "X";
static char hypview_string_83[] = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";
static char hypview_string_84[] = "@options    : _________________________________";
static char hypview_string_85[] = "X";
static char hypview_string_86[] = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";
static char hypview_string_87[] = "@default    : _________________________________";
static char hypview_string_88[] = "X";
static char hypview_string_89[] = "xxx";
static char hypview_string_90[] = "@width      :     ___";
static char hypview_string_91[] = "9";
static char hypview_string_92[] = "HELP";
static char hypview_string_93[] = "";
static char hypview_string_94[] = "";
static char hypview_string_95[] = "More \002\002";
static char hypview_string_96[] = "Less \001\001";
static char hypview_string_97[] = "  OK  ";
static char hypview_string_98[] = "Subject:";
static char hypview_string_99[] = "1234567890123456789012345678901234567890";
static char hypview_string_100[] = "";
static char hypview_string_101[] = "";
static char hypview_string_102[] = "1234567890123456789012345678901234567890123456789012345678901234567890";
static char hypview_string_103[] = "";
static char hypview_string_104[] = "";
static char hypview_string_105[] = "1234567890123456789012345678901234567890123456789012345678901234567890";
static char hypview_string_106[] = "";
static char hypview_string_107[] = "";
static char hypview_string_108[] = "1234567890123456789012345678901234567890123456789012345678901234567890";
static char hypview_string_109[] = "";
static char hypview_string_110[] = "";
static char hypview_string_111[] = "1234567890123456789012345678901234567890123456789012345678901234567890";
static char hypview_string_112[] = "";
static char hypview_string_113[] = "";
static char hypview_string_114[] = "1234567890123456789012345678901234567890123456789012345678901234567890";
static char hypview_string_115[] = "";
static char hypview_string_116[] = "";
static char hypview_string_117[] = "1234567890123456789012345678901234567890123456789012345678901234567890";
static char hypview_string_118[] = "";
static char hypview_string_119[] = "";
static char hypview_string_120[] = "1234567890123456789012345678901234567890123456789012345678901234567890";
static char hypview_string_121[] = "";
static char hypview_string_122[] = "";
static char hypview_string_123[] = "1234567890123456789012345678901234567890123456789012345678901234567890";
static char hypview_string_124[] = "";
static char hypview_string_125[] = "";
static char hypview_string_126[] = "1234567890123456789012345678901234567890123456789012345678901234567890";
static char hypview_string_127[] = "";
static char hypview_string_128[] = "";
static char hypview_string_129[] = "1234567890123456789012345678901234567890123456789012345678901234567890";
static char hypview_string_130[] = "";
static char hypview_string_131[] = "";
static char hypview_string_132[] = "Abort";
static char hypview_string_133[] = "Search:";
static char hypview_string_134[] = "";
static char hypview_string_135[] = "";
static char hypview_string_136[] = "------------------------------";
static char hypview_string_137[] = "______________________________";
static char hypview_string_138[] = "X";
static char hypview_string_139[] = "in page";
static char hypview_string_140[] = "as page";
static char hypview_string_141[] = "as reference";
static char hypview_string_142[] = "Cancel";
static char hypview_string_143[] = "in all pages";
static char hypview_string_144[] = "... of all Hypertexts";
static char hypview_string_145[] = "[2][This file exists already.|Do you want to replace it?][Replace|Abort]";
static char hypview_string_146[] = "[2][Do you want to remove|%s|from your bookmarks?][  Yes  |  No  ]";
static char hypview_string_147[] = "[2][Do you want to add|%s|to your bookmarks?][  Yes  |  No  ]";
static char hypview_string_148[] = "[2][Save bookmarks?][  Yes  |  No  ]";
static char hypview_string_149[] = "[1][HypView: could not find|<%s>][ Abort ]";
static char hypview_string_150[] = "Select hypertext to load:";
static char hypview_string_151[] = "Save ASCII text as:";
static char hypview_string_152[] = "Search Pattern...";
static char hypview_string_153[] = "[1][Command could not be executed.|There is not enough memory.][Cancel]";
static char hypview_string_154[] = "[1][Please install the system|extension WDIALOG.PRG][Cancel]";
static char hypview_string_155[] = "[1][Can\'t open a VDI workstation.][Cancel]";
static char hypview_string_156[] = "[1][No hostname specified in|Hypertext.][Cancel]";
static char hypview_string_157[] = "[1][Host application not found.][Cancel]";
static char hypview_string_158[] = "[1][Not Implemented.][Cancel]";
static char hypview_string_159[] = "[1][Cannot create a fontselector.|Maybe the system does not|support it.][Cancel]";
static char hypview_string_160[] = "from: %s";
static char hypview_string_161[] = "Programinfo...";


/* mask of DI_ICON */
static _UBYTE RS0_MMASK[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFE, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0xFF, 0xFF, 0xFF};

/* data of DI_ICON */
static _UBYTE RS0_MDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFC, 
0x40, 0x00, 0x00, 0x04, 0x55, 0x55, 0x55, 0x56, 0x40, 0x00, 0x00, 0x06, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x06, 0x40, 0x1F, 0xE0, 0x06, 0x40, 0x7F, 0xF8, 0x06, 0x40, 0xFF, 0xFC, 0x06, 
0x40, 0xF0, 0xFC, 0x06, 0x40, 0xF0, 0x7C, 0x06, 0x40, 0x78, 0x7C, 0x06, 0x40, 0x38, 0xFC, 0x06, 
0x40, 0x01, 0xF8, 0x06, 0x40, 0x03, 0xF0, 0x06, 0x40, 0x07, 0xE0, 0x06, 0x40, 0x07, 0xC0, 0x06, 
0x40, 0x07, 0xC0, 0x06, 0x40, 0x07, 0xC0, 0x06, 0x40, 0x03, 0x80, 0x06, 0x40, 0x00, 0x00, 0x06, 
0x40, 0x03, 0x80, 0x06, 0x40, 0x07, 0xC0, 0x06, 0x40, 0x07, 0xC0, 0x06, 0x40, 0x03, 0x80, 0x06, 
0x40, 0x00, 0x00, 0x06, 0x7F, 0xFF, 0xFF, 0xFE, 0x1F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00};

/* color data of DI_ICON */
static _UBYTE RS0_4CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xF8, 
0x7F, 0xFF, 0xFF, 0xFA, 0x40, 0x00, 0x00, 0x02, 0x7F, 0xFF, 0xFF, 0xFA, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x1F, 0xE0, 0x02, 0x40, 0x7F, 0xF8, 0x02, 0x40, 0xF0, 0xF8, 0x02, 
0x40, 0xE0, 0x78, 0x02, 0x40, 0xE0, 0x78, 0x02, 0x40, 0x70, 0x78, 0x02, 0x40, 0x00, 0xF8, 0x02, 
0x40, 0x01, 0xF0, 0x02, 0x40, 0x03, 0xE0, 0x02, 0x40, 0x07, 0xC0, 0x02, 0x40, 0x07, 0x80, 0x02, 
0x40, 0x07, 0x80, 0x02, 0x40, 0x07, 0x80, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x03, 0x80, 0x02, 0x40, 0x07, 0x80, 0x02, 0x40, 0x07, 0x80, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x3F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xF8, 
0x7F, 0xFF, 0xFF, 0xFA, 0x40, 0x00, 0x00, 0x02, 0x7F, 0xFF, 0xFF, 0xFA, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x1F, 0xE0, 0x02, 0x40, 0x7F, 0xF8, 0x02, 0x40, 0xF0, 0xF8, 0x02, 
0x40, 0xE0, 0x78, 0x02, 0x40, 0xE0, 0x78, 0x02, 0x40, 0x70, 0x78, 0x02, 0x40, 0x00, 0xF8, 0x02, 
0x40, 0x01, 0xF0, 0x02, 0x40, 0x03, 0xE0, 0x02, 0x40, 0x07, 0xC0, 0x02, 0x40, 0x07, 0x80, 0x02, 
0x40, 0x07, 0x80, 0x02, 0x40, 0x07, 0x80, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x03, 0x80, 0x02, 0x40, 0x07, 0x80, 0x02, 0x40, 0x07, 0x80, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x3F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xF8, 
0x7F, 0xFF, 0xFF, 0xFA, 0x40, 0x00, 0x00, 0x02, 0x7F, 0xFF, 0xFF, 0xFA, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x1F, 0xE0, 0x02, 0x40, 0x7F, 0xF8, 0x02, 0x40, 0xF0, 0xF8, 0x02, 
0x40, 0xE0, 0x78, 0x02, 0x40, 0xE0, 0x78, 0x02, 0x40, 0x70, 0x78, 0x02, 0x40, 0x00, 0xF8, 0x02, 
0x40, 0x01, 0xF0, 0x02, 0x40, 0x03, 0xE0, 0x02, 0x40, 0x07, 0xC0, 0x02, 0x40, 0x07, 0x80, 0x02, 
0x40, 0x07, 0x80, 0x02, 0x40, 0x07, 0x80, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x03, 0x80, 0x02, 0x40, 0x07, 0x80, 0x02, 0x40, 0x07, 0x80, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x3F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFC, 
0x40, 0x00, 0x00, 0x06, 0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x06, 
0x40, 0x00, 0x00, 0x06, 0x40, 0x1F, 0xE0, 0x06, 0x40, 0x7F, 0xF8, 0x06, 0x40, 0xFF, 0xFC, 0x06, 
0x40, 0xF0, 0xFC, 0x06, 0x40, 0xF0, 0x7C, 0x06, 0x40, 0x78, 0x7C, 0x06, 0x40, 0x38, 0xFC, 0x06, 
0x40, 0x01, 0xF8, 0x06, 0x40, 0x03, 0xF0, 0x06, 0x40, 0x07, 0xE0, 0x06, 0x40, 0x07, 0xC0, 0x06, 
0x40, 0x07, 0xC0, 0x06, 0x40, 0x07, 0xC0, 0x06, 0x40, 0x03, 0x80, 0x06, 0x40, 0x00, 0x00, 0x06, 
0x40, 0x03, 0x80, 0x06, 0x40, 0x07, 0xC0, 0x06, 0x40, 0x07, 0xC0, 0x06, 0x40, 0x03, 0x80, 0x06, 
0x40, 0x00, 0x00, 0x06, 0x7F, 0xFF, 0xFF, 0xFE, 0x3F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00};

/* color mask of DI_ICON */
static _UBYTE RS0_4CMASK[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFC, 
0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 
0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 
0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 
0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 
0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 
0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 
0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 0x3F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00};

/* mask of TO_BACK */
static _UBYTE RS1_MMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x04, 0x00, 0x02, 0x40, 0x0C, 0x00, 0x02, 
0x40, 0x14, 0x00, 0x02, 0x40, 0x24, 0x00, 0x02, 0x40, 0x47, 0xFF, 0x02, 0x40, 0x80, 0x01, 0x82, 
0x41, 0x00, 0x00, 0xC2, 0x42, 0x00, 0x01, 0x42, 0x41, 0x00, 0x3E, 0x42, 0x40, 0x80, 0x20, 0x42, 
0x40, 0x47, 0xE0, 0x42, 0x40, 0x24, 0x20, 0x42, 0x40, 0x14, 0x20, 0x42, 0x40, 0x0C, 0x20, 0x42, 
0x40, 0x04, 0x20, 0x82, 0x40, 0x00, 0x3F, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* data of TO_BACK */
static _UBYTE RS1_MDATA[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x04, 0x00, 0x02, 0x40, 0x0C, 0x00, 0x02, 
0x40, 0x14, 0x00, 0x02, 0x40, 0x24, 0x00, 0x02, 0x40, 0x47, 0xFF, 0x02, 0x40, 0x80, 0x01, 0x82, 
0x41, 0x00, 0x00, 0xC2, 0x42, 0x00, 0x01, 0x42, 0x41, 0x00, 0x3E, 0x42, 0x40, 0x80, 0x20, 0x42, 
0x40, 0x47, 0xE0, 0x42, 0x40, 0x24, 0x20, 0x42, 0x40, 0x14, 0x20, 0x42, 0x40, 0x0C, 0x20, 0x42, 
0x40, 0x04, 0x20, 0x82, 0x40, 0x00, 0x3F, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* color data of TO_BACK */
static _UBYTE RS1_4CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 
0x00, 0x04, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x07, 0xFC, 0x00, 0x00, 0x80, 0x06, 0x00, 
0x00, 0x00, 0x03, 0x00, 0x01, 0x00, 0x05, 0x00, 0x01, 0x00, 0x79, 0x00, 0x00, 0x00, 0x41, 0x00, 
0x00, 0x80, 0x41, 0x00, 0x00, 0x07, 0xC1, 0x00, 0x00, 0x44, 0x42, 0x00, 0x00, 0x04, 0x4C, 0x00, 
0x00, 0x24, 0x70, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 
0x00, 0x24, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0xC7, 0xFE, 0x00, 
0x00, 0x93, 0xFF, 0x00, 0x01, 0xCF, 0xFF, 0x00, 0x01, 0x3F, 0xFF, 0x00, 0x01, 0xFF, 0xFF, 0x00, 
0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x7D, 0xFF, 0x00, 
0x00, 0x7C, 0xFE, 0x00, 0x00, 0x34, 0xF8, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x3C, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 
0x00, 0xC7, 0xFE, 0x00, 0x00, 0x93, 0xFF, 0x00, 0x01, 0xCF, 0xFF, 0x00, 0x01, 0x3F, 0xFF, 0x00, 
0x01, 0xFF, 0xFF, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 
0x00, 0x7D, 0xFF, 0x00, 0x00, 0x7C, 0xFE, 0x00, 0x00, 0x34, 0xF8, 0x00, 0x00, 0x3C, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x3C, 0x00, 0x02, 0x40, 0x24, 0x00, 0x02, 0x40, 0x64, 0x00, 0x02, 
0x40, 0x44, 0x00, 0x02, 0x40, 0xC7, 0xFE, 0x02, 0x40, 0x80, 0x27, 0x02, 0x41, 0x80, 0x9F, 0x02, 
0x41, 0x02, 0x7F, 0x02, 0x41, 0x09, 0xFD, 0x02, 0x41, 0x27, 0xC1, 0x02, 0x40, 0x9F, 0xC1, 0x02, 
0x40, 0xFF, 0xC7, 0x02, 0x40, 0x7D, 0xDF, 0x02, 0x40, 0x7C, 0xFE, 0x02, 0x40, 0x3C, 0xF8, 0x02, 
0x40, 0x3C, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_BACK */
static _UBYTE RS1_4CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x03, 0x40, 0x3C, 0x00, 0x03, 0x40, 0x3C, 0x00, 0x03, 
0x40, 0x7C, 0x00, 0x03, 0x40, 0x7C, 0x00, 0x03, 0x40, 0xFF, 0xFE, 0x03, 0x40, 0xFF, 0xFF, 0x03, 
0x41, 0xFF, 0xFF, 0x03, 0x41, 0xFF, 0xFF, 0x03, 0x41, 0xFF, 0xFF, 0x03, 0x41, 0xFF, 0xFF, 0x03, 
0x40, 0xFF, 0xFF, 0x03, 0x40, 0xFF, 0xFF, 0x03, 0x40, 0x7D, 0xFF, 0x03, 0x40, 0x7C, 0xFE, 0x03, 
0x40, 0x3C, 0xF8, 0x03, 0x40, 0x3C, 0x00, 0x03, 0x40, 0x00, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* color data of TO_BACK */
static _UBYTE RS1_8CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 
0x00, 0x04, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x3C, 0xFC, 0x00, 0x00, 0x74, 0xCE, 0x00, 
0x00, 0x22, 0xDF, 0x00, 0x00, 0x84, 0x05, 0x00, 0x00, 0xFC, 0x7B, 0x00, 0x00, 0x40, 0xFF, 0x00, 
0x00, 0x17, 0xE1, 0x00, 0x00, 0x0B, 0xC9, 0x00, 0x00, 0x70, 0x72, 0x00, 0x00, 0x18, 0x4C, 0x00, 
0x00, 0x18, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x20, 0x00, 0x02, 0x40, 0x38, 0x00, 0x02, 0x40, 0x50, 0x00, 0x02, 0x40, 0x53, 0xFC, 0x02, 
0x40, 0xB8, 0xFE, 0x02, 0x40, 0xF7, 0x23, 0x02, 0x41, 0x44, 0x0F, 0x02, 0x41, 0xFC, 0x7F, 0x02, 
0x40, 0xC0, 0x7F, 0x02, 0x40, 0x80, 0x7F, 0x02, 0x40, 0x44, 0xCB, 0x02, 0x40, 0x04, 0x76, 0x02, 
0x40, 0x24, 0x7C, 0x02, 0x40, 0x24, 0x70, 0x02, 0x40, 0x1C, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x1C, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 
0x00, 0x47, 0xFC, 0x00, 0x00, 0x80, 0x0E, 0x00, 0x00, 0x88, 0x03, 0x00, 0x01, 0x3B, 0xFF, 0x00, 
0x01, 0x3F, 0xFD, 0x00, 0x00, 0xFF, 0x41, 0x00, 0x00, 0xE8, 0x41, 0x00, 0x00, 0x77, 0xF7, 0x00, 
0x00, 0x4C, 0x4E, 0x00, 0x00, 0x24, 0x7C, 0x00, 0x00, 0x24, 0x70, 0x00, 0x00, 0x1C, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x3C, 0x00, 0x02, 0x40, 0x24, 0x00, 0x02, 0x40, 0x44, 0x00, 0x02, 
0x40, 0x44, 0x00, 0x02, 0x40, 0x87, 0xFE, 0x02, 0x40, 0x80, 0x37, 0x02, 0x41, 0x00, 0x1F, 0x02, 
0x41, 0x00, 0xF5, 0x02, 0x41, 0x03, 0xF9, 0x02, 0x41, 0x3F, 0xC1, 0x02, 0x40, 0xFF, 0xC3, 0x02, 
0x40, 0xBF, 0xC1, 0x02, 0x40, 0x7D, 0xC3, 0x02, 0x40, 0x5C, 0xCE, 0x02, 0x40, 0x3C, 0xF8, 0x02, 
0x40, 0x3C, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x3C, 0x00, 0x02, 0x40, 0x3C, 0x00, 0x02, 
0x40, 0x7C, 0x00, 0x02, 0x40, 0x7C, 0x00, 0x02, 0x40, 0xFF, 0x02, 0x02, 0x40, 0xFC, 0xC1, 0x02, 
0x41, 0xFF, 0xFC, 0x02, 0x41, 0xFF, 0x0A, 0x02, 0x41, 0xC0, 0x06, 0x02, 0x41, 0x80, 0xBE, 0x02, 
0x40, 0x97, 0xBC, 0x02, 0x40, 0xCF, 0x3E, 0x02, 0x40, 0x75, 0xBD, 0x02, 0x40, 0x7C, 0xB2, 0x02, 
0x40, 0x3C, 0x88, 0x02, 0x40, 0x3C, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1C, 0x00, 
0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x17, 0x80, 0x00, 
0x00, 0x48, 0x02, 0x00, 0x00, 0x30, 0x04, 0x00, 0x00, 0x38, 0x30, 0x00, 0x00, 0x18, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_BACK */
static _UBYTE RS1_8CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x03, 0x40, 0x3C, 0x00, 0x03, 0x40, 0x3C, 0x00, 0x03, 
0x40, 0x7C, 0x00, 0x03, 0x40, 0x7C, 0x00, 0x03, 0x40, 0xFF, 0xFE, 0x03, 0x40, 0xFF, 0xFF, 0x03, 
0x41, 0xFF, 0xFF, 0x03, 0x41, 0xFF, 0xFF, 0x03, 0x41, 0xFF, 0xFF, 0x03, 0x41, 0xFF, 0xFF, 0x03, 
0x40, 0xFF, 0xFF, 0x03, 0x40, 0xFF, 0xFF, 0x03, 0x40, 0x7D, 0xFF, 0x03, 0x40, 0x7C, 0xFE, 0x03, 
0x40, 0x3C, 0xF8, 0x03, 0x40, 0x3C, 0x00, 0x03, 0x40, 0x00, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* mask of TO_HISTORY */
static _UBYTE RS2_MMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0xFF, 0xFA, 0x50, 0x00, 0x00, 0x0A, 
0x50, 0x00, 0x00, 0x0A, 0x5F, 0xFF, 0xFF, 0xFA, 0x40, 0x80, 0x00, 0x32, 0x40, 0x82, 0x00, 0x32, 
0x40, 0x86, 0x00, 0x32, 0x40, 0x8B, 0xFC, 0x32, 0x40, 0x90, 0x02, 0x32, 0x40, 0xA0, 0x1D, 0x32, 
0x40, 0x90, 0x11, 0x32, 0x40, 0x8B, 0xF1, 0x32, 0x40, 0x86, 0x11, 0x32, 0x40, 0x82, 0x1E, 0x32, 
0x40, 0x80, 0x00, 0x32, 0x40, 0xFF, 0xFF, 0xF2, 0x40, 0xFF, 0xFF, 0xF2, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* data of TO_HISTORY */
static _UBYTE RS2_MDATA[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0xFF, 0xFA, 0x50, 0x00, 0x00, 0x0A, 
0x50, 0x00, 0x00, 0x0A, 0x5F, 0xFF, 0xFF, 0xFA, 0x40, 0x80, 0x00, 0x32, 0x40, 0x82, 0x00, 0x32, 
0x40, 0x86, 0x00, 0x32, 0x40, 0x8B, 0xFC, 0x32, 0x40, 0x90, 0x02, 0x32, 0x40, 0xA0, 0x1D, 0x32, 
0x40, 0x90, 0x11, 0x32, 0x40, 0x8B, 0xF1, 0x32, 0x40, 0x86, 0x11, 0x32, 0x40, 0x82, 0x1E, 0x32, 
0x40, 0x80, 0x00, 0x32, 0x40, 0xFF, 0xFF, 0xF2, 0x40, 0xFF, 0xFF, 0xF2, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* color data of TO_HISTORY */
static _UBYTE RS2_4CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF0, 
0x00, 0x7F, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x01, 0xFF, 0xC0, 
0x00, 0x01, 0xFB, 0xC0, 0x00, 0x01, 0xF0, 0x20, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x01, 0xE3, 0x10, 
0x00, 0x01, 0xC7, 0x90, 0x00, 0x01, 0x8F, 0x90, 0x00, 0x01, 0x87, 0x90, 0x00, 0x01, 0xFF, 0xC0, 
0x00, 0x01, 0xFF, 0xC0, 0x00, 0x03, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0xFF, 0xFF, 0xF0, 0x00, 0x7F, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 
0x00, 0x01, 0xFF, 0xC0, 0x00, 0x01, 0xFB, 0xC0, 0x00, 0x01, 0xF7, 0xE0, 0x00, 0x01, 0xFF, 0xE0, 
0x00, 0x01, 0xFF, 0xF0, 0x00, 0x01, 0xFF, 0xF0, 0x00, 0x01, 0xFF, 0xF0, 0x00, 0x01, 0xFF, 0xF0, 
0x00, 0x01, 0xFF, 0xC0, 0x00, 0x01, 0xFF, 0xC0, 0x00, 0x03, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x07, 0xE0, 
0x00, 0x00, 0xDF, 0xE0, 0x00, 0x00, 0xFF, 0xF0, 0x00, 0x00, 0xFC, 0xF0, 0x00, 0x00, 0xF8, 0xF0, 
0x00, 0x00, 0xFC, 0xB0, 0x00, 0x00, 0xFC, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0xFF, 0xFA, 0x50, 0x00, 0x02, 0xFA, 0x50, 0x00, 0x01, 0x7A, 
0x5F, 0xFF, 0xFF, 0xFA, 0x40, 0x08, 0x00, 0x62, 0x40, 0x08, 0x03, 0xE2, 0x40, 0x08, 0x2F, 0xE2, 
0x40, 0x08, 0x18, 0x62, 0x40, 0x08, 0xF0, 0xB2, 0x40, 0x08, 0xA7, 0x92, 0x40, 0x08, 0x8F, 0xF2, 
0x40, 0x08, 0x8D, 0xF2, 0x40, 0x08, 0x87, 0xF2, 0x40, 0x08, 0xFF, 0xF2, 0x40, 0x08, 0x7F, 0x62, 
0x40, 0x0B, 0xFF, 0xE2, 0x40, 0x0F, 0xFF, 0xE2, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_HISTORY */
static _UBYTE RS2_4CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFF, 0x40, 0x00, 0x00, 0x03, 0x5F, 0xFF, 0xFF, 0xFB, 0x5F, 0xFF, 0xFF, 0xFB, 
0x5F, 0xFF, 0xFF, 0xFB, 0x5F, 0xFF, 0xFF, 0xFB, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xF3, 0x40, 0x0F, 0xFF, 0xF3, 
0x40, 0x0F, 0xFF, 0xF3, 0x40, 0x0F, 0xFF, 0xF3, 0x40, 0x0F, 0xFF, 0xF3, 0x40, 0x0F, 0xFF, 0xF3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* color data of TO_HISTORY */
static _UBYTE RS2_8CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xB8, 0x6A, 0xB0, 
0x01, 0xDC, 0xB5, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC0, 0x00, 0x03, 0x6B, 0xC0, 
0x00, 0x03, 0xB8, 0x00, 0x00, 0x03, 0x79, 0x80, 0x00, 0x03, 0x23, 0x00, 0x00, 0x02, 0x44, 0x40, 
0x00, 0x03, 0x43, 0x10, 0x00, 0x03, 0x15, 0x10, 0x00, 0x02, 0x1B, 0x40, 0x00, 0x03, 0xFF, 0xA0, 
0x00, 0x03, 0x7F, 0x40, 0x00, 0x03, 0xF0, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0xFF, 0xFF, 0xE2, 0x40, 0x7F, 0xFF, 0xF2, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x42, 
0x40, 0x01, 0xFF, 0xC2, 0x40, 0x01, 0xFB, 0xC2, 0x40, 0x01, 0xF3, 0x22, 0x40, 0x01, 0xF4, 0x02, 
0x40, 0x01, 0x68, 0x12, 0x40, 0x01, 0x47, 0x82, 0x40, 0x01, 0x0F, 0x82, 0x40, 0x01, 0x27, 0xD2, 
0x40, 0x01, 0xFF, 0xC2, 0x40, 0x01, 0xFF, 0xC2, 0x40, 0x03, 0xFF, 0xC2, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x40, 0x00, 0x00, 0x0B, 0xA0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x02, 0x80, 
0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x83, 0x40, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0x92, 0x00, 
0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0xFD, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x0F, 0x80, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0xFF, 0xFA, 0x50, 0x00, 0x15, 0x8A, 0x50, 0x00, 0x0A, 0xCA, 
0x5F, 0xFF, 0xFF, 0xFA, 0x40, 0x08, 0x00, 0x22, 0x40, 0x08, 0x14, 0xA2, 0x40, 0x08, 0x07, 0xE2, 
0x40, 0x08, 0x0A, 0xA2, 0x40, 0x08, 0xD7, 0x12, 0x40, 0x08, 0xAB, 0x52, 0x40, 0x08, 0x84, 0x92, 
0x40, 0x08, 0x9A, 0x92, 0x40, 0x08, 0xBC, 0x92, 0x40, 0x08, 0xFC, 0x72, 0x40, 0x08, 0x00, 0xA2, 
0x40, 0x08, 0x00, 0x22, 0x40, 0x0F, 0xFF, 0xE2, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0xFF, 0xFA, 0x53, 0xFF, 0xE8, 0x7A, 
0x51, 0xFF, 0xF4, 0x3A, 0x5F, 0xFF, 0xFF, 0xFA, 0x40, 0x08, 0x07, 0xE2, 0x40, 0x0B, 0xE8, 0x62, 
0x40, 0x0B, 0xDF, 0xE2, 0x40, 0x0B, 0xF9, 0xA2, 0x40, 0x0B, 0xFB, 0x12, 0x40, 0x0B, 0xF7, 0x52, 
0x40, 0x0B, 0xF7, 0x92, 0x40, 0x0B, 0xFD, 0xB2, 0x40, 0x0B, 0xDF, 0xB2, 0x40, 0x0B, 0x02, 0xF2, 
0x40, 0x0B, 0xFE, 0x62, 0x40, 0x0B, 0xFF, 0xA2, 0x40, 0x0F, 0xFF, 0xE2, 0x7F, 0xFF, 0xFF, 0xFE, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x15, 0x30, 0x00, 0x00, 0x0A, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 
0x00, 0x00, 0x14, 0x40, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x14, 0x40, 0x00, 0x00, 0x20, 0xE0, 
0x00, 0x00, 0x00, 0xA0, 0x00, 0x00, 0x0B, 0x60, 0x00, 0x00, 0x07, 0x40, 0x00, 0x00, 0x03, 0x40, 
0x00, 0x00, 0x02, 0x80, 0x00, 0x00, 0x7E, 0xC0, 0x00, 0x03, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x10, 0x00, 0x00, 0x0A, 0x80, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 
0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x62, 0x20, 
0x00, 0x00, 0x40, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x40, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x10, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x08, 0x00, 
0x00, 0x00, 0x14, 0xC0, 0x00, 0x00, 0x23, 0xE0, 0x00, 0x00, 0x04, 0xE0, 0x00, 0x00, 0x0B, 0x60, 
0x00, 0x00, 0x15, 0x60, 0x00, 0x00, 0x1B, 0x60, 0x00, 0x00, 0x02, 0x80, 0x00, 0x00, 0x7E, 0x40, 
0x00, 0x03, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_HISTORY */
static _UBYTE RS2_8CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x03, 0x5F, 0xFF, 0xFF, 0xFB, 0x50, 0x00, 0x00, 0x0B, 
0x50, 0x00, 0x00, 0x0B, 0x5F, 0xFF, 0xFF, 0xFB, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xF3, 0x40, 0x0F, 0xFF, 0xF3, 
0x40, 0x0F, 0xFF, 0xF3, 0x40, 0x0F, 0xFF, 0xF3, 0x40, 0x0F, 0xFF, 0xF3, 0x40, 0x0F, 0xFF, 0xF3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* mask of TO_MEMORY */
static _UBYTE RS3_MMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0xFF, 0xFA, 0x50, 0x00, 0x00, 0x0A, 
0x50, 0x00, 0x00, 0x0A, 0x5F, 0xFF, 0xFF, 0xFA, 0x40, 0x20, 0x00, 0x32, 0x40, 0x21, 0x04, 0x32, 
0x40, 0x23, 0x8E, 0x32, 0x40, 0x21, 0xDC, 0x32, 0x40, 0x20, 0xF8, 0x32, 0x40, 0x20, 0x70, 0x32, 
0x40, 0x20, 0xF8, 0x32, 0x40, 0x21, 0xDC, 0x32, 0x40, 0x23, 0x8E, 0x32, 0x40, 0x21, 0x04, 0x32, 
0x40, 0x20, 0x00, 0x32, 0x40, 0x3F, 0xFF, 0xF2, 0x40, 0x1F, 0xFF, 0xF2, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* data of TO_MEMORY */
static _UBYTE RS3_MDATA[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0xFF, 0xFA, 0x50, 0x00, 0x00, 0x0A, 
0x50, 0x00, 0x00, 0x0A, 0x5F, 0xFF, 0xFF, 0xFA, 0x40, 0x20, 0x00, 0x32, 0x40, 0x21, 0x04, 0x32, 
0x40, 0x23, 0x8E, 0x32, 0x40, 0x21, 0xDC, 0x32, 0x40, 0x20, 0xF8, 0x32, 0x40, 0x20, 0x70, 0x32, 
0x40, 0x20, 0xF8, 0x32, 0x40, 0x21, 0xDC, 0x32, 0x40, 0x23, 0x8E, 0x32, 0x40, 0x21, 0x04, 0x32, 
0x40, 0x20, 0x00, 0x32, 0x40, 0x3F, 0xFF, 0xF2, 0x40, 0x1F, 0xFF, 0xF2, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* color data of TO_MEMORY */
static _UBYTE RS3_4CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF0, 
0x00, 0x7F, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x40, 0x00, 0x01, 0xFF, 0xC0, 
0x00, 0x01, 0xFF, 0xC0, 0x00, 0x01, 0xFF, 0xC0, 0x00, 0x01, 0xFF, 0xC0, 0x00, 0x01, 0xFF, 0xC0, 
0x00, 0x01, 0xFF, 0xC0, 0x00, 0x01, 0xFF, 0xC0, 0x00, 0x03, 0xFF, 0xC0, 0x00, 0x03, 0xFF, 0xC0, 
0x00, 0x03, 0xFF, 0xC0, 0x00, 0x03, 0xFF, 0xC0, 0x00, 0x01, 0xCF, 0x00, 0x00, 0x01, 0xCE, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0xFF, 0xFF, 0xF0, 0x00, 0x7F, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x40, 
0x00, 0x01, 0x97, 0x80, 0x00, 0x01, 0x0C, 0x40, 0x00, 0x01, 0x88, 0x40, 0x00, 0x01, 0x80, 0x80, 
0x00, 0x01, 0xC1, 0x40, 0x00, 0x01, 0xC2, 0xC0, 0x00, 0x01, 0x82, 0xC0, 0x00, 0x03, 0x01, 0xC0, 
0x00, 0x02, 0x01, 0xC0, 0x00, 0x02, 0x21, 0xC0, 0x00, 0x02, 0x73, 0xC0, 0x00, 0x01, 0xCF, 0x00, 
0x00, 0x01, 0xCE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x93, 0x80, 0x00, 0x01, 0x0C, 0x40, 0x00, 0x00, 0xA8, 0x40, 
0x00, 0x00, 0xB4, 0x80, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x5A, 0x00, 0x00, 0x00, 0x9A, 0x00, 
0x00, 0x01, 0x19, 0x00, 0x00, 0x02, 0x09, 0x00, 0x00, 0x02, 0x21, 0x00, 0x00, 0x02, 0x52, 0x00, 
0x00, 0x01, 0xCF, 0x00, 0x00, 0x01, 0xCE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0xFF, 0xFA, 0x50, 0x00, 0x02, 0xFA, 0x50, 0x00, 0x01, 0x7A, 
0x5F, 0xFF, 0xFF, 0xFA, 0x40, 0x08, 0xF0, 0x62, 0x40, 0x09, 0x9B, 0xE2, 0x40, 0x09, 0x0C, 0x62, 
0x40, 0x09, 0x88, 0x62, 0x40, 0x08, 0x80, 0xE2, 0x40, 0x08, 0xC1, 0xE2, 0x40, 0x08, 0xC3, 0x62, 
0x40, 0x09, 0x83, 0xE2, 0x40, 0x0B, 0x01, 0x62, 0x40, 0x0A, 0x01, 0x62, 0x40, 0x0A, 0x21, 0x62, 
0x40, 0x0A, 0x73, 0xE2, 0x40, 0x0F, 0xFF, 0xE2, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_MEMORY */
static _UBYTE RS3_4CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFF, 0x40, 0x00, 0x00, 0x03, 0x5F, 0xFF, 0xFF, 0xFB, 0x5F, 0xFF, 0xFF, 0xFB, 
0x5F, 0xFF, 0xFF, 0xFB, 0x5F, 0xFF, 0xFF, 0xFB, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* color data of TO_MEMORY */
static _UBYTE RS3_8CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xB8, 0x6A, 0xB0, 
0x01, 0xDC, 0xB5, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE7, 0xC0, 0x00, 0x03, 0x93, 0x80, 
0x00, 0x03, 0xEC, 0x40, 0x00, 0x03, 0xFF, 0x40, 0x00, 0x03, 0xFE, 0x80, 0x00, 0x02, 0xFD, 0x40, 
0x00, 0x03, 0xFA, 0x40, 0x00, 0x03, 0xBA, 0xC0, 0x00, 0x03, 0x7D, 0x40, 0x00, 0x02, 0xDD, 0x40, 
0x00, 0x03, 0xAD, 0x40, 0x00, 0x02, 0x72, 0x40, 0x00, 0x01, 0x8C, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0xFF, 0xFF, 0xE2, 0x40, 0x7F, 0xFF, 0xF2, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0xF0, 0x42, 
0x40, 0x01, 0xFF, 0xC2, 0x40, 0x01, 0xFF, 0xC2, 0x40, 0x01, 0xDF, 0xC2, 0x40, 0x01, 0xCB, 0xC2, 
0x40, 0x01, 0xE7, 0xC2, 0x40, 0x01, 0xE7, 0xC2, 0x40, 0x01, 0xE7, 0xC2, 0x40, 0x03, 0xE7, 0xC2, 
0x40, 0x03, 0xF7, 0xC2, 0x40, 0x03, 0xFF, 0xC2, 0x40, 0x03, 0xFF, 0xC2, 0x40, 0x01, 0x8C, 0x02, 
0x7F, 0xFE, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x40, 0x00, 0x00, 0x0B, 0xA0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x9F, 0xC0, 0x00, 0x01, 0x0C, 0x40, 0x00, 0x00, 0x88, 0x40, 
0x00, 0x00, 0x80, 0xC0, 0x00, 0x00, 0x41, 0x80, 0x00, 0x00, 0x43, 0x80, 0x00, 0x00, 0x83, 0x00, 
0x00, 0x01, 0x01, 0x80, 0x00, 0x02, 0x01, 0x80, 0x00, 0x02, 0x21, 0x80, 0x00, 0x02, 0x53, 0x80, 
0x00, 0x01, 0x8C, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0xFF, 0xFA, 0x50, 0x00, 0x15, 0x8A, 0x50, 0x00, 0x0A, 0xCA, 
0x5F, 0xFF, 0xFF, 0xFA, 0x40, 0x08, 0x60, 0x22, 0x40, 0x08, 0xF7, 0xA2, 0x40, 0x09, 0x1F, 0xE2, 
0x40, 0x08, 0xA8, 0xE2, 0x40, 0x08, 0xB5, 0xA2, 0x40, 0x08, 0x5B, 0x22, 0x40, 0x08, 0x5E, 0xA2, 
0x40, 0x08, 0xDE, 0xA2, 0x40, 0x09, 0x9B, 0xA2, 0x40, 0x0B, 0x2B, 0xA2, 0x40, 0x0A, 0x73, 0xA2, 
0x40, 0x0B, 0xDE, 0x22, 0x40, 0x0F, 0xFF, 0xE2, 0x7F, 0xFF, 0xCF, 0xFE, 0x00, 0x00, 0x00, 0x00, 
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0xFF, 0xFA, 0x53, 0xFF, 0xE8, 0x7A, 
0x51, 0xFF, 0xF4, 0x3A, 0x5F, 0xFF, 0xFF, 0xFA, 0x40, 0x08, 0x97, 0xE2, 0x40, 0x0B, 0x68, 0x62, 
0x40, 0x0A, 0x13, 0xA2, 0x40, 0x0B, 0x00, 0xA2, 0x40, 0x0B, 0x01, 0x62, 0x40, 0x0B, 0x82, 0xE2, 
0x40, 0x0B, 0x85, 0x62, 0x40, 0x0B, 0x45, 0x62, 0x40, 0x0A, 0x82, 0x62, 0x40, 0x09, 0x22, 0x62, 
0x40, 0x08, 0x52, 0x62, 0x40, 0x09, 0xAD, 0xA2, 0x40, 0x0E, 0x73, 0xE2, 0x7F, 0xFF, 0xFF, 0xFE, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x15, 0x30, 0x00, 0x00, 0x0A, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x40, 
0x00, 0x01, 0x6C, 0x40, 0x00, 0x00, 0xF3, 0x80, 0x00, 0x01, 0x57, 0x80, 0x00, 0x00, 0x4B, 0x40, 
0x00, 0x00, 0xA6, 0xC0, 0x00, 0x00, 0xA5, 0xC0, 0x00, 0x01, 0x65, 0x40, 0x00, 0x02, 0xE6, 0xC0, 
0x00, 0x01, 0xF6, 0xC0, 0x00, 0x01, 0xDE, 0xC0, 0x00, 0x01, 0xAD, 0xC0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x10, 0x00, 0x00, 0x0A, 0x80, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x13, 0x80, 0x00, 0x00, 0x00, 0x80, 
0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x80, 0x00, 0x00, 0x44, 0x00, 
0x00, 0x00, 0x82, 0x80, 0x00, 0x01, 0x22, 0x80, 0x00, 0x00, 0x52, 0x80, 0x00, 0x01, 0x8C, 0x40, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x10, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x40, 0x00, 0x01, 0x08, 0x40, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x80, 0xC0, 0x00, 0x00, 0x81, 0x40, 
0x00, 0x01, 0x01, 0x40, 0x00, 0x02, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 
0x00, 0x00, 0x21, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_MEMORY */
static _UBYTE RS3_8CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x03, 0x5F, 0xFF, 0xFF, 0xFB, 0x5F, 0xFF, 0xFF, 0xFB, 
0x5F, 0xFF, 0xFF, 0xFB, 0x5F, 0xFF, 0xFF, 0xFB, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* mask of TO_PREV */
static _UBYTE RS4_MMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x08, 0x00, 0x02, 
0x40, 0x18, 0x00, 0x02, 0x40, 0x28, 0x00, 0x02, 0x40, 0x48, 0x00, 0x02, 0x40, 0x8F, 0xFE, 0x02, 
0x41, 0x00, 0x02, 0x02, 0x42, 0x00, 0x02, 0x02, 0x44, 0x00, 0x02, 0x02, 0x42, 0x00, 0x02, 0x02, 
0x41, 0x00, 0x02, 0x02, 0x40, 0x8F, 0xFE, 0x02, 0x40, 0x48, 0x00, 0x02, 0x40, 0x28, 0x00, 0x02, 
0x40, 0x18, 0x00, 0x02, 0x40, 0x08, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* data of TO_PREV */
static _UBYTE RS4_MDATA[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x08, 0x00, 0x02, 
0x40, 0x18, 0x00, 0x02, 0x40, 0x28, 0x00, 0x02, 0x40, 0x48, 0x00, 0x02, 0x40, 0x8F, 0xFE, 0x02, 
0x41, 0x00, 0x02, 0x02, 0x42, 0x00, 0x02, 0x02, 0x44, 0x00, 0x02, 0x02, 0x42, 0x00, 0x02, 0x02, 
0x41, 0x00, 0x02, 0x02, 0x40, 0x8F, 0xFE, 0x02, 0x40, 0x48, 0x00, 0x02, 0x40, 0x28, 0x00, 0x02, 
0x40, 0x18, 0x00, 0x02, 0x40, 0x08, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* color data of TO_PREV */
static _UBYTE RS4_4CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 
0x00, 0x10, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x1F, 0xC0, 0x00, 0x02, 0x00, 0x40, 0x00, 
0x00, 0x00, 0x40, 0x00, 0x04, 0x00, 0x40, 0x00, 0x04, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 
0x02, 0x00, 0x40, 0x00, 0x00, 0x1F, 0xC0, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 
0x00, 0x90, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 
0x00, 0x90, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x01, 0x1F, 0xC0, 0x00, 
0x02, 0x4F, 0xC0, 0x00, 0x03, 0x3F, 0xC0, 0x00, 0x04, 0xFF, 0xC0, 0x00, 0x07, 0xFF, 0xC0, 0x00, 
0x03, 0xFF, 0xC0, 0x00, 0x03, 0xFE, 0x40, 0x00, 0x01, 0xFF, 0xC0, 0x00, 0x01, 0xF0, 0x00, 0x00, 
0x00, 0xF0, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x70, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 
0x01, 0x1F, 0xC0, 0x00, 0x02, 0x4F, 0xC0, 0x00, 0x03, 0x3F, 0xC0, 0x00, 0x04, 0xFF, 0xC0, 0x00, 
0x07, 0xFF, 0xC0, 0x00, 0x03, 0xFF, 0xC0, 0x00, 0x03, 0xFE, 0x40, 0x00, 0x01, 0xFF, 0xC0, 0x00, 
0x01, 0xF0, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x40, 0xF0, 0x00, 0x02, 0x40, 0x90, 0x00, 0x02, 0x41, 0x90, 0x00, 0x02, 
0x41, 0x10, 0x00, 0x02, 0x43, 0x1F, 0xDD, 0xA2, 0x42, 0x00, 0xDD, 0xA2, 0x46, 0x02, 0x5D, 0xA2, 
0x44, 0x09, 0xDD, 0xA2, 0x44, 0x27, 0xDD, 0xA2, 0x44, 0x9F, 0xDD, 0xA2, 0x42, 0x7F, 0xDD, 0xA2, 
0x43, 0xFF, 0xDD, 0xA2, 0x41, 0xF0, 0x00, 0x02, 0x41, 0xF0, 0x00, 0x02, 0x40, 0xF0, 0x00, 0x02, 
0x40, 0xF0, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_PREV */
static _UBYTE RS4_4CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFF, 0x40, 0x00, 0x00, 0x03, 0x40, 0xF0, 0x00, 0x03, 0x40, 0xF0, 0x00, 0x03, 
0x41, 0xF0, 0x00, 0x03, 0x41, 0xF0, 0x00, 0x03, 0x43, 0xFF, 0xDD, 0xA3, 0x43, 0xFF, 0xDD, 0xA3, 
0x47, 0xFF, 0xDD, 0xA3, 0x47, 0xFF, 0xDD, 0xA3, 0x47, 0xFF, 0xDD, 0xA3, 0x47, 0xFF, 0xDD, 0xA3, 
0x43, 0xFF, 0xDD, 0xA3, 0x43, 0xFF, 0xDD, 0xA3, 0x41, 0xF0, 0x00, 0x03, 0x41, 0xF0, 0x00, 0x03, 
0x40, 0xF0, 0x00, 0x03, 0x40, 0xF0, 0x00, 0x03, 0x40, 0x00, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* color data of TO_PREV */
static _UBYTE RS4_8CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x70, 0x00, 0x01, 0x00, 0x70, 0x00, 0x01, 
0x00, 0x10, 0x00, 0x01, 0x00, 0xB6, 0x94, 0x01, 0x00, 0xF3, 0xF5, 0x01, 0x01, 0xDF, 0xE1, 0x41, 
0x00, 0x88, 0x6D, 0x81, 0x02, 0x10, 0x65, 0x41, 0x03, 0xF0, 0x42, 0x01, 0x01, 0x03, 0xFC, 0x01, 
0x00, 0x5E, 0x42, 0x81, 0x00, 0x2F, 0xE8, 0x41, 0x01, 0xC8, 0x94, 0x01, 0x00, 0x6B, 0x0C, 0xC1, 
0x00, 0x60, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 
0x3F, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x80, 0x00, 0x02, 0x40, 0xE0, 0x00, 0x02, 0x41, 0x40, 0x60, 0x02, 0x41, 0x0C, 0x35, 0x02, 
0x42, 0x20, 0x31, 0x42, 0x43, 0x57, 0x81, 0x92, 0x45, 0x00, 0x10, 0x52, 0x44, 0xF0, 0x16, 0x12, 
0x43, 0x00, 0x2C, 0x92, 0x42, 0x01, 0xAF, 0x92, 0x41, 0x10, 0x00, 0x52, 0x40, 0x17, 0x60, 0x02, 
0x40, 0x90, 0x88, 0x02, 0x40, 0x90, 0x00, 0x02, 0x40, 0x70, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x70, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x01, 0x11, 0x94, 0x00, 
0x01, 0x1F, 0xF5, 0x00, 0x02, 0x0D, 0xE5, 0x40, 0x02, 0x00, 0x41, 0x80, 0x04, 0x00, 0x40, 0x40, 
0x04, 0xFF, 0xEB, 0x80, 0x03, 0xFC, 0x6F, 0x60, 0x03, 0xA1, 0xD2, 0x80, 0x01, 0xDF, 0xC0, 0x40, 
0x01, 0x35, 0x04, 0x00, 0x00, 0x9B, 0x0C, 0xC0, 0x00, 0x90, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x40, 0xF0, 0x00, 0x02, 0x40, 0x90, 0x00, 0x02, 0x41, 0x70, 0x00, 0x02, 
0x41, 0x5F, 0xFF, 0x82, 0x42, 0x5F, 0xCA, 0xC2, 0x42, 0xEF, 0xDE, 0xA2, 0x44, 0xBF, 0xDE, 0x72, 
0x44, 0xFF, 0xFF, 0xB2, 0x47, 0x0F, 0xFD, 0xF2, 0x44, 0xFF, 0xD3, 0xF2, 0x43, 0xFE, 0x7D, 0x72, 
0x42, 0xFF, 0xFF, 0xB2, 0x41, 0xFA, 0xFF, 0xC2, 0x41, 0x7F, 0xF7, 0xC2, 0x40, 0xF0, 0x00, 0x02, 
0x40, 0xF0, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x03, 0x40, 0xF0, 0x00, 0x03, 0x40, 0xF0, 0x00, 0x03, 
0x41, 0x90, 0x00, 0x03, 0x41, 0xB6, 0x00, 0x03, 0x43, 0xBF, 0xC0, 0x03, 0x43, 0x10, 0x40, 0x03, 
0x47, 0x40, 0x60, 0x03, 0x47, 0x00, 0x40, 0x03, 0x44, 0x00, 0x40, 0x03, 0x46, 0x03, 0xD0, 0x03, 
0x42, 0x5F, 0xC0, 0x03, 0x43, 0x3F, 0xC0, 0x03, 0x41, 0xDD, 0x00, 0x03, 0x41, 0xF0, 0x00, 0x03, 
0x40, 0xF0, 0x00, 0x03, 0x40, 0xF0, 0x00, 0x03, 0x40, 0x00, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x48, 0xFF, 0x80, 
0x00, 0x40, 0x3F, 0xC0, 0x00, 0xEF, 0xBB, 0xE0, 0x00, 0xBF, 0x9F, 0xF0, 0x00, 0xFF, 0xBF, 0xF0, 
0x03, 0xF0, 0x16, 0x70, 0x01, 0x00, 0x2C, 0x90, 0x00, 0x00, 0x2F, 0xF0, 0x00, 0x00, 0x3F, 0xF0, 
0x00, 0x02, 0xFF, 0xC0, 0x00, 0x0F, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 
0x00, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x90, 0x00, 0x00, 0x5F, 0x80, 0x00, 
0x01, 0x20, 0x00, 0x00, 0x00, 0xCD, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_PREV */
static _UBYTE RS4_8CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x03, 0x40, 0xF0, 0x00, 0x03, 0x40, 0xF0, 0x00, 0x03, 
0x41, 0xF0, 0x00, 0x03, 0x41, 0xFF, 0xFF, 0x83, 0x43, 0xFF, 0xFF, 0xC3, 0x43, 0xFF, 0xFF, 0xE3, 
0x47, 0xFF, 0xFF, 0xF3, 0x47, 0xFF, 0xFF, 0xF3, 0x47, 0xFF, 0xFF, 0xF3, 0x47, 0xFF, 0xFF, 0xF3, 
0x43, 0xFF, 0xFF, 0xF3, 0x43, 0xFF, 0xFF, 0xF3, 0x41, 0xFF, 0xFF, 0xC3, 0x41, 0xFF, 0xFF, 0xC3, 
0x40, 0xF0, 0x00, 0x03, 0x40, 0xF0, 0x00, 0x03, 0x40, 0x00, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* mask of TO_HOME */
static _UBYTE RS5_MMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x3F, 0xF8, 0x02, 
0x40, 0x50, 0x04, 0x02, 0x40, 0x88, 0x02, 0x02, 0x41, 0x04, 0x01, 0x02, 0x42, 0x02, 0x00, 0x82, 
0x44, 0x01, 0x00, 0x42, 0x47, 0xFF, 0xFF, 0xE2, 0x44, 0x01, 0x00, 0x22, 0x44, 0xF9, 0x1F, 0x22, 
0x44, 0x89, 0x15, 0x22, 0x44, 0x89, 0x1F, 0x22, 0x44, 0xE9, 0x15, 0x22, 0x44, 0x89, 0x1F, 0x22, 
0x44, 0x89, 0x00, 0x22, 0x47, 0xFF, 0xFF, 0xE2, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* data of TO_HOME */
static _UBYTE RS5_MDATA[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x3F, 0xF8, 0x02, 
0x40, 0x50, 0x04, 0x02, 0x40, 0x88, 0x02, 0x02, 0x41, 0x04, 0x01, 0x02, 0x42, 0x02, 0x00, 0x82, 
0x44, 0x01, 0x00, 0x42, 0x47, 0xFF, 0xFF, 0xE2, 0x44, 0x01, 0x00, 0x22, 0x44, 0xF9, 0x1F, 0x22, 
0x44, 0x89, 0x15, 0x22, 0x44, 0x89, 0x1F, 0x22, 0x44, 0xE9, 0x15, 0x22, 0x44, 0x89, 0x1F, 0x22, 
0x44, 0x89, 0x00, 0x22, 0x47, 0xFF, 0xFF, 0xE2, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* color data of TO_HOME */
static _UBYTE RS5_4CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x03, 0xF0, 0x00, 0x00, 0x0F, 0xF8, 0x00, 
0x00, 0x3F, 0xFC, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x03, 0xFF, 0xFF, 0x00, 0x07, 0xC7, 0xFF, 0x80, 
0x03, 0x3B, 0xFF, 0x80, 0x01, 0xFD, 0xFF, 0x00, 0x01, 0xFE, 0xFD, 0x00, 0x01, 0xF7, 0x79, 0x00, 
0x01, 0xFD, 0xB1, 0x00, 0x01, 0xFF, 0xC1, 0x00, 0x01, 0xFF, 0xC2, 0x00, 0x01, 0xFF, 0xC4, 0x00, 
0x00, 0x7F, 0xC8, 0x00, 0x00, 0x1F, 0xD0, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x01, 0xC0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x03, 0x10, 0x00, 
0x00, 0x0C, 0x08, 0x00, 0x00, 0x30, 0x04, 0x00, 0x00, 0xC0, 0x02, 0x00, 0x03, 0x38, 0x01, 0x00, 
0x04, 0xC4, 0x00, 0x80, 0x03, 0x3A, 0x01, 0x80, 0x01, 0xFD, 0x03, 0x00, 0x01, 0xFE, 0x85, 0x00, 
0x01, 0xF7, 0x49, 0x00, 0x01, 0xFD, 0xB1, 0x00, 0x01, 0xFF, 0xC1, 0x00, 0x01, 0xFF, 0xC2, 0x00, 
0x01, 0xFF, 0xC4, 0x00, 0x00, 0x7F, 0xC8, 0x00, 0x00, 0x1F, 0xD0, 0x00, 0x00, 0x07, 0xE0, 0x00, 
0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 
0x00, 0x03, 0x10, 0x00, 0x00, 0x0C, 0x08, 0x00, 0x00, 0x30, 0x04, 0x00, 0x00, 0xC0, 0x02, 0x00, 
0x03, 0x38, 0x01, 0x00, 0x04, 0xC4, 0x00, 0x80, 0x03, 0x3A, 0x01, 0x80, 0x01, 0xFD, 0x03, 0x00, 
0x01, 0xFE, 0x85, 0x00, 0x01, 0xF7, 0x49, 0x00, 0x01, 0xED, 0xB1, 0x00, 0x01, 0xE3, 0xC1, 0x00, 
0x01, 0xE3, 0xC2, 0x00, 0x01, 0xE3, 0xC4, 0x00, 0x00, 0x63, 0xC8, 0x00, 0x00, 0x1B, 0xD0, 0x00, 
0x00, 0x07, 0xE0, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x01, 0xF0, 0x02, 0x40, 0x07, 0xF8, 0x02, 0x40, 0x1F, 0x1C, 0x02, 0x40, 0x7C, 0x0E, 0x02, 
0x41, 0xF8, 0x07, 0x02, 0x47, 0xFC, 0x03, 0x82, 0x47, 0xFE, 0x01, 0x82, 0x47, 0xC7, 0x03, 0x82, 
0x43, 0x03, 0x87, 0x82, 0x41, 0x01, 0xCF, 0x02, 0x41, 0x38, 0xFF, 0x02, 0x41, 0x2E, 0x7F, 0x82, 
0x41, 0x22, 0x3F, 0x82, 0x41, 0x22, 0x3F, 0x02, 0x41, 0xA2, 0x3E, 0x02, 0x40, 0xE2, 0x3C, 0x02, 
0x40, 0x7A, 0x38, 0x02, 0x40, 0x1E, 0x30, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x01, 0xC0, 0x00};

/* color mask of TO_HOME */
static _UBYTE RS5_4CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFF, 0x40, 0x01, 0xF0, 0x03, 0x40, 0x07, 0xF8, 0x03, 0x40, 0x1F, 0xFC, 0x03, 
0x40, 0x7F, 0xFE, 0x03, 0x41, 0xFF, 0xFF, 0x03, 0x47, 0xFF, 0xFF, 0x83, 0x47, 0xFF, 0xFF, 0x83, 
0x47, 0xFF, 0xFF, 0x83, 0x43, 0xFF, 0xFF, 0x83, 0x41, 0xFF, 0xFF, 0x03, 0x41, 0xFF, 0xFF, 0x03, 
0x41, 0xFF, 0xFF, 0x83, 0x41, 0xFF, 0xFF, 0x83, 0x41, 0xFF, 0xFF, 0x03, 0x41, 0xFF, 0xFE, 0x03, 
0x40, 0xFF, 0xFC, 0x03, 0x40, 0x7F, 0xF8, 0x03, 0x40, 0x1F, 0xF0, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* color data of TO_HOME */
static _UBYTE RS5_8CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x01, 0x00, 0x03, 0xD0, 0x01, 0x00, 0x0E, 0x38, 0x01, 
0x00, 0x3A, 0xCC, 0x01, 0x00, 0xFE, 0x16, 0x01, 0x03, 0xFF, 0x0B, 0x01, 0x07, 0xC7, 0x95, 0x81, 
0x03, 0x03, 0xC2, 0x01, 0x01, 0x59, 0xD5, 0x01, 0x01, 0x44, 0xB7, 0x01, 0x01, 0x34, 0x7D, 0x01, 
0x01, 0x2D, 0x31, 0x01, 0x01, 0x3B, 0x11, 0x01, 0x01, 0x3E, 0xC2, 0x01, 0x01, 0xBE, 0x44, 0x01, 
0x00, 0x7E, 0x08, 0x01, 0x00, 0x1E, 0x10, 0x01, 0x00, 0x06, 0x20, 0x01, 0x00, 0x01, 0xC0, 0x01, 
0x3F, 0xFE, 0x3F, 0xFF, 0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x01, 0xF0, 0x02, 0x40, 0x07, 0x38, 0x02, 
0x40, 0x1E, 0x1C, 0x02, 0x40, 0x78, 0xD6, 0x02, 0x41, 0xC0, 0x1B, 0x02, 0x47, 0x38, 0x0F, 0x82, 
0x44, 0xC4, 0x16, 0x82, 0x47, 0x4E, 0x03, 0x82, 0x43, 0xD9, 0x07, 0x82, 0x41, 0x44, 0x85, 0x02, 
0x41, 0x3C, 0x49, 0x02, 0x41, 0x37, 0x33, 0x82, 0x41, 0x2F, 0x07, 0x82, 0x41, 0x3E, 0xCF, 0x02, 
0x41, 0xB6, 0x4E, 0x02, 0x40, 0xEA, 0x1C, 0x02, 0x40, 0x76, 0x38, 0x02, 0x40, 0x1E, 0x30, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x01, 0xF0, 0x00, 
0x00, 0x07, 0x38, 0x00, 0x00, 0x1F, 0xDC, 0x00, 0x00, 0x7D, 0xF6, 0x00, 0x01, 0xC1, 0xFB, 0x00, 
0x07, 0x38, 0xFF, 0x80, 0x04, 0xC4, 0x7E, 0x80, 0x07, 0x7E, 0x3F, 0x80, 0x03, 0xA5, 0x2F, 0x80, 
0x01, 0xBA, 0xCD, 0x00, 0x01, 0xFB, 0x49, 0x00, 0x01, 0xF6, 0xB3, 0x80, 0x01, 0xE6, 0xC7, 0x80, 
0x01, 0xE3, 0x0F, 0x00, 0x01, 0xE3, 0x8E, 0x00, 0x00, 0xE3, 0xDC, 0x00, 0x00, 0x73, 0xF8, 0x00, 
0x00, 0x1F, 0xF0, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x7F, 0xFF, 0x1F, 0xFE, 
0x40, 0x00, 0xE0, 0x02, 0x40, 0x03, 0xD0, 0x02, 0x40, 0x0C, 0x28, 0x02, 0x40, 0x30, 0x0C, 0x02, 
0x40, 0xC2, 0x06, 0x02, 0x43, 0x7A, 0x01, 0x02, 0x45, 0xFD, 0x81, 0x82, 0x43, 0x82, 0x01, 0x82, 
0x41, 0x03, 0x03, 0x02, 0x41, 0x01, 0x97, 0x02, 0x41, 0x30, 0xDF, 0x02, 0x41, 0x2C, 0x7D, 0x02, 
0x41, 0x22, 0x39, 0x02, 0x41, 0x22, 0x32, 0x02, 0x41, 0xA2, 0x34, 0x02, 0x40, 0x62, 0x28, 0x02, 
0x40, 0x1A, 0x10, 0x02, 0x40, 0x06, 0x20, 0x02, 0x7F, 0xFD, 0xDF, 0xFE, 0x00, 0x00, 0x00, 0x00, 
0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x01, 0x10, 0x03, 0xC0, 0x04, 0xE8, 0x03, 0xC0, 0x13, 0xF4, 0x03, 
0xC0, 0x4F, 0xFA, 0x03, 0xC1, 0x3D, 0xFD, 0x03, 0xC4, 0x85, 0xFE, 0x83, 0xC2, 0x3A, 0x7F, 0x03, 
0xC4, 0xFD, 0xFF, 0x83, 0xC2, 0xFE, 0xFE, 0x83, 0xC0, 0xFF, 0x6A, 0x03, 0xC0, 0xCF, 0xA6, 0x03, 
0xC0, 0xDB, 0xCA, 0x83, 0xC0, 0xDD, 0xFE, 0x83, 0xC0, 0xDD, 0xFD, 0x03, 0xC0, 0x5D, 0xFA, 0x03, 
0xC0, 0x9D, 0xF4, 0x03, 0xC0, 0x6D, 0xE8, 0x03, 0xC0, 0x19, 0xD0, 0x03, 0xFF, 0xFE, 0x3F, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 
0x00, 0x03, 0xF0, 0x00, 0x00, 0x0F, 0xF8, 0x00, 0x00, 0x3D, 0xFC, 0x00, 0x00, 0x85, 0xFE, 0x00, 
0x02, 0x02, 0x7F, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x68, 0x00, 
0x00, 0x00, 0x20, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 
0x00, 0x1C, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xD0, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x3D, 0xF0, 0x00, 
0x00, 0x85, 0xFA, 0x00, 0x02, 0x02, 0x7C, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0xFC, 0x00, 
0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x18, 0x00, 
0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 
0x00, 0x0C, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 
0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_HOME */
static _UBYTE RS5_8CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x01, 0xF0, 0x03, 0x40, 0x07, 0xF8, 0x03, 0x40, 0x1F, 0xFC, 0x03, 
0x40, 0x7F, 0xFE, 0x03, 0x41, 0xFF, 0xFF, 0x03, 0x47, 0xFF, 0xFF, 0x83, 0x47, 0xFF, 0xFF, 0x83, 
0x47, 0xFF, 0xFF, 0x83, 0x43, 0xFF, 0xFF, 0x83, 0x41, 0xFF, 0xFF, 0x03, 0x41, 0xFF, 0xFF, 0x03, 
0x41, 0xFF, 0xFF, 0x83, 0x41, 0xFF, 0xFF, 0x83, 0x41, 0xFF, 0xFF, 0x03, 0x41, 0xFF, 0xFE, 0x03, 
0x40, 0xFF, 0xFC, 0x03, 0x40, 0x7F, 0xF8, 0x03, 0x40, 0x1F, 0xF0, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* mask of TO_NEXT */
static _UBYTE RS6_MMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x20, 0x02, 
0x40, 0x00, 0x30, 0x02, 0x40, 0x00, 0x28, 0x02, 0x40, 0x00, 0x24, 0x02, 0x40, 0xFF, 0xE2, 0x02, 
0x40, 0x80, 0x01, 0x02, 0x40, 0x80, 0x00, 0x82, 0x40, 0x80, 0x00, 0x42, 0x40, 0x80, 0x00, 0x82, 
0x40, 0x80, 0x01, 0x02, 0x40, 0xFF, 0xE2, 0x02, 0x40, 0x00, 0x24, 0x02, 0x40, 0x00, 0x28, 0x02, 
0x40, 0x00, 0x30, 0x02, 0x40, 0x00, 0x20, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* data of TO_NEXT */
static _UBYTE RS6_MDATA[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x20, 0x02, 
0x40, 0x00, 0x30, 0x02, 0x40, 0x00, 0x28, 0x02, 0x40, 0x00, 0x24, 0x02, 0x40, 0xFF, 0xE2, 0x02, 
0x40, 0x80, 0x01, 0x02, 0x40, 0x80, 0x00, 0x82, 0x40, 0x80, 0x00, 0x42, 0x40, 0x80, 0x00, 0x82, 
0x40, 0x80, 0x01, 0x02, 0x40, 0xFF, 0xE2, 0x02, 0x40, 0x00, 0x24, 0x02, 0x40, 0x00, 0x28, 0x02, 
0x40, 0x00, 0x30, 0x02, 0x40, 0x00, 0x20, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* color data of TO_NEXT */
static _UBYTE RS6_4CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x12, 0x00, 
0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x04, 0x00, 0x80, 
0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x40, 0x00, 0x04, 0x00, 0x40, 0x00, 0x04, 0x00, 0x00, 
0x00, 0x04, 0x00, 0x80, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x10, 0x00, 
0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 
0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x07, 0xF3, 0x00, 
0x00, 0x04, 0x4F, 0x80, 0x00, 0x05, 0x3F, 0x80, 0x00, 0x04, 0xFF, 0xC0, 0x00, 0x07, 0xFF, 0xC0, 
0x00, 0x07, 0xFF, 0x80, 0x00, 0x07, 0xFF, 0x80, 0x00, 0x07, 0xFF, 0x00, 0x00, 0x00, 0x1F, 0x00, 
0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x15, 0x00, 
0x00, 0x07, 0xF3, 0x00, 0x00, 0x04, 0x4F, 0x80, 0x00, 0x05, 0x3F, 0x80, 0x00, 0x04, 0xFF, 0xC0, 
0x00, 0x07, 0xFF, 0xC0, 0x00, 0x07, 0xFF, 0x80, 0x00, 0x07, 0xFF, 0x80, 0x00, 0x07, 0xFF, 0x00, 
0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x1C, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x1E, 0x02, 0x40, 0x00, 0x12, 0x02, 0x40, 0x00, 0x13, 0x02, 
0x40, 0x00, 0x11, 0x02, 0x4B, 0x77, 0xF1, 0x82, 0x4B, 0x74, 0x00, 0x82, 0x4B, 0x74, 0x01, 0xC2, 
0x4B, 0x74, 0x04, 0xC2, 0x4B, 0x74, 0x13, 0xC2, 0x4B, 0x74, 0x4F, 0xC2, 0x4B, 0x75, 0x3F, 0x82, 
0x4B, 0x77, 0xFF, 0x82, 0x40, 0x00, 0x1F, 0x02, 0x40, 0x00, 0x1F, 0x02, 0x40, 0x00, 0x1E, 0x02, 
0x40, 0x00, 0x1E, 0x02, 0x40, 0x00, 0x00, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_NEXT */
static _UBYTE RS6_4CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFF, 0x40, 0x00, 0x00, 0x03, 0x40, 0x00, 0x1E, 0x03, 0x40, 0x00, 0x1E, 0x03, 
0x40, 0x00, 0x1F, 0x03, 0x40, 0x00, 0x1F, 0x03, 0x4B, 0x77, 0xFF, 0x83, 0x4B, 0x77, 0xFF, 0x83, 
0x4B, 0x77, 0xFF, 0xC3, 0x4B, 0x77, 0xFF, 0xC3, 0x4B, 0x77, 0xFF, 0xC3, 0x4B, 0x77, 0xFF, 0xC3, 
0x4B, 0x77, 0xFF, 0x83, 0x4B, 0x77, 0xFF, 0x83, 0x40, 0x00, 0x1F, 0x03, 0x40, 0x00, 0x1F, 0x03, 
0x40, 0x00, 0x1E, 0x03, 0x40, 0x00, 0x1E, 0x03, 0x40, 0x00, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* color data of TO_NEXT */
static _UBYTE RS6_8CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x1C, 0x01, 0x00, 0x00, 0x1C, 0x01, 
0x00, 0x00, 0x1C, 0x01, 0x03, 0xF2, 0xFE, 0x01, 0x06, 0xA7, 0x9E, 0x01, 0x0A, 0xA7, 0xFF, 0x01, 
0x0C, 0xFF, 0xFF, 0x01, 0x0B, 0xFF, 0xFF, 0x81, 0x0C, 0x04, 0x01, 0x81, 0x00, 0x7F, 0x80, 0x01, 
0x0C, 0x04, 0xF4, 0x01, 0x0B, 0xFF, 0xE8, 0x01, 0x07, 0xD2, 0x27, 0x01, 0x01, 0xFF, 0xCC, 0x01, 
0x00, 0x00, 0x0C, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 
0x3F, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x00, 0x02, 0x02, 0x40, 0x00, 0x0E, 0x02, 0x43, 0xAC, 0x25, 0x02, 0x46, 0xA0, 0x61, 0x02, 
0x4A, 0xB0, 0x08, 0x82, 0x5C, 0x93, 0xDD, 0x82, 0x5A, 0xB3, 0xEF, 0x42, 0x5C, 0x50, 0x00, 0x42, 
0x52, 0x68, 0x00, 0x82, 0x5D, 0x6B, 0x00, 0x82, 0x5B, 0xD0, 0x11, 0x02, 0x47, 0x8D, 0xD0, 0x02, 
0x41, 0x9E, 0x52, 0x02, 0x40, 0x00, 0x12, 0x02, 0x40, 0x00, 0x1C, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x01, 0x11, 0x00, 
0x00, 0x07, 0xF1, 0x00, 0x00, 0x44, 0x00, 0x80, 0x00, 0x04, 0x00, 0x80, 0x00, 0x04, 0x00, 0x40, 
0x03, 0x2F, 0xE0, 0x40, 0x0D, 0xEC, 0x7E, 0x80, 0x00, 0x17, 0x0B, 0x80, 0x00, 0x07, 0xF7, 0x00, 
0x00, 0x01, 0x59, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x1C, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x1E, 0x02, 0x40, 0x00, 0x12, 0x02, 0x40, 0x00, 0x1D, 0x02, 
0x43, 0xAD, 0xF5, 0x02, 0x47, 0xFF, 0xF4, 0x82, 0x4F, 0xFC, 0x8E, 0x82, 0x4F, 0xF7, 0xFF, 0x42, 
0x4F, 0xFF, 0xFF, 0x42, 0x4F, 0xFF, 0xFF, 0xC2, 0x4F, 0x97, 0xFF, 0x42, 0x4F, 0xFC, 0xFF, 0x82, 
0x4F, 0xFF, 0xFE, 0x82, 0x47, 0xBE, 0xBF, 0x02, 0x41, 0xBE, 0x5D, 0x02, 0x40, 0x00, 0x1E, 0x02, 
0x40, 0x00, 0x1E, 0x02, 0x40, 0x00, 0x00, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x03, 0x40, 0x00, 0x1E, 0x03, 0x40, 0x00, 0x1E, 0x03, 
0x40, 0x00, 0x13, 0x03, 0x43, 0xF2, 0xFB, 0x03, 0x47, 0xFF, 0xFB, 0x83, 0x4F, 0xAF, 0x71, 0x83, 
0x5F, 0x9C, 0x08, 0xC3, 0x5E, 0xA7, 0xEE, 0xC3, 0x5C, 0x84, 0x1E, 0x43, 0x50, 0x17, 0x81, 0xC3, 
0x5E, 0x87, 0xF4, 0x83, 0x5F, 0xC7, 0xF9, 0x83, 0x47, 0xE1, 0x77, 0x03, 0x41, 0xFD, 0xDF, 0x03, 
0x40, 0x00, 0x1E, 0x03, 0x40, 0x00, 0x1E, 0x03, 0x40, 0x00, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x0C, 0x04, 0x00, 
0x00, 0x00, 0x04, 0x00, 0x00, 0x10, 0x8E, 0x00, 0x00, 0x63, 0xF7, 0x00, 0x01, 0x58, 0x11, 0x00, 
0x00, 0x50, 0x01, 0x80, 0x02, 0x68, 0x00, 0x00, 0x01, 0x68, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 
0x00, 0x1E, 0x80, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 
0x03, 0xA0, 0xE0, 0x00, 0x07, 0xF8, 0x01, 0x00, 0x0F, 0xA8, 0x00, 0x00, 0x0F, 0x90, 0x08, 0x80, 
0x0E, 0xA3, 0xEE, 0x00, 0x0C, 0x80, 0x1E, 0x00, 0x00, 0x13, 0x81, 0x80, 0x0E, 0x83, 0xF4, 0x00, 
0x0F, 0xC0, 0x09, 0x00, 0x07, 0xA1, 0x66, 0x00, 0x01, 0xBC, 0x4E, 0x00, 0x00, 0x00, 0x0C, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_NEXT */
static _UBYTE RS6_8CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x03, 0x40, 0x00, 0x1E, 0x03, 0x40, 0x00, 0x1E, 0x03, 
0x40, 0x00, 0x1F, 0x03, 0x43, 0xFF, 0xFF, 0x03, 0x47, 0xFF, 0xFF, 0x83, 0x4F, 0xFF, 0xFF, 0x83, 
0x5F, 0xFF, 0xFF, 0xC3, 0x5F, 0xFF, 0xFF, 0xC3, 0x5F, 0xFF, 0xFF, 0xC3, 0x5F, 0xFF, 0xFF, 0xC3, 
0x5F, 0xFF, 0xFF, 0x83, 0x5F, 0xFF, 0xFF, 0x83, 0x47, 0xFF, 0xFF, 0x03, 0x41, 0xFF, 0xDF, 0x03, 
0x40, 0x00, 0x1E, 0x03, 0x40, 0x00, 0x1E, 0x03, 0x40, 0x00, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* mask of TO_INDEX */
static _UBYTE RS7_MMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x43, 0xFF, 0xFF, 0x02, 0x42, 0x00, 0x04, 0x82, 
0x42, 0x00, 0x04, 0x82, 0x42, 0x00, 0x04, 0x82, 0x42, 0x00, 0x07, 0x02, 0x42, 0x00, 0x04, 0x82, 
0x42, 0x00, 0x04, 0x82, 0x42, 0x00, 0x04, 0x82, 0x42, 0x00, 0x07, 0x02, 0x42, 0x00, 0x04, 0x82, 
0x42, 0xB9, 0x14, 0x82, 0x42, 0xA4, 0xA4, 0x82, 0x42, 0xA4, 0x47, 0x02, 0x42, 0xA4, 0xA4, 0x82, 
0x42, 0xB9, 0x14, 0x82, 0x42, 0x00, 0x04, 0x82, 0x43, 0xFF, 0xFF, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* data of TO_INDEX */
static _UBYTE RS7_MDATA[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x43, 0xFF, 0xFF, 0x02, 0x42, 0x00, 0x04, 0x82, 
0x42, 0x00, 0x04, 0x82, 0x42, 0x00, 0x04, 0x82, 0x42, 0x00, 0x07, 0x02, 0x42, 0x00, 0x04, 0x82, 
0x42, 0x00, 0x04, 0x82, 0x42, 0x00, 0x04, 0x82, 0x42, 0x00, 0x07, 0x02, 0x42, 0x00, 0x04, 0x82, 
0x42, 0xB9, 0x14, 0x82, 0x42, 0xA4, 0xA4, 0x82, 0x42, 0xA4, 0x47, 0x02, 0x42, 0xA4, 0xA4, 0x82, 
0x42, 0xB9, 0x14, 0x82, 0x42, 0x00, 0x04, 0x82, 0x43, 0xFF, 0xFF, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* color data of TO_INDEX */
static _UBYTE RS7_4CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x02, 0xFF, 0xFC, 0x80, 
0x02, 0xFF, 0xFC, 0x80, 0x02, 0xFF, 0xFC, 0x80, 0x02, 0xFF, 0xFF, 0x00, 0x02, 0xFF, 0xFF, 0x00, 
0x02, 0xFF, 0xFF, 0x00, 0x02, 0xFF, 0xFF, 0x00, 0x02, 0xFF, 0xFE, 0x00, 0x02, 0xFF, 0xFF, 0x00, 
0x02, 0xFF, 0xFF, 0x00, 0x02, 0xFF, 0xFF, 0x00, 0x02, 0xFF, 0xFE, 0x00, 0x02, 0xFF, 0xFF, 0x00, 
0x02, 0xFF, 0xFF, 0x00, 0x02, 0xFF, 0xFF, 0x00, 0x01, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x00, 
0x00, 0x7F, 0xF8, 0x80, 0x00, 0x7F, 0xF8, 0x80, 0x00, 0x70, 0x18, 0x80, 0x00, 0x70, 0x1F, 0x00, 
0x00, 0x70, 0x1B, 0x00, 0x00, 0x7F, 0xFB, 0x00, 0x00, 0x7F, 0xFB, 0x00, 0x00, 0x7F, 0xFA, 0x00, 
0x00, 0x7F, 0xFB, 0x00, 0x00, 0x7F, 0xFB, 0x00, 0x00, 0x7F, 0xFB, 0x00, 0x00, 0x7F, 0xFA, 0x00, 
0x00, 0x7F, 0xFB, 0x00, 0x00, 0x7F, 0xFB, 0x00, 0x00, 0x7F, 0xFB, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x1F, 0xF0, 0x80, 0x00, 0x10, 0x10, 0x80, 
0x00, 0x10, 0x17, 0x00, 0x00, 0x10, 0x11, 0x00, 0x00, 0x1F, 0xF1, 0x00, 0x00, 0x00, 0x01, 0x00, 
0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x16, 0x51, 0x00, 0x00, 0x15, 0x21, 0x00, 
0x00, 0x15, 0x22, 0x00, 0x00, 0x15, 0x51, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x43, 0xFF, 0xFF, 0x02, 0x42, 0xFF, 0xFC, 0x82, 0x42, 0xE0, 0x0C, 0x82, 
0x42, 0xEF, 0xEC, 0x82, 0x42, 0xEF, 0xEF, 0x02, 0x42, 0xEF, 0xEF, 0x02, 0x42, 0xE0, 0x0F, 0x02, 
0x42, 0xFF, 0xFF, 0x02, 0x42, 0xFF, 0xFE, 0x02, 0x42, 0xFF, 0xFF, 0x02, 0x42, 0xFF, 0xFF, 0x02, 
0x42, 0xFF, 0xFF, 0x02, 0x42, 0xFF, 0xFE, 0x02, 0x42, 0xFF, 0xF7, 0x02, 0x42, 0xFF, 0xE7, 0x02, 
0x42, 0xFF, 0xC7, 0x02, 0x43, 0xFF, 0xFE, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_INDEX */
static _UBYTE RS7_4CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFF, 0x40, 0x00, 0x00, 0x03, 0x43, 0xFF, 0xFF, 0x03, 0x43, 0xFF, 0xFF, 0x83, 
0x43, 0xFF, 0xFF, 0x83, 0x43, 0xFF, 0xFF, 0x83, 0x43, 0xFF, 0xFF, 0x03, 0x43, 0xFF, 0xFF, 0x03, 
0x43, 0xFF, 0xFF, 0x03, 0x43, 0xFF, 0xFF, 0x03, 0x43, 0xFF, 0xFE, 0x03, 0x43, 0xFF, 0xFF, 0x03, 
0x43, 0xFF, 0xFF, 0x03, 0x43, 0xFF, 0xFF, 0x03, 0x43, 0xFF, 0xFE, 0x03, 0x43, 0xFF, 0xFF, 0x03, 
0x43, 0xFF, 0xFF, 0x03, 0x43, 0xFF, 0xFF, 0x03, 0x43, 0xFF, 0xFE, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* color data of TO_INDEX */
static _UBYTE RS7_8CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF8, 0x00, 0x00, 0xBF, 0xFF, 0x00, 
0x00, 0xBF, 0xFF, 0x00, 0x00, 0xB0, 0x1F, 0x00, 0x00, 0xB0, 0x18, 0x00, 0x00, 0xB0, 0x1E, 0x00, 
0x00, 0xBF, 0xFE, 0x00, 0x00, 0xBF, 0xFE, 0x00, 0x00, 0xBF, 0xFC, 0x00, 0x01, 0xBF, 0xFC, 0x00, 
0x00, 0xBF, 0xFC, 0x00, 0x01, 0xBF, 0xFC, 0x00, 0x00, 0xBF, 0xFC, 0x00, 0x00, 0xBF, 0xFC, 0x00, 
0x00, 0xBF, 0xFC, 0x00, 0x00, 0xBF, 0xFC, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x02, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x41, 0xFF, 0xFF, 0x02, 
0x41, 0xC0, 0x07, 0x82, 0x41, 0xDF, 0xF7, 0x82, 0x41, 0xDF, 0xF7, 0x82, 0x41, 0xDF, 0xF7, 0x02, 
0x41, 0xDF, 0xF7, 0x02, 0x41, 0xDF, 0xF7, 0x02, 0x41, 0xC0, 0x07, 0x02, 0x40, 0xC0, 0x06, 0x02, 
0x41, 0xC0, 0x07, 0x02, 0x40, 0xD6, 0x57, 0x02, 0x41, 0xD5, 0x27, 0x02, 0x40, 0xD5, 0x26, 0x02, 
0x40, 0xD5, 0x5D, 0x02, 0x40, 0xC0, 0x1D, 0x02, 0x40, 0xC0, 0x3D, 0x02, 0x40, 0xFF, 0xFE, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x01, 0x00, 0x07, 0x00, 0x03, 0x40, 0x03, 0x80, 0x03, 0x5F, 0xF3, 0x80, 0x03, 0x5F, 0xF3, 0x80, 
0x03, 0x5F, 0xF7, 0x00, 0x03, 0x5F, 0xF1, 0x00, 0x03, 0x5F, 0xF1, 0x00, 0x03, 0x40, 0x01, 0x00, 
0x02, 0x40, 0x02, 0x00, 0x03, 0x40, 0x03, 0x00, 0x02, 0x56, 0x53, 0x00, 0x03, 0x55, 0x23, 0x00, 
0x02, 0x55, 0x22, 0x00, 0x02, 0x55, 0x59, 0x00, 0x02, 0x40, 0x19, 0x00, 0x02, 0x40, 0x39, 0x00, 
0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x42, 0x00, 0x00, 0x02, 0x43, 0x00, 0x03, 0x02, 0x43, 0x1F, 0xF3, 0x02, 
0x43, 0x10, 0x13, 0x02, 0x43, 0x10, 0x10, 0x02, 0x43, 0x10, 0x10, 0x02, 0x43, 0x1F, 0xF0, 0x02, 
0x43, 0x00, 0x00, 0x02, 0x42, 0x00, 0x00, 0x02, 0x43, 0x00, 0x00, 0x02, 0x42, 0x16, 0x50, 0x02, 
0x43, 0x15, 0x20, 0x02, 0x42, 0x15, 0x20, 0x02, 0x42, 0x15, 0x5A, 0x02, 0x42, 0x00, 0x1A, 0x02, 
0x42, 0x00, 0x3A, 0x02, 0x43, 0x00, 0x00, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x43, 0x00, 0x00, 0x02, 0x42, 0x7F, 0xF8, 0x02, 
0x42, 0x60, 0x08, 0x02, 0x42, 0x6F, 0xE8, 0x02, 0x42, 0x6F, 0xE8, 0x02, 0x42, 0x6F, 0xEA, 0x02, 
0x42, 0x60, 0x0A, 0x02, 0x42, 0x7F, 0xFA, 0x02, 0x43, 0x7F, 0xF8, 0x02, 0x42, 0x7F, 0xFA, 0x02, 
0x43, 0x69, 0xAA, 0x02, 0x42, 0x6A, 0xDA, 0x02, 0x43, 0x6A, 0xD8, 0x02, 0x43, 0x6A, 0xA2, 0x02, 
0x43, 0x7F, 0xE2, 0x02, 0x43, 0x7F, 0xC2, 0x02, 0x43, 0x00, 0x00, 0x02, 0x7D, 0xFF, 0xFF, 0xFE, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x00, 
0x03, 0xFF, 0xFF, 0x80, 0x03, 0xFF, 0xFF, 0x80, 0x03, 0xFF, 0xFF, 0x80, 0x03, 0xFF, 0xFF, 0x00, 
0x03, 0xFF, 0xFF, 0x00, 0x03, 0xFF, 0xFF, 0x00, 0x03, 0xFF, 0xFF, 0x00, 0x03, 0xFF, 0xFE, 0x00, 
0x03, 0xFF, 0xFF, 0x00, 0x03, 0xE9, 0xAF, 0x00, 0x03, 0xEA, 0xDF, 0x00, 0x03, 0xEA, 0xDE, 0x00, 
0x03, 0xEA, 0xAF, 0x00, 0x03, 0xFF, 0xFF, 0x00, 0x03, 0xFF, 0xFF, 0x00, 0x01, 0xFF, 0xFE, 0x00, 
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0xFF, 0xFF, 0x00, 0x01, 0xBF, 0xFF, 0x80, 0x01, 0xBF, 0xFF, 0x80, 0x01, 0xB0, 0x1F, 0x80, 
0x01, 0xB0, 0x1F, 0x00, 0x01, 0xB0, 0x1D, 0x00, 0x01, 0xBF, 0xFD, 0x00, 0x01, 0xBF, 0xFD, 0x00, 
0x01, 0xBF, 0xFE, 0x00, 0x01, 0xBF, 0xFD, 0x00, 0x01, 0xA9, 0xAD, 0x00, 0x01, 0xAA, 0xDD, 0x00, 
0x01, 0xAA, 0xDE, 0x00, 0x01, 0xAA, 0xAD, 0x00, 0x01, 0xBF, 0xFD, 0x00, 0x01, 0xBF, 0xFD, 0x00, 
0x00, 0xFF, 0xFE, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x02, 0xC0, 0x04, 0x80, 0x02, 0xC0, 0x04, 0x80, 
0x02, 0xCF, 0xE4, 0x80, 0x02, 0xCF, 0xE7, 0x00, 0x02, 0xCF, 0xE7, 0x00, 0x02, 0xC0, 0x07, 0x00, 
0x02, 0xC0, 0x07, 0x00, 0x02, 0xC0, 0x06, 0x00, 0x02, 0xC0, 0x07, 0x00, 0x02, 0xC0, 0x07, 0x00, 
0x02, 0xC0, 0x07, 0x00, 0x02, 0xC0, 0x06, 0x00, 0x02, 0xC0, 0x07, 0x00, 0x02, 0xC0, 0x07, 0x00, 
0x02, 0xC0, 0x07, 0x00, 0x01, 0xFF, 0xFE, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_INDEX */
static _UBYTE RS7_8CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x03, 0x43, 0xFF, 0xFF, 0x03, 0x43, 0xFF, 0xFF, 0x83, 
0x43, 0xFF, 0xFF, 0x83, 0x43, 0xFF, 0xFF, 0x83, 0x43, 0xFF, 0xFF, 0x03, 0x43, 0xFF, 0xFF, 0x03, 
0x43, 0xFF, 0xFF, 0x03, 0x43, 0xFF, 0xFF, 0x03, 0x43, 0xFF, 0xFE, 0x03, 0x43, 0xFF, 0xFF, 0x03, 
0x43, 0xFF, 0xFF, 0x03, 0x43, 0xFF, 0xFF, 0x03, 0x43, 0xFF, 0xFE, 0x03, 0x43, 0xFF, 0xFF, 0x03, 
0x43, 0xFF, 0xFF, 0x03, 0x43, 0xFF, 0xFF, 0x03, 0x43, 0xFF, 0xFE, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* mask of TO_KATALOG */
static _UBYTE RS8_MMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x43, 0xDE, 0xF7, 0x82, 0x44, 0x21, 0x08, 0x42, 0x44, 0x21, 0x08, 0x42, 0x47, 0xFF, 0xFF, 0xE2, 
0x44, 0x00, 0x00, 0x22, 0x44, 0x00, 0x00, 0x22, 0x44, 0x00, 0x00, 0x22, 0x44, 0x00, 0x00, 0x22, 
0x45, 0x26, 0x70, 0x22, 0x45, 0x49, 0x20, 0x22, 0x45, 0xCF, 0x20, 0x22, 0x45, 0x29, 0x20, 0x22, 
0x45, 0x29, 0x20, 0x22, 0x44, 0x00, 0x00, 0x22, 0x47, 0xFF, 0xFF, 0xE2, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* data of TO_KATALOG */
static _UBYTE RS8_MDATA[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x43, 0xDE, 0xF7, 0x82, 0x44, 0x21, 0x08, 0x42, 0x44, 0x21, 0x08, 0x42, 0x47, 0xFF, 0xFF, 0xE2, 
0x44, 0x00, 0x00, 0x22, 0x44, 0x00, 0x00, 0x22, 0x44, 0x00, 0x00, 0x22, 0x44, 0x00, 0x00, 0x22, 
0x45, 0x26, 0x70, 0x22, 0x45, 0x49, 0x20, 0x22, 0x45, 0xCF, 0x20, 0x22, 0x45, 0x29, 0x20, 0x22, 
0x45, 0x29, 0x20, 0x22, 0x44, 0x00, 0x00, 0x22, 0x47, 0xFF, 0xFF, 0xE2, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* color data of TO_KATALOG */
static _UBYTE RS8_4CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 
0x00, 0xF3, 0x80, 0x00, 0x01, 0xFC, 0xE0, 0x00, 0x03, 0x7E, 0x38, 0x00, 0x02, 0xDF, 0x8E, 0x00, 
0x03, 0xF7, 0xE2, 0x00, 0x03, 0xFD, 0xFC, 0x00, 0x03, 0xFF, 0x7C, 0x00, 0x03, 0xFF, 0xFE, 0x00, 
0x03, 0xFF, 0xFF, 0x80, 0x03, 0xFF, 0xFF, 0xC0, 0x00, 0xFF, 0xFF, 0x80, 0x00, 0x3F, 0xFF, 0x00, 
0x00, 0x0F, 0xFE, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x30, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 
0x00, 0x1E, 0x00, 0x00, 0x00, 0xF3, 0x80, 0x00, 0x01, 0xFC, 0xE0, 0x00, 0x03, 0x3E, 0x38, 0x00, 
0x02, 0xCF, 0x8E, 0x00, 0x03, 0xF3, 0xE2, 0x00, 0x03, 0xFC, 0x7C, 0x00, 0x03, 0xFF, 0x1C, 0x00, 
0x02, 0xFF, 0xDE, 0x00, 0x02, 0x3F, 0xDF, 0x80, 0x03, 0x0F, 0xDF, 0x40, 0x00, 0xC3, 0xDE, 0x80, 
0x00, 0x30, 0xDD, 0x00, 0x00, 0x0C, 0x5A, 0x00, 0x00, 0x03, 0x14, 0x00, 0x00, 0x00, 0xC8, 0x00, 
0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x18, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0xF3, 0x80, 0x00, 0x01, 0x7C, 0xE0, 0x00, 
0x03, 0x1E, 0x38, 0x00, 0x02, 0x47, 0x8E, 0x00, 0x02, 0x13, 0xE2, 0x00, 0x02, 0x04, 0x7C, 0x00, 
0x02, 0x01, 0x1C, 0x00, 0x02, 0x00, 0x1E, 0x00, 0x02, 0x00, 0x19, 0x80, 0x03, 0x00, 0x18, 0x40, 
0x00, 0xC0, 0x10, 0x80, 0x00, 0x30, 0x11, 0x00, 0x00, 0x0C, 0x02, 0x00, 0x00, 0x03, 0x04, 0x00, 
0x00, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x1C, 0x00, 0x02, 0x40, 0x37, 0x00, 0x02, 0x41, 0xE1, 0xC0, 0x02, 
0x43, 0x18, 0x70, 0x02, 0x42, 0x46, 0x1C, 0x02, 0x42, 0x12, 0x06, 0x02, 0x42, 0x06, 0x02, 0x02, 
0x43, 0x01, 0x86, 0x02, 0x43, 0x00, 0x64, 0x02, 0x43, 0xC0, 0x7F, 0x02, 0x43, 0xF0, 0x7F, 0xC2, 
0x43, 0xFC, 0x7F, 0xC2, 0x41, 0xFF, 0x7F, 0xC2, 0x40, 0x7F, 0xFF, 0x82, 0x40, 0x1F, 0xFF, 0x02, 
0x40, 0x07, 0xFE, 0x02, 0x40, 0x01, 0xFC, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x30, 0x00};

/* color mask of TO_KATALOG */
static _UBYTE RS8_4CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFF, 0x40, 0x00, 0x00, 0x03, 0x40, 0x1C, 0x00, 0x03, 0x40, 0x3F, 0x00, 0x03, 
0x41, 0xFF, 0xC0, 0x03, 0x43, 0xFF, 0xF0, 0x03, 0x43, 0xFF, 0xFC, 0x03, 0x43, 0xFF, 0xFE, 0x03, 
0x43, 0xFF, 0xFE, 0x03, 0x43, 0xFF, 0xFE, 0x03, 0x43, 0xFF, 0xFC, 0x03, 0x43, 0xFF, 0xFF, 0x03, 
0x43, 0xFF, 0xFF, 0xC3, 0x43, 0xFF, 0xFF, 0xC3, 0x41, 0xFF, 0xFF, 0xC3, 0x40, 0x7F, 0xFF, 0x83, 
0x40, 0x1F, 0xFF, 0x03, 0x40, 0x07, 0xFE, 0x03, 0x40, 0x01, 0xFC, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* color data of TO_KATALOG */
static _UBYTE RS8_8CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 
0x00, 0xF3, 0x80, 0x00, 0x01, 0xFC, 0xE0, 0x00, 0x03, 0x7E, 0x38, 0x00, 0x03, 0xDF, 0x8E, 0x00, 
0x02, 0xF6, 0x62, 0x00, 0x03, 0xFD, 0x9C, 0x00, 0x03, 0xFF, 0x64, 0x00, 0x02, 0xFF, 0xEE, 0x00, 
0x03, 0x3F, 0xE9, 0x80, 0x03, 0xCF, 0xF8, 0xC0, 0x00, 0xF3, 0xF1, 0x80, 0x00, 0x3C, 0xF3, 0x00, 
0x00, 0x0F, 0x66, 0x00, 0x00, 0x03, 0xEC, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x30, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x18, 0x00, 0x02, 
0x40, 0x1E, 0x00, 0x02, 0x40, 0xF3, 0x80, 0x02, 0x41, 0x7C, 0xE0, 0x02, 0x43, 0x5E, 0x38, 0x02, 
0x42, 0x57, 0x8E, 0x02, 0x43, 0x16, 0x62, 0x02, 0x42, 0x05, 0x9C, 0x02, 0x43, 0x01, 0x64, 0x02, 
0x43, 0xC0, 0x7E, 0x02, 0x43, 0xF0, 0x7F, 0x82, 0x43, 0xFC, 0x7F, 0xC2, 0x40, 0xFF, 0x7F, 0x82, 
0x40, 0x3F, 0xFF, 0x02, 0x40, 0x0F, 0xFE, 0x02, 0x40, 0x03, 0xFC, 0x02, 0x40, 0x00, 0xF8, 0x02, 
0x7F, 0xFF, 0xB7, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x18, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0xE1, 0x80, 0x00, 0x01, 0x18, 0x60, 0x00, 
0x02, 0x06, 0x18, 0x00, 0x02, 0x02, 0x06, 0x00, 0x03, 0x03, 0x82, 0x00, 0x02, 0x00, 0x64, 0x00, 
0x02, 0x00, 0x1C, 0x00, 0x03, 0x00, 0x0E, 0x00, 0x02, 0xC0, 0x0F, 0x80, 0x03, 0x30, 0x1F, 0x40, 
0x00, 0xCC, 0x1E, 0x80, 0x00, 0x33, 0x1D, 0x00, 0x00, 0x0C, 0x9A, 0x00, 0x00, 0x03, 0x14, 0x00, 
0x00, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x1C, 0x00, 0x02, 0x40, 0x37, 0x00, 0x02, 0x41, 0xE1, 0xC0, 0x02, 
0x43, 0x18, 0x70, 0x02, 0x42, 0x06, 0x1C, 0x02, 0x42, 0x02, 0x06, 0x02, 0x43, 0x02, 0x02, 0x02, 
0x42, 0x00, 0x06, 0x02, 0x42, 0x00, 0x04, 0x02, 0x42, 0x00, 0x1F, 0x02, 0x42, 0x00, 0x19, 0xC2, 
0x43, 0x00, 0x18, 0x42, 0x41, 0xC0, 0x10, 0xC2, 0x40, 0x70, 0x11, 0x82, 0x40, 0x1C, 0x03, 0x02, 
0x40, 0x07, 0x06, 0x02, 0x40, 0x01, 0xCC, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x04, 0x00, 0x02, 0x40, 0x29, 0x00, 0x02, 
0x41, 0x12, 0x40, 0x02, 0x42, 0xE4, 0x90, 0x02, 0x41, 0x38, 0x24, 0x02, 0x41, 0xCD, 0x88, 0x02, 
0x40, 0xF1, 0xE0, 0x02, 0x41, 0xFC, 0x7A, 0x02, 0x41, 0xFF, 0x18, 0x02, 0x41, 0xFF, 0xD1, 0x02, 
0x40, 0xFF, 0xD6, 0x42, 0x40, 0x3F, 0xC7, 0x02, 0x41, 0x0F, 0xCE, 0x42, 0x40, 0x43, 0xCC, 0x82, 
0x40, 0x10, 0xD9, 0x02, 0x40, 0x04, 0x12, 0x02, 0x40, 0x01, 0x04, 0x02, 0x7F, 0xFF, 0xCF, 0xFE, 
0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 
0x00, 0x98, 0x00, 0x00, 0x01, 0xE4, 0x00, 0x00, 0x01, 0xF9, 0x80, 0x00, 0x01, 0xFE, 0x60, 0x00, 
0x01, 0xFF, 0xE0, 0x00, 0x01, 0xFF, 0xE6, 0x00, 0x00, 0xFF, 0xE7, 0x80, 0x00, 0x3F, 0xEF, 0x00, 
0x00, 0x0F, 0xEE, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x30, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 
0x00, 0x60, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x01, 0xE4, 0x00, 0x00, 0x01, 0xF9, 0x80, 0x00, 
0x00, 0xFE, 0x60, 0x00, 0x00, 0x3F, 0xA0, 0x00, 0x01, 0x0F, 0xA0, 0x00, 0x00, 0xC3, 0xA0, 0x80, 
0x00, 0x30, 0xA1, 0x00, 0x00, 0x0C, 0x22, 0x00, 0x00, 0x03, 0x24, 0x00, 0x00, 0x00, 0xE8, 0x00, 
0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 
0x00, 0x01, 0x80, 0x00, 0x01, 0x00, 0x60, 0x00, 0x01, 0xC0, 0x60, 0x00, 0x01, 0xF0, 0x66, 0x00, 
0x00, 0xFC, 0x67, 0x80, 0x00, 0x3F, 0x6F, 0x00, 0x00, 0x0F, 0xEE, 0x00, 0x00, 0x03, 0xFC, 0x00, 
0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_KATALOG */
static _UBYTE RS8_8CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x03, 0x40, 0x1C, 0x00, 0x03, 0x40, 0x3F, 0x00, 0x03, 
0x41, 0xFF, 0xC0, 0x03, 0x43, 0xFF, 0xF0, 0x03, 0x43, 0xFF, 0xFC, 0x03, 0x43, 0xFF, 0xFE, 0x03, 
0x43, 0xFF, 0xFE, 0x03, 0x43, 0xFF, 0xFE, 0x03, 0x43, 0xFF, 0xFC, 0x03, 0x43, 0xFF, 0xFF, 0x03, 
0x43, 0xFF, 0xFF, 0xC3, 0x43, 0xFF, 0xFF, 0xC3, 0x41, 0xFF, 0xFF, 0xC3, 0x40, 0x7F, 0xFF, 0x83, 
0x40, 0x1F, 0xFF, 0x03, 0x40, 0x07, 0xFE, 0x03, 0x40, 0x01, 0xFC, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* mask of TO_REFERENCES */
static _UBYTE RS9_MMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0xFF, 0xFA, 0x50, 0x00, 0x00, 0x0A, 
0x50, 0x00, 0x00, 0x0A, 0x5F, 0xFF, 0xFF, 0xFA, 0x40, 0x20, 0x00, 0x32, 0x40, 0x27, 0xCF, 0x32, 
0x40, 0x24, 0x51, 0x32, 0x40, 0x24, 0x51, 0x32, 0x40, 0x24, 0x51, 0x32, 0x40, 0x24, 0x51, 0x32, 
0x40, 0x27, 0xDF, 0x32, 0x40, 0x26, 0xDB, 0x32, 0x40, 0x27, 0xDF, 0x32, 0x40, 0x27, 0xDF, 0x32, 
0x40, 0x20, 0x00, 0x32, 0x40, 0x3F, 0xFF, 0xF2, 0x40, 0x1F, 0xFF, 0xF2, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* data of TO_REFERENCES */
static _UBYTE RS9_MDATA[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0xFF, 0xFA, 0x50, 0x00, 0x00, 0x0A, 
0x50, 0x00, 0x00, 0x0A, 0x5F, 0xFF, 0xFF, 0xFA, 0x40, 0x20, 0x00, 0x32, 0x40, 0x27, 0xCF, 0x32, 
0x40, 0x24, 0x51, 0x32, 0x40, 0x24, 0x51, 0x32, 0x40, 0x24, 0x51, 0x32, 0x40, 0x24, 0x51, 0x32, 
0x40, 0x27, 0xDF, 0x32, 0x40, 0x26, 0xDB, 0x32, 0x40, 0x27, 0xDF, 0x32, 0x40, 0x27, 0xDF, 0x32, 
0x40, 0x20, 0x00, 0x32, 0x40, 0x3F, 0xFF, 0xF2, 0x40, 0x1F, 0xFF, 0xF2, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* color data of TO_REFERENCES */
static _UBYTE RS9_4CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF0, 
0x00, 0x7F, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x01, 0xFF, 0xC0, 
0x00, 0x02, 0xFE, 0xC0, 0x00, 0x00, 0x38, 0x40, 0x00, 0x00, 0x10, 0x00, 0x00, 0x04, 0xD6, 0x40, 
0x00, 0x05, 0xFF, 0x40, 0x00, 0x03, 0xFF, 0xC0, 0x00, 0x01, 0xFF, 0xC0, 0x00, 0x01, 0xFF, 0xC0, 
0x00, 0x01, 0xFF, 0xC0, 0x00, 0x03, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0xFF, 0xFF, 0xF0, 0x00, 0x7F, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 
0x00, 0x01, 0xFF, 0xC0, 0x00, 0x02, 0xFE, 0xC0, 0x00, 0x00, 0x38, 0x40, 0x00, 0x00, 0x10, 0x00, 
0x00, 0x00, 0xDE, 0x00, 0x00, 0x01, 0xFF, 0x00, 0x00, 0x03, 0xFF, 0x40, 0x00, 0x00, 0xFE, 0xC0, 
0x00, 0x01, 0xFF, 0xC0, 0x00, 0x01, 0xFF, 0xC0, 0x00, 0x03, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCE, 0x00, 0x00, 0x01, 0xEF, 0x00, 0x00, 0x00, 0xEE, 0x00, 
0x00, 0x00, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0xFF, 0xFA, 0x50, 0x00, 0x02, 0xFA, 0x50, 0x00, 0x01, 0x7A, 
0x5F, 0xFF, 0xFF, 0xFA, 0x40, 0x08, 0x00, 0x62, 0x40, 0x08, 0x03, 0xE2, 0x40, 0x09, 0xE7, 0xE2, 
0x40, 0x0A, 0x7C, 0xE2, 0x40, 0x0C, 0xEE, 0x62, 0x40, 0x0D, 0xFF, 0x62, 0x40, 0x0F, 0xEF, 0xE2, 
0x40, 0x0B, 0xFF, 0xE2, 0x40, 0x09, 0xEF, 0x62, 0x40, 0x08, 0x20, 0x62, 0x40, 0x08, 0x00, 0x62, 
0x40, 0x0B, 0xFF, 0xE2, 0x40, 0x0F, 0xFF, 0xE2, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_REFERENCES */
static _UBYTE RS9_4CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFF, 0x40, 0x00, 0x00, 0x03, 0x5F, 0xFF, 0xFF, 0xFB, 0x5F, 0xFF, 0xFF, 0xFB, 
0x5F, 0xFF, 0xFF, 0xFB, 0x5F, 0xFF, 0xFF, 0xFB, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* color data of TO_REFERENCES */
static _UBYTE RS9_8CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xB8, 0x62, 0xF0, 
0x01, 0xDC, 0xB1, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC0, 0x00, 0x02, 0x03, 0x80, 
0x00, 0x02, 0x82, 0xC0, 0x00, 0x01, 0x93, 0x40, 0x00, 0x03, 0x01, 0x80, 0x00, 0x02, 0xCE, 0x80, 
0x00, 0x01, 0xEF, 0x00, 0x00, 0x03, 0xEF, 0x00, 0x00, 0x00, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x15, 0x00, 0x00, 0x03, 0xF0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0xB8, 0x75, 0xE2, 0x40, 0x5C, 0xFA, 0xF2, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x42, 
0x40, 0x00, 0x04, 0xC2, 0x40, 0x00, 0x92, 0x42, 0x40, 0x00, 0x00, 0x42, 0x40, 0x00, 0x10, 0x02, 
0x40, 0x00, 0xC6, 0x02, 0x40, 0x01, 0xFF, 0x02, 0x40, 0x03, 0xEF, 0x42, 0x40, 0x02, 0xC6, 0xC2, 
0x40, 0x02, 0x02, 0xC2, 0x40, 0x02, 0x8A, 0xC2, 0x40, 0x03, 0xFF, 0x42, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF5, 0x00, 0x00, 0x7F, 0xBA, 0x80, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x40, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x10, 0x00, 0x00, 0x04, 0xCE, 0x40, 0x00, 0x05, 0xFF, 0x40, 0x00, 0x00, 0xEE, 0xC0, 
0x00, 0x01, 0xC7, 0xC0, 0x00, 0x00, 0x02, 0xC0, 0x00, 0x00, 0x0A, 0x40, 0x00, 0x00, 0x0F, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0xFF, 0xFA, 0x50, 0xFF, 0xF5, 0x8A, 0x50, 0x7F, 0xBA, 0xCA, 
0x5F, 0xFF, 0xFF, 0xFA, 0x40, 0x08, 0x00, 0x22, 0x40, 0x09, 0xFC, 0xA2, 0x40, 0x09, 0x83, 0x22, 
0x40, 0x0A, 0x44, 0xA2, 0x40, 0x0C, 0xFE, 0x62, 0x40, 0x0D, 0xEF, 0x62, 0x40, 0x0F, 0xFF, 0xE2, 
0x40, 0x08, 0xEE, 0xA2, 0x40, 0x09, 0xC7, 0xA2, 0x40, 0x08, 0x02, 0xA2, 0x40, 0x08, 0x0A, 0x22, 
0x40, 0x08, 0x00, 0xA2, 0x40, 0x0F, 0xFF, 0xE2, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0xFF, 0xFA, 0x53, 0x00, 0x0A, 0x7A, 
0x51, 0x80, 0x45, 0x3A, 0x5F, 0xFF, 0xFF, 0xFA, 0x40, 0x08, 0x07, 0xE2, 0x40, 0x0A, 0x03, 0x62, 
0x40, 0x0B, 0xFF, 0xE2, 0x40, 0x0B, 0xFF, 0xE2, 0x40, 0x0F, 0xEF, 0xE2, 0x40, 0x0F, 0xF7, 0xE2, 
0x40, 0x0F, 0xEF, 0xE2, 0x40, 0x0B, 0xFF, 0xE2, 0x40, 0x0B, 0xFF, 0x62, 0x40, 0x0B, 0xFD, 0x62, 
0x40, 0x0B, 0xF5, 0xE2, 0x40, 0x0B, 0xFF, 0xA2, 0x40, 0x0F, 0xFF, 0xE2, 0x7F, 0xFF, 0xFF, 0xFE, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0xFF, 0xFF, 0x70, 0x00, 0x7F, 0xBF, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 
0x00, 0x01, 0xFF, 0x40, 0x00, 0x00, 0xEE, 0xC0, 0x00, 0x00, 0x38, 0x40, 0x00, 0x00, 0x10, 0x00, 
0x00, 0x04, 0xDE, 0x40, 0x00, 0x05, 0xFF, 0x40, 0x00, 0x03, 0xFF, 0xC0, 0x00, 0x03, 0xFF, 0xC0, 
0x00, 0x03, 0xFF, 0xC0, 0x00, 0x03, 0xFF, 0xC0, 0x00, 0x03, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x50, 0x00, 0x7F, 0xBF, 0xA0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0x00, 0x00, 0x00, 0xEE, 0x80, 0x00, 0x00, 0x38, 0x00, 
0x00, 0x00, 0x10, 0x00, 0x00, 0x04, 0xDE, 0x40, 0x00, 0x05, 0xFF, 0x40, 0x00, 0x00, 0xFE, 0x80, 
0x00, 0x03, 0xFF, 0x80, 0x00, 0x03, 0xFF, 0x80, 0x00, 0x03, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x40, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x10, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x82, 0x40, 
0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x00, 0x00, 0x01, 0xEF, 0x00, 
0x00, 0x03, 0xEF, 0x40, 0x00, 0x00, 0xC6, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 
0x00, 0x03, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_REFERENCES */
static _UBYTE RS9_8CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x03, 0x5F, 0xFF, 0xFF, 0xFB, 0x5F, 0xFF, 0xFF, 0xFB, 
0x5F, 0xFF, 0xFF, 0xFB, 0x5F, 0xFF, 0xFF, 0xFB, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* mask of TO_HELP */
static _UBYTE RS10_MMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x0F, 0xFE, 0x02, 
0x40, 0x1F, 0xFF, 0x02, 0x40, 0x1F, 0xFF, 0x02, 0x40, 0x1C, 0x07, 0x02, 0x40, 0x1C, 0x07, 0x02, 
0x40, 0x00, 0x07, 0x02, 0x40, 0x00, 0xFF, 0x02, 0x40, 0x00, 0xFF, 0x02, 0x40, 0x00, 0xFE, 0x02, 
0x40, 0x00, 0xE0, 0x02, 0x40, 0x00, 0xE0, 0x02, 0x40, 0x00, 0xE0, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x00, 0xE0, 0x02, 0x40, 0x00, 0xE0, 0x02, 0x40, 0x00, 0xE0, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* data of TO_HELP */
static _UBYTE RS10_MDATA[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x0F, 0xFE, 0x02, 
0x40, 0x1F, 0xFF, 0x02, 0x40, 0x1F, 0xFF, 0x02, 0x40, 0x1C, 0x07, 0x02, 0x40, 0x1C, 0x07, 0x02, 
0x40, 0x00, 0x07, 0x02, 0x40, 0x00, 0xFF, 0x02, 0x40, 0x00, 0xFF, 0x02, 0x40, 0x00, 0xFE, 0x02, 
0x40, 0x00, 0xE0, 0x02, 0x40, 0x00, 0xE0, 0x02, 0x40, 0x00, 0xE0, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x00, 0xE0, 0x02, 0x40, 0x00, 0xE0, 0x02, 0x40, 0x00, 0xE0, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* color data of TO_HELP */
static _UBYTE RS10_4CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xE0, 0x00, 
0x00, 0x1F, 0xF8, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x3E, 0x7E, 0x00, 0x00, 0x7E, 0x7E, 0x00, 
0x00, 0x7E, 0x7E, 0x00, 0x00, 0x7C, 0xFE, 0x00, 0x00, 0x38, 0xFC, 0x00, 0x06, 0x01, 0xF8, 0x60, 
0x0F, 0x01, 0xE0, 0xF0, 0x06, 0x01, 0xC0, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 
0x00, 0x03, 0xE0, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x07, 0xF0, 0x00, 
0x00, 0x03, 0xE0, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x07, 0xE0, 0x02, 0x40, 0x1F, 0xF8, 0x02, 0x40, 0x3F, 0xFC, 0x02, 0x40, 0x3E, 0x7E, 0x02, 
0x40, 0x7E, 0x7E, 0x02, 0x40, 0x7E, 0x7E, 0x02, 0x40, 0x7C, 0xFE, 0x02, 0x40, 0x38, 0xFC, 0x02, 
0x46, 0x01, 0xF8, 0x62, 0x4F, 0x01, 0xE0, 0xF2, 0x46, 0x01, 0xC0, 0x62, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x01, 0xC0, 0x02, 0x40, 0x03, 0xE0, 0x02, 0x40, 0x07, 0xF0, 0x02, 0x40, 0x07, 0xF0, 0x02, 
0x40, 0x07, 0xF0, 0x02, 0x40, 0x03, 0xE0, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x01, 0xC0, 0x00};

/* color mask of TO_HELP */
static _UBYTE RS10_4CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFF, 0x40, 0x07, 0xE0, 0x03, 0x40, 0x1F, 0xF8, 0x03, 0x40, 0x3F, 0xFC, 0x03, 
0x40, 0x3E, 0x7E, 0x03, 0x40, 0x7E, 0x7E, 0x03, 0x40, 0x7E, 0x7E, 0x03, 0x40, 0x7C, 0xFE, 0x03, 
0x40, 0x38, 0xFC, 0x03, 0x46, 0x01, 0xF8, 0x63, 0x4F, 0x01, 0xE0, 0xF3, 0x46, 0x01, 0xC0, 0x63, 
0x40, 0x00, 0x00, 0x03, 0x40, 0x01, 0xC0, 0x03, 0x40, 0x03, 0xE0, 0x03, 0x40, 0x07, 0xF0, 0x03, 
0x40, 0x07, 0xF0, 0x03, 0x40, 0x07, 0xF0, 0x03, 0x40, 0x03, 0xE0, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* color data of TO_HELP */
static _UBYTE RS10_8CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xE8, 0x00, 0x00, 0x18, 0x34, 0x00, 
0x00, 0x1A, 0x3A, 0x00, 0x00, 0x33, 0x9A, 0x00, 0x00, 0x33, 0x1A, 0x00, 0x00, 0x05, 0x3A, 0x00, 
0x00, 0x38, 0x64, 0x00, 0x06, 0x00, 0x58, 0x60, 0x09, 0x00, 0x20, 0x90, 0x06, 0x01, 0xC0, 0x60, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD0, 0x00, 
0x00, 0x01, 0xD0, 0x00, 0x00, 0x01, 0x90, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x01, 0xC0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x0F, 0xF0, 0x02, 0x40, 0x1F, 0xF0, 0x02, 
0x40, 0x3F, 0xF8, 0x02, 0x40, 0x3C, 0x7C, 0x02, 0x40, 0x7D, 0xFC, 0x02, 0x40, 0x7D, 0x7C, 0x02, 
0x40, 0x79, 0xFC, 0x02, 0x40, 0x00, 0xF8, 0x02, 0x46, 0x01, 0xE0, 0x62, 0x4F, 0x01, 0xC0, 0xF2, 
0x46, 0x00, 0x00, 0x62, 0x40, 0x00, 0x00, 0x02, 0x40, 0x01, 0xC0, 0x02, 0x40, 0x03, 0xE0, 0x02, 
0x40, 0x07, 0xE0, 0x02, 0x40, 0x07, 0xE0, 0x02, 0x40, 0x07, 0xE0, 0x02, 0x40, 0x03, 0xC0, 0x02, 
0x7F, 0xFE, 0x3F, 0xFE, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x27, 0xEC, 0x00, 0x00, 0x18, 0x36, 0x00, 0x00, 0x5B, 0xBA, 0x00, 0x00, 0x32, 0x1A, 0x00, 
0x00, 0x32, 0x9A, 0x00, 0x00, 0x06, 0x3A, 0x00, 0x00, 0x7D, 0x66, 0x00, 0x0F, 0x38, 0x5C, 0xF0, 
0x09, 0x00, 0x30, 0x90, 0x0F, 0x01, 0xE0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x20, 0x00, 
0x00, 0x04, 0x10, 0x00, 0x00, 0x00, 0xD0, 0x00, 0x00, 0x01, 0xD0, 0x00, 0x00, 0x01, 0x90, 0x00, 
0x00, 0x04, 0x30, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x0F, 0xF0, 0x02, 0x40, 0x18, 0x18, 0x02, 0x40, 0x27, 0xCC, 0x02, 0x40, 0x26, 0x46, 0x02, 
0x40, 0x4E, 0x66, 0x02, 0x40, 0x4E, 0x66, 0x02, 0x40, 0x7C, 0xC6, 0x02, 0x40, 0x38, 0x9C, 0x02, 
0x40, 0x01, 0xB8, 0x02, 0x46, 0x01, 0xE0, 0x62, 0x40, 0x01, 0xC0, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x01, 0xC0, 0x02, 0x40, 0x03, 0xE0, 0x02, 0x40, 0x07, 0x30, 0x02, 0x40, 0x06, 0x30, 0x02, 
0x40, 0x06, 0x70, 0x02, 0x40, 0x03, 0xE0, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x01, 0xC0, 0x00, 
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x08, 0x10, 0x02, 0x40, 0x20, 0x04, 0x02, 0x40, 0x00, 0x02, 0x02, 
0x40, 0x41, 0x80, 0x02, 0x40, 0x01, 0x80, 0x02, 0x40, 0x01, 0x80, 0x02, 0x40, 0x03, 0x00, 0x02, 
0x40, 0x45, 0x02, 0x02, 0x49, 0x38, 0x04, 0x92, 0x40, 0x00, 0x10, 0x02, 0x49, 0x00, 0x20, 0x92, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x02, 0x20, 0x02, 0x40, 0x04, 0x10, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x04, 0x10, 0x02, 0x7F, 0xFE, 0x3F, 0xFE, 
0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xE0, 0x00, 
0x00, 0x1F, 0xF0, 0x00, 0x00, 0x3F, 0xF8, 0x00, 0x00, 0x3C, 0x7C, 0x00, 0x00, 0x7C, 0x7C, 0x00, 
0x00, 0x7C, 0x7C, 0x00, 0x00, 0x78, 0xFC, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x06, 0x01, 0xE0, 0x60, 
0x0F, 0x01, 0xC0, 0xF0, 0x06, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 
0x00, 0x03, 0xE0, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x07, 0xE0, 0x00, 
0x00, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x07, 0xE0, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x3E, 0x7E, 0x00, 
0x00, 0x7E, 0x7E, 0x00, 0x00, 0x7E, 0x7E, 0x00, 0x00, 0x7C, 0xFE, 0x00, 0x00, 0x38, 0xFC, 0x00, 
0x06, 0x01, 0xF8, 0x60, 0x0F, 0x01, 0xE0, 0xF0, 0x06, 0x01, 0xC0, 0x60, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x01, 0xC0, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x07, 0xF0, 0x00, 
0x00, 0x07, 0xF0, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_HELP */
static _UBYTE RS10_8CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x0F, 0xF0, 0x03, 0x40, 0x3F, 0xFC, 0x03, 0x40, 0x3F, 0xFE, 0x03, 
0x40, 0x7F, 0xFE, 0x03, 0x40, 0x7E, 0x7E, 0x03, 0x40, 0x7E, 0xFE, 0x03, 0x40, 0x7E, 0xFE, 0x03, 
0x40, 0x7D, 0xFE, 0x03, 0x4F, 0x39, 0xFC, 0xF3, 0x4F, 0x01, 0xF0, 0xF3, 0x4F, 0x01, 0xE0, 0xF3, 
0x40, 0x00, 0x00, 0x03, 0x40, 0x03, 0xE0, 0x03, 0x40, 0x07, 0xF0, 0x03, 0x40, 0x07, 0xF0, 0x03, 
0x40, 0x07, 0xF0, 0x03, 0x40, 0x07, 0xF0, 0x03, 0x40, 0x07, 0xF0, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* mask of TO_INFO */
static _UBYTE RS11_MMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x03, 0xE0, 0x02, 0x40, 0x07, 0xF0, 0x02, 
0x40, 0x07, 0xF0, 0x02, 0x40, 0x07, 0xF0, 0x02, 0x40, 0x03, 0xE0, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x1F, 0xF0, 0x02, 0x40, 0x1F, 0xF0, 0x02, 0x40, 0x07, 0xF0, 0x02, 0x40, 0x07, 0xF0, 0x02, 
0x40, 0x07, 0xF0, 0x02, 0x40, 0x07, 0xF0, 0x02, 0x40, 0x07, 0xF0, 0x02, 0x40, 0x07, 0xF0, 0x02, 
0x40, 0x3F, 0xFE, 0x02, 0x40, 0x3F, 0xFE, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* data of TO_INFO */
static _UBYTE RS11_MDATA[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x03, 0xE0, 0x02, 0x40, 0x07, 0xF0, 0x02, 
0x40, 0x07, 0xF0, 0x02, 0x40, 0x07, 0xF0, 0x02, 0x40, 0x03, 0xE0, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x1F, 0xF0, 0x02, 0x40, 0x1F, 0xF0, 0x02, 0x40, 0x07, 0xF0, 0x02, 0x40, 0x07, 0xF0, 0x02, 
0x40, 0x07, 0xF0, 0x02, 0x40, 0x07, 0xF0, 0x02, 0x40, 0x07, 0xF0, 0x02, 0x40, 0x07, 0xF0, 0x02, 
0x40, 0x3F, 0xFE, 0x02, 0x40, 0x3F, 0xFE, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* color data of TO_INFO */
static _UBYTE RS11_4CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC0, 0x00, 
0x00, 0x0F, 0xE0, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x0F, 0xC0, 0x00, 0x00, 0x0F, 0x80, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x01, 0x87, 0xE3, 0x00, 0x03, 0x0F, 0xE1, 0x80, 
0x06, 0x0F, 0xE0, 0xC0, 0x03, 0x07, 0xE1, 0x80, 0x01, 0x87, 0xE3, 0x00, 0x00, 0x07, 0xE0, 0x00, 
0x00, 0x07, 0xE0, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x0F, 0xF0, 0x00, 
0x00, 0x0F, 0xF0, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x07, 0xC0, 0x02, 0x40, 0x0F, 0xE0, 0x02, 0x40, 0x0F, 0xE0, 0x02, 0x40, 0x0F, 0xC0, 0x02, 
0x40, 0x0F, 0x80, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0xE0, 0x02, 0x41, 0x87, 0xE3, 0x02, 
0x43, 0x0F, 0xE1, 0x82, 0x46, 0x0F, 0xE0, 0xC2, 0x43, 0x07, 0xE1, 0x82, 0x41, 0x87, 0xE3, 0x02, 
0x40, 0x07, 0xE0, 0x02, 0x40, 0x07, 0xE0, 0x02, 0x40, 0x07, 0xE0, 0x02, 0x40, 0x07, 0xE0, 0x02, 
0x40, 0x0F, 0xF0, 0x02, 0x40, 0x0F, 0xF0, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x07, 0xE0, 0x00};

/* color mask of TO_INFO */
static _UBYTE RS11_4CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFF, 0x40, 0x07, 0xC0, 0x03, 0x40, 0x0F, 0xE0, 0x03, 0x40, 0x0F, 0xE0, 0x03, 
0x40, 0x0F, 0xC0, 0x03, 0x40, 0x0F, 0x80, 0x03, 0x40, 0x00, 0x00, 0x03, 0x40, 0x00, 0xE0, 0x03, 
0x41, 0x87, 0xE3, 0x03, 0x43, 0x0F, 0xE1, 0x83, 0x46, 0x0F, 0xE0, 0xC3, 0x43, 0x07, 0xE1, 0x83, 
0x41, 0x87, 0xE3, 0x03, 0x40, 0x07, 0xE0, 0x03, 0x40, 0x07, 0xE0, 0x03, 0x40, 0x07, 0xE0, 0x03, 
0x40, 0x07, 0xE0, 0x03, 0x40, 0x0F, 0xF0, 0x03, 0x40, 0x0F, 0xF0, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* color data of TO_INFO */
static _UBYTE RS11_8CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC0, 0x00, 0x00, 0x08, 0x20, 0x00, 0x00, 0x0B, 0xA0, 0x00, 
0x00, 0x08, 0x40, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 
0x01, 0x07, 0x21, 0x00, 0x02, 0x08, 0xA0, 0x80, 0x04, 0x09, 0xA0, 0x40, 0x02, 0x05, 0xA0, 0x80, 
0x01, 0x05, 0xA1, 0x00, 0x00, 0x05, 0xA0, 0x00, 0x00, 0x05, 0xA0, 0x00, 0x00, 0x05, 0xA0, 0x00, 
0x00, 0x05, 0xA0, 0x00, 0x00, 0x0B, 0xD0, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x07, 0xE0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x08, 0x20, 0x02, 0x40, 0x07, 0xC0, 0x02, 
0x40, 0x07, 0xC0, 0x02, 0x40, 0x07, 0x80, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x00, 0x00, 0x02, 0x41, 0x80, 0xC3, 0x02, 0x43, 0x07, 0xC1, 0x82, 0x46, 0x07, 0xC0, 0xC2, 
0x43, 0x03, 0xC1, 0x82, 0x41, 0x83, 0xC3, 0x02, 0x40, 0x03, 0xC0, 0x02, 0x40, 0x03, 0xC0, 0x02, 
0x40, 0x03, 0xC0, 0x02, 0x40, 0x03, 0xC0, 0x02, 0x40, 0x07, 0xE0, 0x02, 0x40, 0x07, 0xE0, 0x02, 
0x7F, 0xF8, 0x1F, 0xFE, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC0, 0x00, 
0x00, 0x08, 0x20, 0x00, 0x00, 0x0B, 0xA0, 0x00, 0x00, 0x08, 0x60, 0x00, 0x00, 0x0F, 0xC0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x00, 0x03, 0x4F, 0x25, 0x80, 0x06, 0x88, 0xA2, 0xC0, 
0x0D, 0x09, 0xA1, 0x60, 0x06, 0x8D, 0xA2, 0xC0, 0x03, 0x45, 0xA5, 0x80, 0x00, 0x05, 0xA0, 0x00, 
0x00, 0x05, 0xA0, 0x00, 0x00, 0x05, 0xA0, 0x00, 0x00, 0x0D, 0xB0, 0x00, 0x00, 0x0B, 0xD0, 0x00, 
0x00, 0x08, 0x10, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x0F, 0xE0, 0x02, 0x40, 0x0F, 0xE0, 0x02, 0x40, 0x0C, 0x60, 0x02, 0x40, 0x0F, 0xC0, 0x02, 
0x40, 0x0F, 0x80, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0xE0, 0x02, 0x40, 0x87, 0xE2, 0x02, 
0x41, 0x0F, 0x61, 0x02, 0x42, 0x0E, 0x60, 0x82, 0x41, 0x06, 0x61, 0x02, 0x40, 0x86, 0x62, 0x02, 
0x40, 0x06, 0x60, 0x02, 0x40, 0x06, 0x60, 0x02, 0x40, 0x06, 0x60, 0x02, 0x40, 0x06, 0x60, 0x02, 
0x40, 0x0C, 0x30, 0x02, 0x40, 0x0F, 0xF0, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x07, 0xE0, 0x00, 
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x08, 0x20, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x00, 0x20, 0x02, 0x40, 0x00, 0x40, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x01, 0x00, 0x02, 
0x42, 0x48, 0x04, 0x82, 0x44, 0x80, 0x02, 0x42, 0x49, 0x00, 0x01, 0x22, 0x44, 0x88, 0x02, 0x42, 
0x42, 0x40, 0x04, 0x82, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x08, 0x10, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x7F, 0xF8, 0x1F, 0xFE, 
0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x07, 0xC0, 0x00, 0x00, 0x07, 0xC0, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0xC3, 0x00, 0x03, 0x07, 0xC1, 0x80, 
0x06, 0x07, 0xC0, 0xC0, 0x03, 0x03, 0xC1, 0x80, 0x01, 0x83, 0xC3, 0x00, 0x00, 0x03, 0xC0, 0x00, 
0x00, 0x03, 0xC0, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x07, 0xE0, 0x00, 
0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x07, 0xC0, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x0F, 0xC0, 0x00, 
0x00, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x01, 0x87, 0xE3, 0x00, 
0x03, 0x0F, 0xE1, 0x80, 0x06, 0x0F, 0xE0, 0xC0, 0x03, 0x07, 0xE1, 0x80, 0x01, 0x87, 0xE3, 0x00, 
0x00, 0x07, 0xE0, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x07, 0xE0, 0x00, 
0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_INFO */
static _UBYTE RS11_8CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x0F, 0xE0, 0x03, 0x40, 0x0F, 0xE0, 0x03, 0x40, 0x0F, 0xE0, 0x03, 
0x40, 0x0F, 0xE0, 0x03, 0x40, 0x0F, 0xC0, 0x03, 0x40, 0x00, 0x00, 0x03, 0x40, 0x01, 0xE0, 0x03, 
0x43, 0xCF, 0xE7, 0x83, 0x47, 0x8F, 0xE3, 0xC3, 0x4F, 0x0F, 0xE1, 0xE3, 0x47, 0x8F, 0xE3, 0xC3, 
0x43, 0xC7, 0xE7, 0x83, 0x40, 0x07, 0xE0, 0x03, 0x40, 0x07, 0xE0, 0x03, 0x40, 0x07, 0xE0, 0x03, 
0x40, 0x0F, 0xF0, 0x03, 0x40, 0x0F, 0xF0, 0x03, 0x40, 0x0F, 0xF0, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* mask of TO_LOAD */
static _UBYTE RS12_MMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x4F, 0xFF, 0xC0, 0x02, 
0x4A, 0x01, 0x44, 0x02, 0x4A, 0x01, 0xC6, 0x02, 0x4A, 0x01, 0xC5, 0x02, 0x4A, 0x01, 0x7C, 0x82, 
0x4A, 0x01, 0x40, 0x42, 0x4B, 0xFE, 0x40, 0x22, 0x48, 0x00, 0x40, 0x12, 0x48, 0x00, 0x40, 0x22, 
0x49, 0xFC, 0x40, 0x42, 0x49, 0x02, 0x7C, 0x82, 0x49, 0x1A, 0x45, 0x02, 0x49, 0x1A, 0x46, 0x02, 
0x49, 0x02, 0x44, 0x02, 0x47, 0xFF, 0x80, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* data of TO_LOAD */
static _UBYTE RS12_MDATA[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x4F, 0xFF, 0xC0, 0x02, 
0x4A, 0x01, 0x44, 0x02, 0x4A, 0x01, 0xC6, 0x02, 0x4A, 0x01, 0xC5, 0x02, 0x4A, 0x01, 0x7C, 0x82, 
0x4A, 0x01, 0x40, 0x42, 0x4B, 0xFE, 0x40, 0x22, 0x48, 0x00, 0x40, 0x12, 0x48, 0x00, 0x40, 0x22, 
0x49, 0xFC, 0x40, 0x42, 0x49, 0x02, 0x7C, 0x82, 0x49, 0x1A, 0x45, 0x02, 0x49, 0x1A, 0x46, 0x02, 
0x49, 0x02, 0x44, 0x02, 0x47, 0xFF, 0x80, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* color data of TO_LOAD */
static _UBYTE RS12_4CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 
0x07, 0x83, 0x80, 0x00, 0x07, 0x81, 0x40, 0xC0, 0x07, 0x81, 0x41, 0x60, 0x07, 0x81, 0x41, 0xD0, 
0x06, 0x01, 0x4F, 0xB8, 0x0F, 0xFF, 0x53, 0x7C, 0x0A, 0xAA, 0x56, 0xFA, 0x0C, 0x00, 0x5D, 0xF6, 
0x0B, 0xFE, 0x5B, 0xEC, 0x0F, 0xFE, 0x4F, 0xD8, 0x0B, 0xFE, 0x41, 0xB0, 0x0F, 0xFE, 0x41, 0x60, 
0x0F, 0xFF, 0x80, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x01, 0x00, 0x00, 0x07, 0x83, 0x80, 0x00, 0x07, 0x81, 0x40, 0xC0, 0x07, 0x81, 0x41, 0x60, 
0x07, 0x81, 0x41, 0xD0, 0x06, 0x01, 0x4F, 0xB8, 0x0F, 0xFF, 0x53, 0x7C, 0x0A, 0xAA, 0x56, 0xFA, 
0x0C, 0x00, 0x5D, 0xF2, 0x0B, 0xFE, 0x5B, 0xE4, 0x0F, 0xFE, 0x4F, 0xC8, 0x0B, 0xFE, 0x41, 0x90, 
0x0F, 0xFE, 0x41, 0x20, 0x0F, 0xFF, 0x80, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x83, 0x80, 0x00, 0x07, 0x81, 0x40, 0xC0, 
0x07, 0x81, 0x41, 0x60, 0x07, 0x81, 0x41, 0x90, 0x06, 0x01, 0x4F, 0x08, 0x0F, 0xFF, 0x52, 0x04, 
0x0A, 0xAA, 0x54, 0x02, 0x0C, 0x00, 0x58, 0x02, 0x0B, 0xFE, 0x50, 0x04, 0x0F, 0xFE, 0x4F, 0x08, 
0x0B, 0xFE, 0x41, 0x10, 0x0F, 0xFE, 0x41, 0x20, 0x0F, 0xFF, 0x80, 0xC0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x4F, 0xFF, 0x00, 0x02, 0x52, 0xFC, 0x80, 0x02, 
0x52, 0xFC, 0xC1, 0xE2, 0x52, 0xFC, 0xC1, 0x32, 0x53, 0xFC, 0xC1, 0x1A, 0x50, 0x00, 0xDF, 0x0E, 
0x50, 0x00, 0xF0, 0x1E, 0x57, 0xFF, 0xF0, 0x3F, 0x54, 0x00, 0xF0, 0x7F, 0x54, 0x00, 0xF0, 0xFE, 
0x54, 0x00, 0xDF, 0xFE, 0x54, 0x00, 0xC1, 0xFA, 0x54, 0x00, 0xC1, 0xF2, 0x4F, 0xFF, 0x81, 0xE2, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_LOAD */
static _UBYTE RS12_4CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFF, 0x40, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00, 0x03, 0x4F, 0xFF, 0x00, 0x03, 
0x5F, 0xFF, 0x80, 0x03, 0x5F, 0xFF, 0xC1, 0xE3, 0x5F, 0xFF, 0xC1, 0xF3, 0x5F, 0xFF, 0xC1, 0xFB, 
0x5F, 0xFF, 0xDF, 0xFF, 0x5F, 0xFF, 0xFF, 0xFF, 0x5F, 0xFF, 0xFF, 0xFF, 0x5F, 0xFF, 0xFF, 0xFF, 
0x5F, 0xFF, 0xFF, 0xFF, 0x5F, 0xFF, 0xDF, 0xFF, 0x5F, 0xFF, 0xC1, 0xFB, 0x5F, 0xFF, 0xC1, 0xF3, 
0x4F, 0xFF, 0x81, 0xE3, 0x40, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* color data of TO_LOAD */
static _UBYTE RS12_8CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0xFE, 0x00, 0x00, 
0x1C, 0x03, 0x80, 0x00, 0x0C, 0x82, 0x40, 0xC0, 0x1E, 0x82, 0xC1, 0xE0, 0x1C, 0x02, 0x41, 0xD0, 
0x09, 0xFC, 0x4F, 0xC8, 0x18, 0x00, 0x57, 0x64, 0x1C, 0x2C, 0x53, 0xA6, 0x08, 0x05, 0x57, 0x56, 
0x18, 0x05, 0x5E, 0x8C, 0x08, 0x0B, 0x4F, 0x98, 0x10, 0x2F, 0x41, 0x90, 0x02, 0xBF, 0x41, 0xA0, 
0x0F, 0xFF, 0x80, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x01, 0x00, 0x02, 0x46, 0xA3, 0x80, 0x02, 0x56, 0x0B, 0x40, 0xC2, 0x45, 0x00, 0x41, 0x62, 
0x44, 0x01, 0x41, 0xF2, 0x51, 0xC1, 0x4F, 0xFA, 0x48, 0x16, 0x5F, 0xFC, 0x4B, 0xD0, 0x5C, 0xFE, 
0x5C, 0x04, 0xD9, 0xFE, 0x4C, 0x04, 0x57, 0xFC, 0x5C, 0x0A, 0xCF, 0x7A, 0x40, 0x2F, 0x41, 0x72, 
0x52, 0xBE, 0x41, 0xE2, 0x4F, 0xFF, 0x80, 0xC2, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x80, 0x00, 0x01, 0x20, 0xC0, 0x00, 0x01, 0x09, 0x60, 0xC0, 
0x01, 0x01, 0x61, 0x20, 0x01, 0x01, 0x61, 0x30, 0x06, 0x03, 0x6F, 0x38, 0x07, 0xFF, 0x58, 0x9C, 
0x00, 0x00, 0x5C, 0x5B, 0x03, 0xFA, 0xD8, 0xAB, 0x03, 0xFA, 0x51, 0x74, 0x03, 0xF4, 0xEF, 0x68, 
0x0B, 0xD0, 0x61, 0x70, 0x09, 0x40, 0x61, 0x60, 0x1F, 0xFF, 0xC0, 0xC0, 0x0F, 0xFF, 0x80, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x4D, 0xFF, 0x00, 0x02, 0x52, 0xDC, 0x80, 0x02, 
0x52, 0xF4, 0xC1, 0xE2, 0x52, 0xFC, 0xC1, 0x32, 0x53, 0xFC, 0xC1, 0x1A, 0x50, 0x00, 0xDF, 0x0E, 
0x50, 0x00, 0xF8, 0x86, 0x57, 0xFF, 0xFC, 0x02, 0x54, 0x00, 0x78, 0x02, 0x54, 0x00, 0xF0, 0x06, 
0x54, 0x00, 0x5F, 0x0E, 0x54, 0x00, 0xC1, 0x3A, 0x54, 0x00, 0xC1, 0x32, 0x4F, 0xFF, 0x81, 0xE2, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0x80, 0x02, 
0x5F, 0xFF, 0x40, 0x02, 0x5F, 0xFF, 0xA1, 0x22, 0x5F, 0xFF, 0xA0, 0xD2, 0x5F, 0xFF, 0xA0, 0xEA, 
0x5F, 0xFF, 0xB0, 0xF6, 0x5F, 0xFF, 0xA7, 0x7A, 0x5F, 0xFF, 0xA3, 0xF9, 0x5F, 0xFF, 0xA7, 0xF9, 
0x5F, 0xFF, 0xAF, 0xF2, 0x5F, 0xFF, 0xB0, 0xE6, 0x5F, 0xFF, 0xA0, 0xEA, 0x5F, 0xFF, 0xA0, 0xD2, 
0x50, 0x00, 0x41, 0x22, 0x4F, 0xFF, 0x80, 0x02, 0x40, 0x00, 0x00, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x08, 0xF8, 0x00, 0x00, 0x0F, 0xFC, 
0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0xC0, 
0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x80, 
0x00, 0x00, 0x0F, 0x04, 0x00, 0x00, 0x0E, 0x04, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x00, 0x90, 
0x00, 0x00, 0x00, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x70, 
0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x07, 0xF8, 
0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_LOAD */
static _UBYTE RS12_8CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00, 0x03, 0x5F, 0xFF, 0x80, 0x03, 
0x5F, 0xFF, 0xC0, 0x03, 0x5F, 0xFF, 0xE1, 0xE3, 0x5F, 0xFF, 0xE1, 0xF3, 0x5F, 0xFF, 0xE1, 0xFB, 
0x5F, 0xFF, 0xFF, 0xFF, 0x5F, 0xFF, 0xFF, 0xFF, 0x5F, 0xFF, 0xFF, 0xFF, 0x5F, 0xFF, 0xFF, 0xFF, 
0x5F, 0xFF, 0xFF, 0xFF, 0x5F, 0xFF, 0xFF, 0xFF, 0x5F, 0xFF, 0xE1, 0xFB, 0x5F, 0xFF, 0xE1, 0xF3, 
0x5F, 0xFF, 0xC1, 0xE3, 0x4F, 0xFF, 0x80, 0x03, 0x40, 0x00, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* mask of TO_SAVE */
static _UBYTE RS13_MMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x4F, 0xFF, 0xC0, 0x02, 
0x4A, 0x01, 0x40, 0x82, 0x4A, 0x01, 0xC1, 0x82, 0x4A, 0x01, 0xC2, 0x82, 0x4A, 0x01, 0x44, 0xF2, 
0x4A, 0x01, 0x48, 0x02, 0x4B, 0xFE, 0x50, 0x02, 0x48, 0x00, 0x60, 0x02, 0x48, 0x00, 0x50, 0x02, 
0x49, 0xFC, 0x48, 0x02, 0x49, 0x02, 0x44, 0xF2, 0x49, 0x1A, 0x42, 0x82, 0x49, 0x1A, 0x41, 0x82, 
0x49, 0x02, 0x40, 0x82, 0x47, 0xFF, 0x80, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* data of TO_SAVE */
static _UBYTE RS13_MDATA[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x4F, 0xFF, 0xC0, 0x02, 
0x4A, 0x01, 0x40, 0x82, 0x4A, 0x01, 0xC1, 0x82, 0x4A, 0x01, 0xC2, 0x82, 0x4A, 0x01, 0x44, 0xF2, 
0x4A, 0x01, 0x48, 0x02, 0x4B, 0xFE, 0x50, 0x02, 0x48, 0x00, 0x60, 0x02, 0x48, 0x00, 0x50, 0x02, 
0x49, 0xFC, 0x48, 0x02, 0x49, 0x02, 0x44, 0xF2, 0x49, 0x1A, 0x42, 0x82, 0x49, 0x1A, 0x41, 0x82, 
0x49, 0x02, 0x40, 0x82, 0x47, 0xFF, 0x80, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* color data of TO_SAVE */
static _UBYTE RS13_4CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 
0x07, 0x83, 0x80, 0x00, 0x07, 0x81, 0x40, 0xC0, 0x07, 0x81, 0x41, 0xA0, 0x07, 0x81, 0x42, 0xE0, 
0x06, 0x01, 0x47, 0x7C, 0x0F, 0xFF, 0x4F, 0xB2, 0x0A, 0xAA, 0x57, 0xDA, 0x0C, 0x00, 0x5B, 0xEE, 
0x0B, 0xFE, 0x4D, 0xF6, 0x0F, 0xFE, 0x46, 0xFC, 0x0B, 0xFE, 0x43, 0x60, 0x0F, 0xFE, 0x41, 0xA0, 
0x0F, 0xFF, 0x80, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x01, 0x00, 0x00, 0x07, 0x83, 0x80, 0x00, 0x07, 0x81, 0x40, 0xC0, 0x07, 0x81, 0x41, 0xA0, 
0x07, 0x81, 0x42, 0xE0, 0x06, 0x01, 0x47, 0x7C, 0x0F, 0xFF, 0x4F, 0xB2, 0x0A, 0xAA, 0x57, 0xDA, 
0x0C, 0x00, 0x53, 0xEE, 0x0B, 0xFE, 0x49, 0xF6, 0x0F, 0xFE, 0x44, 0xFC, 0x0B, 0xFE, 0x42, 0x60, 
0x0F, 0xFE, 0x41, 0x20, 0x0F, 0xFF, 0x80, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x83, 0x80, 0x00, 0x07, 0x81, 0x40, 0xC0, 
0x07, 0x81, 0x41, 0xA0, 0x07, 0x81, 0x42, 0x60, 0x06, 0x01, 0x44, 0x3C, 0x0F, 0xFF, 0x48, 0x12, 
0x0A, 0xAA, 0x50, 0x0A, 0x0C, 0x00, 0x50, 0x06, 0x0B, 0xFE, 0x48, 0x02, 0x0F, 0xFE, 0x44, 0x3C, 
0x0B, 0xFE, 0x42, 0x20, 0x0F, 0xFE, 0x41, 0x20, 0x0F, 0xFF, 0x80, 0xC0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x4F, 0xFF, 0x00, 0x02, 0x52, 0xFC, 0x80, 0x02, 
0x52, 0xFC, 0xC1, 0xE2, 0x52, 0xFC, 0xC3, 0x22, 0x53, 0xFC, 0xC6, 0x22, 0x50, 0x00, 0xCC, 0x3E, 
0x50, 0x00, 0xDE, 0x03, 0x57, 0xFF, 0xFF, 0x03, 0x54, 0x00, 0xFF, 0x83, 0x54, 0x00, 0xDF, 0xC3, 
0x54, 0x00, 0xCF, 0xFE, 0x54, 0x00, 0xC7, 0xE2, 0x54, 0x00, 0xC3, 0xE2, 0x4F, 0xFF, 0x81, 0xE2, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_SAVE */
static _UBYTE RS13_4CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFF, 0x40, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00, 0x03, 0x4F, 0xFF, 0x00, 0x03, 
0x5F, 0xFF, 0x80, 0x03, 0x5F, 0xFF, 0xC1, 0xE3, 0x5F, 0xFF, 0xC3, 0xE3, 0x5F, 0xFF, 0xC7, 0xE3, 
0x5F, 0xFF, 0xCF, 0xFF, 0x5F, 0xFF, 0xDF, 0xFF, 0x5F, 0xFF, 0xFF, 0xFF, 0x5F, 0xFF, 0xFF, 0xFF, 
0x5F, 0xFF, 0xDF, 0xFF, 0x5F, 0xFF, 0xCF, 0xFF, 0x5F, 0xFF, 0xC7, 0xE3, 0x5F, 0xFF, 0xC3, 0xE3, 
0x4F, 0xFF, 0x81, 0xE3, 0x40, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* color data of TO_SAVE */
static _UBYTE RS13_8CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0xFE, 0x00, 0x00, 
0x1C, 0x03, 0x80, 0x00, 0x0C, 0x82, 0x40, 0xC0, 0x1E, 0x82, 0xC1, 0xE0, 0x1C, 0x02, 0x42, 0xE0, 
0x09, 0xFC, 0x44, 0xFC, 0x18, 0x00, 0x49, 0xBA, 0x1C, 0x2C, 0x59, 0x72, 0x08, 0x05, 0x5A, 0xBA, 
0x18, 0x05, 0x4C, 0x5E, 0x08, 0x0B, 0x46, 0x7C, 0x10, 0x2F, 0x42, 0x60, 0x02, 0xBF, 0x41, 0x60, 
0x0F, 0xFF, 0x80, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0x01, 0x00, 0x02, 0x46, 0xA3, 0x80, 0x02, 0x56, 0x0B, 0x40, 0xC2, 0x45, 0x00, 0x41, 0xA2, 
0x44, 0x01, 0x43, 0xE2, 0x51, 0xC1, 0x47, 0xFC, 0x48, 0x16, 0x4F, 0xFE, 0x4B, 0xD0, 0x5F, 0xCE, 
0x5C, 0x04, 0xDF, 0xE6, 0x4C, 0x04, 0x4F, 0xFA, 0x5C, 0x0A, 0xC7, 0xBC, 0x40, 0x2F, 0x43, 0xA2, 
0x52, 0xBE, 0x41, 0xE2, 0x4F, 0xFF, 0x80, 0xC2, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x80, 0x00, 0x01, 0x20, 0xC0, 0x00, 0x01, 0x09, 0x60, 0xC0, 
0x01, 0x01, 0x61, 0x20, 0x01, 0x01, 0x63, 0x20, 0x06, 0x03, 0x67, 0x3C, 0x07, 0xFF, 0x6E, 0x47, 
0x00, 0x00, 0x56, 0x8F, 0x03, 0xFA, 0xD5, 0x47, 0x03, 0xFA, 0x6B, 0xA3, 0x03, 0xF4, 0xE5, 0xBC, 
0x0B, 0xD0, 0x63, 0xA0, 0x09, 0x40, 0x61, 0xA0, 0x1F, 0xFF, 0xC0, 0xC0, 0x0F, 0xFF, 0x80, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x4D, 0xFF, 0x00, 0x02, 0x52, 0xDC, 0x80, 0x02, 
0x52, 0xF4, 0xC1, 0xE2, 0x52, 0xFC, 0xC3, 0x22, 0x53, 0xFC, 0xC6, 0x22, 0x50, 0x00, 0xCC, 0x3E, 
0x50, 0x00, 0xD8, 0x46, 0x57, 0xFF, 0xF0, 0x0E, 0x54, 0x00, 0x70, 0x06, 0x54, 0x00, 0xD8, 0x02, 
0x54, 0x00, 0x4C, 0x3E, 0x54, 0x00, 0xC7, 0x22, 0x54, 0x00, 0xC3, 0x22, 0x4F, 0xFF, 0x81, 0xE2, 
0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0x80, 0x02, 
0x5F, 0xFF, 0x40, 0x02, 0x5F, 0xFF, 0xA1, 0x22, 0x5F, 0xFF, 0xA2, 0xC2, 0x5F, 0xFF, 0xA5, 0xC2, 
0x5F, 0xFF, 0xAB, 0xC2, 0x5F, 0xFF, 0xB7, 0xB9, 0x5F, 0xFF, 0xA7, 0xF1, 0x5F, 0xFF, 0xA7, 0xF9, 
0x5F, 0xFF, 0xB3, 0xFD, 0x5F, 0xFF, 0xA9, 0xC2, 0x5F, 0xFF, 0xA5, 0xC2, 0x5F, 0xFF, 0xA2, 0xC2, 
0x50, 0x00, 0x41, 0x22, 0x4F, 0xFF, 0x80, 0x02, 0x40, 0x00, 0x00, 0x02, 0x7F, 0xFF, 0xFF, 0xFE, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x07, 0xC4, 0x00, 0x00, 0x0F, 0xFC, 
0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x07, 0xFC, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x00, 0xC0, 
0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 
0x00, 0x00, 0x08, 0x3C, 0x00, 0x00, 0x08, 0x1C, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x02, 0x40, 
0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x03, 0x80, 
0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x0F, 0xC0, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x07, 0xF8, 
0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_SAVE */
static _UBYTE RS13_8CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00, 0x03, 0x5F, 0xFF, 0x80, 0x03, 
0x5F, 0xFF, 0xC0, 0x03, 0x5F, 0xFF, 0xE1, 0xE3, 0x5F, 0xFF, 0xE3, 0xE3, 0x5F, 0xFF, 0xE7, 0xE3, 
0x5F, 0xFF, 0xEF, 0xFF, 0x5F, 0xFF, 0xFF, 0xFF, 0x5F, 0xFF, 0xFF, 0xFF, 0x5F, 0xFF, 0xFF, 0xFF, 
0x5F, 0xFF, 0xFF, 0xFF, 0x5F, 0xFF, 0xEF, 0xFF, 0x5F, 0xFF, 0xE7, 0xE3, 0x5F, 0xFF, 0xE3, 0xE3, 
0x5F, 0xFF, 0xC1, 0xE3, 0x4F, 0xFF, 0x80, 0x03, 0x40, 0x00, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* mask of TO_MENU */
static _UBYTE RS14_MMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0xFF, 0xFA, 0x50, 0x00, 0x00, 0x0A, 
0x50, 0x00, 0x00, 0x0A, 0x5F, 0xFF, 0xFF, 0xFA, 0x40, 0x08, 0x00, 0x62, 0x40, 0x09, 0xF3, 0x62, 
0x40, 0x08, 0x00, 0x62, 0x40, 0x09, 0xE3, 0x62, 0x40, 0x08, 0x00, 0x62, 0x40, 0x09, 0x83, 0x62, 
0x40, 0x08, 0x00, 0x62, 0x40, 0x09, 0xF3, 0x62, 0x40, 0x08, 0x00, 0x62, 0x40, 0x09, 0xE3, 0x62, 
0x40, 0x08, 0x00, 0x62, 0x40, 0x0F, 0xFF, 0xE2, 0x40, 0x07, 0xFF, 0xE2, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* data of TO_MENU */
static _UBYTE RS14_MDATA[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0xFF, 0xFA, 0x50, 0x00, 0x00, 0x0A, 
0x50, 0x00, 0x00, 0x0A, 0x5F, 0xFF, 0xFF, 0xFA, 0x40, 0x08, 0x00, 0x62, 0x40, 0x09, 0xF3, 0x62, 
0x40, 0x08, 0x00, 0x62, 0x40, 0x09, 0xE3, 0x62, 0x40, 0x08, 0x00, 0x62, 0x40, 0x09, 0x83, 0x62, 
0x40, 0x08, 0x00, 0x62, 0x40, 0x09, 0xF3, 0x62, 0x40, 0x08, 0x00, 0x62, 0x40, 0x09, 0xE3, 0x62, 
0x40, 0x08, 0x00, 0x62, 0x40, 0x0F, 0xFF, 0xE2, 0x40, 0x07, 0xFF, 0xE2, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE};

/* color data of TO_MENU */
static _UBYTE RS14_4CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF0, 
0x00, 0x7F, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x01, 0x7F, 0xC0, 
0x00, 0x00, 0xEF, 0xC0, 0x00, 0x01, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xC0, 0x00, 0x01, 0x7F, 0xC0, 0x00, 0x01, 0xFF, 0xC0, 
0x00, 0x01, 0x7F, 0xC0, 0x00, 0x03, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0xFF, 0xFF, 0xF0, 0x00, 0x7F, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 
0x00, 0x01, 0x7F, 0xC0, 0x00, 0x00, 0xEF, 0xC0, 0x00, 0x01, 0x7F, 0xC0, 0x00, 0x04, 0x2D, 0x40, 
0x00, 0x06, 0x24, 0x40, 0x00, 0x06, 0xBF, 0x40, 0x00, 0x07, 0xFF, 0xC0, 0x00, 0x01, 0x7F, 0xC0, 
0x00, 0x01, 0xFF, 0xC0, 0x00, 0x01, 0x7F, 0xC0, 0x00, 0x03, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xAF, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x07, 0xFF, 0xC0, 0x00, 0x07, 0x24, 0xC0, 0x00, 0x07, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xED, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0xFF, 0xFA, 0x50, 0x00, 0x02, 0xFA, 0x50, 0x00, 0x01, 0x7A, 
0x5F, 0xFF, 0xFF, 0xFA, 0x40, 0x08, 0x00, 0x62, 0x40, 0x08, 0x03, 0xE2, 0x40, 0x08, 0xAF, 0xE2, 
0x40, 0x08, 0x15, 0xE2, 0x40, 0x08, 0x2D, 0x62, 0x40, 0x08, 0x24, 0xE2, 0x40, 0x08, 0x1F, 0x62, 
0x40, 0x0B, 0xFF, 0xE2, 0x40, 0x08, 0x00, 0xE2, 0x40, 0x08, 0xED, 0x62, 0x40, 0x08, 0x05, 0xE2, 
0x40, 0x0B, 0xFF, 0xE2, 0x40, 0x0F, 0xFF, 0xE2, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_MENU */
static _UBYTE RS14_4CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFF, 0x40, 0x00, 0x00, 0x03, 0x5F, 0xFF, 0xFF, 0xFB, 0x5F, 0xFF, 0xFF, 0xFB, 
0x5F, 0xFF, 0xFF, 0xFB, 0x5F, 0xFF, 0xFF, 0xFB, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

/* color data of TO_MENU */
static _UBYTE RS14_8CDATA[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xB8, 0x62, 0xF0, 
0x01, 0xDC, 0xB1, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC0, 0x00, 0x02, 0x83, 0x80, 
0x00, 0x03, 0xAF, 0xC0, 0x00, 0x02, 0x95, 0xC0, 0x00, 0x00, 0x02, 0x80, 0x00, 0x02, 0x43, 0x80, 
0x00, 0x02, 0x80, 0x80, 0x00, 0x03, 0xFD, 0x80, 0x00, 0x03, 0x82, 0x00, 0x00, 0x02, 0xED, 0x00, 
0x00, 0x02, 0x95, 0x00, 0x00, 0x03, 0xF0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 
0x40, 0xB8, 0x75, 0xE2, 0x40, 0x5C, 0xFA, 0xF2, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x42, 
0x40, 0x00, 0x14, 0xC2, 0x40, 0x01, 0xBF, 0x42, 0x40, 0x00, 0x03, 0xC2, 0x40, 0x04, 0x2F, 0xC2, 
0x40, 0x06, 0x24, 0xC2, 0x40, 0x06, 0x9F, 0xC2, 0x40, 0x07, 0xFF, 0xC2, 0x40, 0x01, 0x05, 0xC2, 
0x40, 0x00, 0xEF, 0xC2, 0x40, 0x00, 0x0A, 0xC2, 0x40, 0x03, 0xFF, 0x42, 0x40, 0x00, 0x00, 0x02, 
0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF5, 0x00, 0x00, 0x7F, 0xBA, 0x80, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x40, 0x00, 0x01, 0xAF, 0x00, 0x00, 0x00, 0x02, 0x00, 
0x00, 0x03, 0xFD, 0x40, 0x00, 0x03, 0x24, 0x00, 0x00, 0x03, 0xFF, 0x40, 0x00, 0x04, 0x02, 0x40, 
0x00, 0x01, 0x05, 0x40, 0x00, 0x00, 0xEF, 0xC0, 0x00, 0x00, 0x0A, 0x40, 0x00, 0x00, 0x0F, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 
0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0xFF, 0xFA, 0x50, 0xFF, 0xF5, 0x8A, 0x50, 0x7F, 0xBA, 0xCA, 
0x5F, 0xFF, 0xFF, 0xFA, 0x40, 0x08, 0x00, 0x22, 0x40, 0x08, 0x14, 0xA2, 0x40, 0x09, 0xAF, 0x22, 
0x40, 0x08, 0x02, 0xA2, 0x40, 0x0C, 0x00, 0x22, 0x40, 0x0C, 0x00, 0x62, 0x40, 0x0C, 0x20, 0x22, 
0x40, 0x0C, 0x00, 0x22, 0x40, 0x09, 0x05, 0x22, 0x40, 0x08, 0xEF, 0xA2, 0x40, 0x08, 0x0A, 0x22, 
0x40, 0x08, 0x00, 0xA2, 0x40, 0x0F, 0xFF, 0xE2, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x02, 0x5F, 0xFF, 0xFF, 0xFA, 0x53, 0x00, 0x0A, 0x7A, 
0x51, 0x80, 0x45, 0x3A, 0x5F, 0xFF, 0xFF, 0xFA, 0x40, 0x08, 0x07, 0xE2, 0x40, 0x0B, 0xEB, 0x62, 
0x40, 0x0A, 0x50, 0xE2, 0x40, 0x0B, 0xFD, 0x62, 0x40, 0x08, 0x2F, 0xE2, 0x40, 0x08, 0x67, 0xE2, 
0x40, 0x08, 0x1F, 0xE2, 0x40, 0x0B, 0xFF, 0xE2, 0x40, 0x0A, 0xFA, 0xE2, 0x40, 0x0B, 0x10, 0x62, 
0x40, 0x0B, 0xF5, 0xE2, 0x40, 0x0B, 0xFF, 0xA2, 0x40, 0x0F, 0xFF, 0xE2, 0x7F, 0xFF, 0xFF, 0xFE, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0xFF, 0xFF, 0x70, 0x00, 0x7F, 0xBF, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 
0x00, 0x01, 0x7F, 0x40, 0x00, 0x01, 0x40, 0xC0, 0x00, 0x01, 0x7F, 0x40, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xC0, 0x00, 0x01, 0x7F, 0xC0, 
0x00, 0x01, 0x12, 0xC0, 0x00, 0x01, 0x7F, 0xC0, 0x00, 0x03, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x50, 0x00, 0x7F, 0xBF, 0xA0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x7F, 0x00, 0x00, 0x01, 0x40, 0x80, 0x00, 0x01, 0x7F, 0x00, 
0x00, 0x07, 0xD0, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0xC0, 0x00, 0x00, 0x04, 0x00, 0x00, 
0x00, 0x01, 0x7F, 0x80, 0x00, 0x01, 0x12, 0x80, 0x00, 0x01, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x40, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x10, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 
0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x2F, 0xC0, 0x00, 0x00, 0x24, 0x80, 0x00, 0x00, 0x1F, 0xC0, 
0x00, 0x03, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 
0x00, 0x03, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

/* color mask of TO_MENU */
static _UBYTE RS14_8CMASK[] = {
0x7F, 0xFF, 0xFF, 0xFE, 0x40, 0x00, 0x00, 0x03, 0x5F, 0xFF, 0xFF, 0xFB, 0x5F, 0xFF, 0xFF, 0xFB, 
0x5F, 0xFF, 0xFF, 0xFB, 0x5F, 0xFF, 0xFF, 0xFB, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 
0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x40, 0x0F, 0xFF, 0xE3, 0x7F, 0xFF, 0xFF, 0xFF, 
0x3F, 0xFF, 0xFF, 0xFF};

static char *rs_frstr[] = {
	hypview_string_145,
	hypview_string_146,
	hypview_string_147,
	hypview_string_148,
	hypview_string_149,
	hypview_string_150,
	hypview_string_151,
	hypview_string_152,
	hypview_string_153,
	hypview_string_154,
	hypview_string_155,
	hypview_string_156,
	hypview_string_157,
	hypview_string_158,
	hypview_string_159,
	hypview_string_160,
	hypview_string_161
};


static CICON rs_cicon[] = {
	{ 4, (_WORD *) RS0_4CDATA, (_WORD *) RS0_4CMASK, 0, 0, 0 },
	{ 4, (_WORD *) RS1_4CDATA, (_WORD *) RS1_4CMASK, 0, 0, &rs_cicon[2] },
	{ 8, (_WORD *) RS1_8CDATA, (_WORD *) RS1_8CMASK, 0, 0, 0 },
	{ 4, (_WORD *) RS2_4CDATA, (_WORD *) RS2_4CMASK, 0, 0, &rs_cicon[4] },
	{ 8, (_WORD *) RS2_8CDATA, (_WORD *) RS2_8CMASK, 0, 0, 0 },
	{ 4, (_WORD *) RS3_4CDATA, (_WORD *) RS3_4CMASK, 0, 0, &rs_cicon[6] },
	{ 8, (_WORD *) RS3_8CDATA, (_WORD *) RS3_8CMASK, 0, 0, 0 },
	{ 4, (_WORD *) RS4_4CDATA, (_WORD *) RS4_4CMASK, 0, 0, &rs_cicon[8] },
	{ 8, (_WORD *) RS4_8CDATA, (_WORD *) RS4_8CMASK, 0, 0, 0 },
	{ 4, (_WORD *) RS5_4CDATA, (_WORD *) RS5_4CMASK, 0, 0, &rs_cicon[10] },
	{ 8, (_WORD *) RS5_8CDATA, (_WORD *) RS5_8CMASK, 0, 0, 0 },
	{ 4, (_WORD *) RS6_4CDATA, (_WORD *) RS6_4CMASK, 0, 0, &rs_cicon[12] },
	{ 8, (_WORD *) RS6_8CDATA, (_WORD *) RS6_8CMASK, 0, 0, 0 },
	{ 4, (_WORD *) RS7_4CDATA, (_WORD *) RS7_4CMASK, 0, 0, &rs_cicon[14] },
	{ 8, (_WORD *) RS7_8CDATA, (_WORD *) RS7_8CMASK, 0, 0, 0 },
	{ 4, (_WORD *) RS8_4CDATA, (_WORD *) RS8_4CMASK, 0, 0, &rs_cicon[16] },
	{ 8, (_WORD *) RS8_8CDATA, (_WORD *) RS8_8CMASK, 0, 0, 0 },
	{ 4, (_WORD *) RS9_4CDATA, (_WORD *) RS9_4CMASK, 0, 0, &rs_cicon[18] },
	{ 8, (_WORD *) RS9_8CDATA, (_WORD *) RS9_8CMASK, 0, 0, 0 },
	{ 4, (_WORD *) RS10_4CDATA, (_WORD *) RS10_4CMASK, 0, 0, &rs_cicon[20] },
	{ 8, (_WORD *) RS10_8CDATA, (_WORD *) RS10_8CMASK, 0, 0, 0 },
	{ 4, (_WORD *) RS11_4CDATA, (_WORD *) RS11_4CMASK, 0, 0, &rs_cicon[22] },
	{ 8, (_WORD *) RS11_8CDATA, (_WORD *) RS11_8CMASK, 0, 0, 0 },
	{ 4, (_WORD *) RS12_4CDATA, (_WORD *) RS12_4CMASK, 0, 0, &rs_cicon[24] },
	{ 8, (_WORD *) RS12_8CDATA, (_WORD *) RS12_8CMASK, 0, 0, 0 },
	{ 4, (_WORD *) RS13_4CDATA, (_WORD *) RS13_4CMASK, 0, 0, &rs_cicon[26] },
	{ 8, (_WORD *) RS13_8CDATA, (_WORD *) RS13_8CMASK, 0, 0, 0 },
	{ 4, (_WORD *) RS14_4CDATA, (_WORD *) RS14_4CMASK, 0, 0, &rs_cicon[28] },
	{ 8, (_WORD *) RS14_8CDATA, (_WORD *) RS14_8CMASK, 0, 0, 0 }
};


static CICONBLK rs_ciconblk[] = {
	{ { (_WORD *) RS0_MMASK, (_WORD *) RS0_MDATA, hypview_string_0, 4096,13,5, 0,0,32,32, 13,7,6,8 }, &rs_cicon[0] }, /* DI_ICON */
	{ { (_WORD *) RS1_MMASK, (_WORD *) RS1_MDATA, hypview_string_1, 4096,18,10, 0,0,32,21, 1,9,24,8 }, &rs_cicon[1] }, /* TO_BACK */
	{ { (_WORD *) RS2_MMASK, (_WORD *) RS2_MDATA, hypview_string_2, 4096,24,10, 0,0,32,21, 1,6,0,8 }, &rs_cicon[3] }, /* TO_HISTORY */
	{ { (_WORD *) RS3_MMASK, (_WORD *) RS3_MDATA, hypview_string_3, 4096,24,10, 0,0,32,21, 13,7,6,8 }, &rs_cicon[5] }, /* TO_MEMORY */
	{ { (_WORD *) RS4_MMASK, (_WORD *) RS4_MDATA, hypview_string_4, 4096,24,10, 0,0,32,21, 13,7,6,8 }, &rs_cicon[7] }, /* TO_PREV */
	{ { (_WORD *) RS5_MMASK, (_WORD *) RS5_MDATA, hypview_string_5, 4096,24,10, 0,0,32,21, 13,7,6,8 }, &rs_cicon[9] }, /* TO_HOME */
	{ { (_WORD *) RS6_MMASK, (_WORD *) RS6_MDATA, hypview_string_6, 4096,24,10, 0,0,32,21, 13,7,6,8 }, &rs_cicon[11] }, /* TO_NEXT */
	{ { (_WORD *) RS7_MMASK, (_WORD *) RS7_MDATA, hypview_string_7, 4096,24,10, 0,0,32,21, 13,7,6,8 }, &rs_cicon[13] }, /* TO_INDEX */
	{ { (_WORD *) RS8_MMASK, (_WORD *) RS8_MDATA, hypview_string_8, 4096,24,10, 0,0,32,21, 13,7,6,8 }, &rs_cicon[15] }, /* TO_KATALOG */
	{ { (_WORD *) RS9_MMASK, (_WORD *) RS9_MDATA, hypview_string_9, 4096,24,10, 0,0,32,21, 13,7,6,8 }, &rs_cicon[17] }, /* TO_REFERENCES */
	{ { (_WORD *) RS10_MMASK, (_WORD *) RS10_MDATA, hypview_string_10, 4096,24,10, 0,0,32,21, 13,7,0,8 }, &rs_cicon[19] }, /* TO_HELP */
	{ { (_WORD *) RS11_MMASK, (_WORD *) RS11_MDATA, hypview_string_11, 4096,24,10, 0,0,32,21, 13,7,0,8 }, &rs_cicon[21] }, /* TO_INFO */
	{ { (_WORD *) RS12_MMASK, (_WORD *) RS12_MDATA, hypview_string_12, 4096,8,9, 0,0,32,21, 13,7,6,8 }, &rs_cicon[23] }, /* TO_LOAD */
	{ { (_WORD *) RS13_MMASK, (_WORD *) RS13_MDATA, hypview_string_13, 4096,24,10, 0,0,32,21, 13,7,6,8 }, &rs_cicon[25] }, /* TO_SAVE */
	{ { (_WORD *) RS14_MMASK, (_WORD *) RS14_MDATA, hypview_string_14, 4096,24,10, 0,0,32,21, 13,7,6,8 }, &rs_cicon[27] } /* TO_MENU */
};


static TEDINFO rs_tedinfo[] = {
	{ hypview_string_15, hypview_string_16, hypview_string_17, IBM, 0, TE_LEFT, 0x1180, 0x0, -2, 26,34 }, /* TO_SEARCH */
	{ hypview_string_18, hypview_string_19, hypview_string_20, IBM, 0, TE_CNTR, 0x1200, 0x0, -1, 11,1 }, /* TO_STRNOTFOUND */
	{ hypview_string_52, hypview_string_53, hypview_string_54, IBM, 0, TE_LEFT, 0x1100, 0x0, -1, 41,1 }, /* PROG_FILE */
	{ hypview_string_56, hypview_string_57, hypview_string_58, IBM, 0, TE_LEFT, 0x1100, 0x0, -1, 41,1 }, /* PROG_DATABASE */
	{ hypview_string_60, hypview_string_61, hypview_string_62, IBM, 0, TE_LEFT, 0x1100, 0x0, -1, 41,1 }, /* PROG_AUTHOR */
	{ hypview_string_64, hypview_string_65, hypview_string_66, IBM, 0, TE_LEFT, 0x1100, 0x0, -1, 41,1 }, /* PROG_VERSION */
	{ hypview_string_68, hypview_string_69, hypview_string_70, IBM, 0, TE_LEFT, 0x1100, 0x0, 0, 6,22 }, /* INFO_NODES */
	{ hypview_string_71, hypview_string_72, hypview_string_73, IBM, 0, TE_LEFT, 0x1100, 0x0, 0, 8,22 }, /* INFO_INDEXSIZE */
	{ hypview_string_74, hypview_string_75, hypview_string_76, IBM, 0, TE_LEFT, 0x1100, 0x0, 0, 4,22 }, /* INFO_HCPVERSION */
	{ hypview_string_77, hypview_string_78, hypview_string_79, IBM, 0, TE_LEFT, 0x1100, 0x0, 0, 11,25 }, /* INFO_OS */
	{ hypview_string_80, hypview_string_81, hypview_string_82, IBM, 0, TE_LEFT, 0x1100, 0x0, 0, 34,48 }, /* INFO_HELP */
	{ hypview_string_83, hypview_string_84, hypview_string_85, IBM, 0, TE_LEFT, 0x1100, 0x0, 0, 34,48 }, /* INFO_OPTIONS */
	{ hypview_string_86, hypview_string_87, hypview_string_88, IBM, 0, TE_LEFT, 0x1100, 0x0, 0, 34,48 }, /* INFO_DEFAULT */
	{ hypview_string_89, hypview_string_90, hypview_string_91, IBM, 0, TE_LEFT, 0x1100, 0x0, 0, 4,22 }, /* INFO_WIDTH */
	{ hypview_string_92, hypview_string_93, hypview_string_94, SMALL, 0, TE_CNTR, 0x1180, 0x0, -1, 5,1 }, /* PROG_HELP */
	{ hypview_string_99, hypview_string_100, hypview_string_101, IBM, 0, TE_LEFT, 0x1100, 0x0, -1, 41,1 }, /* PROG_SUBJECT */
	{ hypview_string_102, hypview_string_103, hypview_string_104, IBM, 0, TE_LEFT, 0x1180, 0x0, -1, 71,1 }, /* SR_FSTL_0 */
	{ hypview_string_105, hypview_string_106, hypview_string_107, IBM, 0, TE_LEFT, 0x1180, 0x0, -1, 71,1 }, /* SR_FSTL_1 */
	{ hypview_string_108, hypview_string_109, hypview_string_110, IBM, 0, TE_LEFT, 0x1180, 0x0, -1, 71,1 }, /* SR_FSTL_2 */
	{ hypview_string_111, hypview_string_112, hypview_string_113, IBM, 0, TE_LEFT, 0x1180, 0x0, -1, 71,1 }, /* SR_FSTL_3 */
	{ hypview_string_114, hypview_string_115, hypview_string_116, IBM, 0, TE_LEFT, 0x1180, 0x0, -1, 71,1 }, /* SR_FSTL_4 */
	{ hypview_string_117, hypview_string_118, hypview_string_119, IBM, 0, TE_LEFT, 0x1180, 0x0, -1, 71,1 }, /* SR_FSTL_5 */
	{ hypview_string_120, hypview_string_121, hypview_string_122, IBM, 0, TE_LEFT, 0x1180, 0x0, -1, 71,1 }, /* SR_FSTL_6 */
	{ hypview_string_123, hypview_string_124, hypview_string_125, IBM, 0, TE_LEFT, 0x1180, 0x0, -1, 71,1 }, /* SR_FSTL_7 */
	{ hypview_string_126, hypview_string_127, hypview_string_128, IBM, 0, TE_LEFT, 0x1180, 0x0, -1, 71,1 }, /* SR_FSTL_8 */
	{ hypview_string_129, hypview_string_130, hypview_string_131, IBM, 0, TE_LEFT, 0x1180, 0x0, -1, 71,1 }, /* SR_FSTL_9 */
	{ hypview_string_133, hypview_string_134, hypview_string_135, IBM, 0, TE_LEFT, 0x1180, 0x0, -1, 8,1 },
	{ hypview_string_136, hypview_string_137, hypview_string_138, IBM, 0, TE_LEFT, 0x1180, 0x0, -2, 31,31 } /* HYPFIND_STRING */
};


static OBJECT rs_object[] = {
/* DIAL_LIBRARY */

	{ -1, 1, 1, G_BOX, OF_FL3DBAK, OS_NORMAL, C_UNION(0x1100L), 0,0, 1111,2057 },
	{ 0, -1, -1, G_CICON, OF_LASTOB, OS_NORMAL, C_UNION(&rs_ciconblk[0]), 0,0, 8192,8192 }, /* DI_ICON */

/* TOOLBAR */

	{ -1, 1, 16, G_BOX, OF_FL3DBAK, OS_NORMAL, C_UNION(0xFE1100L), 0,0, 1093,4 }, /* TO_BACKGRND */
	{ 16, 2, 15, G_IBOX, OF_NONE, OS_NORMAL, C_UNION(0x1100L), 0,0, 61,2305 }, /* TO_BUTTONBOX */
	{ 3, -1, -1, G_CICON, 0x41, OS_NORMAL, C_UNION(&rs_ciconblk[1]), 1024,512, 8192,5376 }, /* TO_BACK */
	{ 4, -1, -1, G_CICON, 0x41, OS_NORMAL, C_UNION(&rs_ciconblk[2]), 1028,512, 8192,5376 }, /* TO_HISTORY */
	{ 5, -1, -1, G_CICON, 0x41, OS_NORMAL, C_UNION(&rs_ciconblk[3]), 1032,512, 8192,5376 }, /* TO_MEMORY */
	{ 6, -1, -1, G_CICON, 0x41, OS_NORMAL, C_UNION(&rs_ciconblk[4]), 13,512, 8192,5376 }, /* TO_PREV */
	{ 7, -1, -1, G_CICON, 0x41, OS_NORMAL, C_UNION(&rs_ciconblk[5]), 17,512, 8192,5376 }, /* TO_HOME */
	{ 8, -1, -1, G_CICON, 0x41, OS_NORMAL, C_UNION(&rs_ciconblk[6]), 21,512, 8192,5376 }, /* TO_NEXT */
	{ 9, -1, -1, G_CICON, 0x41, OS_NORMAL, C_UNION(&rs_ciconblk[7]), 1049,512, 8192,5376 }, /* TO_INDEX */
	{ 10, -1, -1, G_CICON, 0x41, OS_NORMAL, C_UNION(&rs_ciconblk[8]), 1053,512, 8192,5376 }, /* TO_KATALOG */
	{ 11, -1, -1, G_CICON, 0x41, OS_NORMAL, C_UNION(&rs_ciconblk[9]), 1057,512, 8192,5376 }, /* TO_REFERENCES */
	{ 12, -1, -1, G_CICON, 0x41, OS_NORMAL, C_UNION(&rs_ciconblk[10]), 1061,512, 8192,5376 }, /* TO_HELP */
	{ 13, -1, -1, G_CICON, 0x41, OS_NORMAL, C_UNION(&rs_ciconblk[11]), 42,512, 8192,5376 }, /* TO_INFO */
	{ 14, -1, -1, G_CICON, 0x41, OS_NORMAL, C_UNION(&rs_ciconblk[12]), 46,512, 8192,5376 }, /* TO_LOAD */
	{ 15, -1, -1, G_CICON, 0x41, OS_NORMAL, C_UNION(&rs_ciconblk[13]), 50,512, 8192,5376 }, /* TO_SAVE */
	{ 1, -1, -1, G_CICON, 0x41, OS_NORMAL, C_UNION(&rs_ciconblk[14]), 54,512, 8192,5376 }, /* TO_MENU */
	{ 0, 17, 18, G_BOX, OF_FL3DBAK, OS_NORMAL, C_UNION(0x1100L), 0,2, 59,2305 }, /* TO_SEARCHBOX */
	{ 18, -1, -1, G_FTEXT, OF_FL3DBAK, OS_NORMAL, C_UNION(&rs_tedinfo[0]), 1024,1024, 33,1 }, /* TO_SEARCH */
	{ 16, -1, -1, G_TEXT, 0x420, OS_NORMAL, C_UNION(&rs_tedinfo[1]), 34,0, 11,2049 }, /* TO_STRNOTFOUND */

/* CONTEXT */

	{ -1, 1, 16, G_BOX, OF_FL3DBAK, OS_SHADOWED, C_UNION(0xFF1100L), 0,0, 19,16 },
	{ 2, -1, -1, G_STRING, OF_SELECTABLE, OS_NORMAL, C_UNION(hypview_string_21), 0,0, 19,1 }, /* CO_BACK */
	{ 3, -1, -1, G_STRING, OF_SELECTABLE, OS_NORMAL, C_UNION(hypview_string_22), 0,1, 19,1 }, /* CO_COPY */
	{ 4, -1, -1, G_STRING, OF_SELECTABLE, OS_NORMAL, C_UNION(hypview_string_23), 0,2, 19,1 }, /* CO_PASTE */
	{ 5, -1, -1, G_STRING, OF_NONE, OS_DISABLED, C_UNION(hypview_string_24), 0,3, 19,1 },
	{ 6, -1, -1, G_STRING, OF_SELECTABLE, OS_NORMAL, C_UNION(hypview_string_25), 0,4, 19,1 }, /* CO_SELECT_ALL */
	{ 7, -1, -1, G_STRING, OF_NONE, OS_DISABLED, C_UNION(hypview_string_26), 0,5, 19,1 },
	{ 8, -1, -1, G_STRING, OF_SELECTABLE, OS_NORMAL, C_UNION(hypview_string_27), 0,6, 19,1 }, /* CO_SAVE */
	{ 9, -1, -1, G_STRING, OF_NONE, OS_DISABLED, C_UNION(hypview_string_28), 0,7, 19,1 },
	{ 10, -1, -1, G_STRING, OF_SELECTABLE, OS_NORMAL, C_UNION(hypview_string_29), 0,8, 19,1 }, /* CO_SEARCH */
	{ 11, -1, -1, G_STRING, OF_SELECTABLE, OS_NORMAL, C_UNION(hypview_string_30), 0,9, 19,1 }, /* CO_SEARCH_AGAIN */
	{ 12, -1, -1, G_STRING, OF_SELECTABLE, OS_NORMAL, C_UNION(hypview_string_31), 0,10, 19,1 }, /* CO_DELETE_STACK */
	{ 13, -1, -1, G_STRING, OF_SELECTABLE, OS_DISABLED, C_UNION(hypview_string_32), 0,11, 19,1 }, /* CO_PRINT */
	{ 14, -1, -1, G_STRING, OF_NONE, OS_DISABLED, C_UNION(hypview_string_33), 0,12, 19,1 },
	{ 15, -1, -1, G_STRING, OF_SELECTABLE, OS_NORMAL, C_UNION(hypview_string_34), 0,13, 19,1 }, /* CO_SWITCH_FONT */
	{ 16, -1, -1, G_STRING, OF_SELECTABLE, OS_NORMAL, C_UNION(hypview_string_35), 0,14, 19,1 }, /* CO_SELECT_FONT */
	{ 0, -1, -1, G_STRING, 0x21, OS_NORMAL, C_UNION(hypview_string_36), 0,15, 19,1 }, /* CO_REMARKER */

/* EMPTYPOPUP */

	{ -1, 1, 12, G_BOX, OF_FL3DBAK, OS_SHADOWED, C_UNION(0xFF1100L), 0,0, 18,12 }, /* EM_BACK */
	{ 2, -1, -1, G_STRING, OF_SELECTABLE, OS_NORMAL, C_UNION(hypview_string_37), 0,0, 18,1 }, /* EM_1 */
	{ 3, -1, -1, G_STRING, OF_SELECTABLE, OS_NORMAL, C_UNION(hypview_string_38), 0,1, 18,1 }, /* EM_2 */
	{ 4, -1, -1, G_STRING, OF_SELECTABLE, OS_NORMAL, C_UNION(hypview_string_39), 0,2, 18,1 }, /* EM_3 */
	{ 5, -1, -1, G_STRING, OF_SELECTABLE, OS_NORMAL, C_UNION(hypview_string_40), 0,3, 18,1 }, /* EM_4 */
	{ 6, -1, -1, G_STRING, OF_SELECTABLE, OS_NORMAL, C_UNION(hypview_string_41), 0,4, 18,1 }, /* EM_5 */
	{ 7, -1, -1, G_STRING, OF_SELECTABLE, OS_NORMAL, C_UNION(hypview_string_42), 0,5, 18,1 }, /* EM_6 */
	{ 8, -1, -1, G_STRING, OF_SELECTABLE, OS_NORMAL, C_UNION(hypview_string_43), 0,6, 18,1 }, /* EM_7 */
	{ 9, -1, -1, G_STRING, OF_SELECTABLE, OS_NORMAL, C_UNION(hypview_string_44), 0,7, 18,1 }, /* EM_8 */
	{ 10, -1, -1, G_STRING, OF_SELECTABLE, OS_NORMAL, C_UNION(hypview_string_45), 0,8, 18,1 }, /* EM_9 */
	{ 11, -1, -1, G_STRING, OF_SELECTABLE, OS_NORMAL, C_UNION(hypview_string_46), 0,9, 18,1 }, /* EM_10 */
	{ 12, -1, -1, G_STRING, OF_SELECTABLE, OS_NORMAL, C_UNION(hypview_string_47), 0,10, 18,1 }, /* EM_11 */
	{ 0, -1, -1, G_STRING, 0x21, OS_NORMAL, C_UNION(hypview_string_48), 0,11, 18,1 }, /* EM_12 */

/* PROGINFO */

	{ -1, 1, 25, G_BOX, OF_FL3DBAK, OS_OUTLINED, C_UNION(0x21100L), 0,0, 53,23 },
	{ 2, -1, -1, G_STRING, OF_NONE, OS_NORMAL, C_UNION(hypview_string_49), 2,1, 40,1 }, /* PROG_NAME */
	{ 3, -1, -1, G_STRING, OF_NONE, OS_NORMAL, C_UNION(hypview_string_50), 2,2, 40,1 }, /* PROG_DATE */
	{ 4, -1, -1, G_STRING, OF_NONE, OS_NORMAL, C_UNION(hypview_string_51), 2,4, 5,1 },
	{ 5, -1, -1, G_TEXT, OF_NONE, OS_NORMAL, C_UNION(&rs_tedinfo[2]), 11,4, 40,1 }, /* PROG_FILE */
	{ 6, -1, -1, G_STRING, OF_NONE, OS_NORMAL, C_UNION(hypview_string_55), 2,5, 8,1 },
	{ 7, -1, -1, G_TEXT, OF_NONE, OS_NORMAL, C_UNION(&rs_tedinfo[3]), 11,5, 40,1 }, /* PROG_DATABASE */
	{ 8, -1, -1, G_STRING, OF_NONE, OS_NORMAL, C_UNION(hypview_string_59), 2,6, 9,1 },
	{ 9, -1, -1, G_TEXT, OF_NONE, OS_NORMAL, C_UNION(&rs_tedinfo[4]), 11,6, 40,1 }, /* PROG_AUTHOR */
	{ 10, -1, -1, G_STRING, OF_NONE, OS_NORMAL, C_UNION(hypview_string_63), 2,7, 8,1 },
	{ 11, -1, -1, G_TEXT, OF_NONE, OS_NORMAL, C_UNION(&rs_tedinfo[5]), 11,7, 40,1 }, /* PROG_VERSION */
	{ 20, 12, 19, (20<<8)+G_BUTTON, OF_FL3DBAK, OS_NORMAL, C_UNION(hypview_string_67), 2,10, 49,10 }, /* INFO_MORE_BOX */
	{ 13, -1, -1, G_FTEXT, OF_FL3DBAK, OS_NORMAL, C_UNION(&rs_tedinfo[6]), 1,1, 21,1 }, /* INFO_NODES */
	{ 14, -1, -1, G_FTEXT, OF_FL3DBAK, OS_NORMAL, C_UNION(&rs_tedinfo[7]), 1,2, 21,1 }, /* INFO_INDEXSIZE */
	{ 15, -1, -1, G_FTEXT, OF_FL3DBAK, OS_NORMAL, C_UNION(&rs_tedinfo[8]), 1,3, 21,1 }, /* INFO_HCPVERSION */
	{ 16, -1, -1, G_FTEXT, OF_FL3DBAK, OS_NORMAL, C_UNION(&rs_tedinfo[9]), 1,4, 24,1 }, /* INFO_OS */
	{ 17, -1, -1, G_FTEXT, OF_FL3DBAK, OS_NORMAL, C_UNION(&rs_tedinfo[10]), 1,6, 47,1 }, /* INFO_HELP */
	{ 18, -1, -1, G_FTEXT, OF_FL3DBAK, OS_NORMAL, C_UNION(&rs_tedinfo[11]), 1,7, 47,1 }, /* INFO_OPTIONS */
	{ 19, -1, -1, G_FTEXT, OF_FL3DBAK, OS_NORMAL, C_UNION(&rs_tedinfo[12]), 1,5, 47,1 }, /* INFO_DEFAULT */
	{ 11, -1, -1, G_FTEXT, OF_FL3DBAK, OS_NORMAL, C_UNION(&rs_tedinfo[13]), 1,8, 21,1 }, /* INFO_WIDTH */
	{ 21, -1, -1, (21<<8)+G_BOXTEXT, 0x5, 0x30, C_UNION(&rs_tedinfo[14]), 2,21, 8,1 }, /* PROG_HELP */
	{ 22, -1, -1, G_BUTTON, 0x205, 0x240, C_UNION(hypview_string_95), 20,21, 12,1 }, /* INFO_MORE */
	{ 23, -1, -1, G_BUTTON, 0x285, 0x240, C_UNION(hypview_string_96), 20,21, 12,1 }, /* INFO_LESS */
	{ 24, -1, -1, G_BUTTON, 0x207, 0x240, C_UNION(hypview_string_97), 41,21, 1033,1 }, /* PROG_OK */
	{ 25, -1, -1, G_STRING, OF_NONE, OS_NORMAL, C_UNION(hypview_string_98), 2,8, 8,1 },
	{ 0, -1, -1, G_TEXT, OF_LASTOB, OS_NORMAL, C_UNION(&rs_tedinfo[15]), 11,8, 40,1 }, /* PROG_SUBJECT */

/* SEARCH_RESULT */

	{ -1, 1, 16, G_BOX, OF_FL3DBAK, OS_OUTLINED, C_UNION(0x21100L), 0,0, 1100,15 },
	{ 2, -1, -1, G_BOXCHAR, 0x640, OS_NORMAL, C_UNION(0x1021100L), 72,3841, 514,513 }, /* SR_FSTL_UP */
	{ 4, 3, 3, G_BOX, OF_TOUCHEXIT, OS_NORMAL, C_UNION(0x11179L), 72,3, 514,8 }, /* SR_FSTL_BACK */
	{ 2, -1, -1, G_BOX, 0x640, OS_NORMAL, C_UNION(0x21100L), 0,0, 514,513 }, /* SR_FSTL_WHITE */
	{ 5, -1, -1, G_BOXCHAR, 0x640, OS_NORMAL, C_UNION(0x2021100L), 72,11, 514,513 }, /* SR_FSTL_DOWN */
	{ 16, 6, 15, G_IBOX, OF_NONE, OS_NORMAL, C_UNION(0xFF1100L), 2,2, 70,10 }, /* SR_BOX */
	{ 7, -1, -1, G_TEXT, OF_TOUCHEXIT, OS_NORMAL, C_UNION(&rs_tedinfo[16]), 0,0, 70,1 }, /* SR_FSTL_0 */
	{ 8, -1, -1, G_TEXT, OF_TOUCHEXIT, OS_NORMAL, C_UNION(&rs_tedinfo[17]), 0,1, 70,1 }, /* SR_FSTL_1 */
	{ 9, -1, -1, G_TEXT, OF_TOUCHEXIT, OS_NORMAL, C_UNION(&rs_tedinfo[18]), 0,2, 70,1 }, /* SR_FSTL_2 */
	{ 10, -1, -1, G_TEXT, OF_TOUCHEXIT, OS_NORMAL, C_UNION(&rs_tedinfo[19]), 0,3, 70,1 }, /* SR_FSTL_3 */
	{ 11, -1, -1, G_TEXT, OF_TOUCHEXIT, OS_NORMAL, C_UNION(&rs_tedinfo[20]), 0,4, 70,1 }, /* SR_FSTL_4 */
	{ 12, -1, -1, G_TEXT, OF_TOUCHEXIT, OS_NORMAL, C_UNION(&rs_tedinfo[21]), 0,5, 70,1 }, /* SR_FSTL_5 */
	{ 13, -1, -1, G_TEXT, OF_TOUCHEXIT, OS_NORMAL, C_UNION(&rs_tedinfo[22]), 0,6, 70,1 }, /* SR_FSTL_6 */
	{ 14, -1, -1, G_TEXT, OF_TOUCHEXIT, OS_NORMAL, C_UNION(&rs_tedinfo[23]), 0,7, 70,1 }, /* SR_FSTL_7 */
	{ 15, -1, -1, G_TEXT, OF_TOUCHEXIT, OS_NORMAL, C_UNION(&rs_tedinfo[24]), 0,8, 70,1 }, /* SR_FSTL_8 */
	{ 5, -1, -1, G_TEXT, OF_TOUCHEXIT, OS_NORMAL, C_UNION(&rs_tedinfo[25]), 0,9, 70,1 }, /* SR_FSTL_9 */
	{ 0, -1, -1, G_BUTTON, 0x227, OS_NORMAL, C_UNION(hypview_string_132), 546,13, 8,1 }, /* SR_ABORT */

/* HYPFIND */

	{ -1, 1, 8, G_BOX, OF_FL3DBAK, OS_OUTLINED, C_UNION(0x21100L), 3,1, 56,8 },
	{ 2, -1, -1, G_TEXT, OF_FL3DBAK, OS_NORMAL, C_UNION(&rs_tedinfo[26]), 5,1, 6,1 },
	{ 3, -1, -1, G_FTEXT, 0x408, OS_NORMAL, C_UNION(&rs_tedinfo[27]), 12,1, 30,1 }, /* HYPFIND_STRING */
	{ 4, -1, -1, G_BUTTON, 0x605, OS_NORMAL, C_UNION(hypview_string_139), 2,4, 11,1 }, /* HYPFIND_TEXT */
	{ 5, -1, -1, G_BUTTON, 0x607, OS_NORMAL, C_UNION(hypview_string_140), 14,4, 11,1 }, /* HYPFIND_PAGES */
	{ 6, -1, -1, G_BUTTON, 0x605, OS_NORMAL, C_UNION(hypview_string_141), 26,4, 15,1 }, /* HYPFIND_REF */
	{ 7, -1, -1, G_BUTTON, 0x605, OS_NORMAL, C_UNION(hypview_string_142), 42,4, 11,1 }, /* HYPFIND_ABORT */
	{ 8, -1, -1, G_BUTTON, 0x605, OS_NORMAL, C_UNION(hypview_string_143), 2,6, 23,1 }, /* HYPFIND_ALL_PAGE */
	{ 0, -1, -1, G_BUTTON, 0x621, OS_NORMAL, C_UNION(hypview_string_144), 26,6, 27,1 } /* HYPFIND_ALL_HYP */
};


static OBJECT *rs_trindex[] = {
	&rs_object[0], /* DIAL_LIBRARY */
	&rs_object[2], /* TOOLBAR */
	&rs_object[21], /* CONTEXT */
	&rs_object[38], /* EMPTYPOPUP */
	&rs_object[51], /* PROGINFO */
	&rs_object[77], /* SEARCH_RESULT */
	&rs_object[94] /* HYPFIND */
};




#if RSC_STATIC_FILE
#undef NUM_STRINGS
#undef NUM_BB
#undef NUM_IB
#undef NUM_CIB
#undef NUM_CIC
#undef NUM_TI
#undef NUM_FRSTR
#undef NUM_FRIMG
#undef NUM_OBS
#undef NUM_TREE
#undef NUM_UD
#define NUM_STRINGS 162
#define NUM_BB		0
#define NUM_IB		0
#define NUM_CIB     15
#define NUM_CIC     29
#define NUM_TI		28
#define NUM_FRSTR	17
#define NUM_FRIMG	0
#define NUM_OBS     103
#define NUM_TREE	7
#define NUM_UD		0


#if RSC_NAMED_FUNCTIONS
#ifdef __STDC__
_WORD hypview_rsc_load(void)
#else
_WORD hypview_rsc_load()
#endif
{
#ifndef RSC_HAS_PALETTE
#  define RSC_HAS_PALETTE 0
#endif
#ifndef RSC_USE_PALETTE
#  define RSC_USE_PALETTE 0
#endif
#if RSC_HAS_PALETTE || RSC_USE_PALETTE
	W_Cicon_Setpalette(&rgb_palette[0][0]);
#endif
#if NUM_OBS != 0
	{
		_WORD Obj;
		OBJECT *tree;
		_WORD wchar, hchar;
		GetTextSize(&wchar, &hchar);
		for (Obj = 0, tree = rs_object; Obj < NUM_OBS; Obj++, tree++)
		{
			tree->ob_x = wchar * (tree->ob_x & 0xff) + (tree->ob_x >> 8);
			tree->ob_y = hchar * (tree->ob_y & 0xff) + (tree->ob_y >> 8);
			tree->ob_width = wchar * (tree->ob_width & 0xff) + (tree->ob_width >> 8);
			tree->ob_height = hchar * (tree->ob_height & 0xff) + (tree->ob_height >> 8);
		}
		hfix_objs(NULL, rs_object, NUM_OBS);
	}
#endif
	return 1;
}


#ifdef __STDC__
_WORD hypview_rsc_gaddr(_WORD type, _WORD idx, void *gaddr)
#else
_WORD hypview_rsc_gaddr(type, idx, gaddr)
_WORD type;
_WORD idx;
void *gaddr;
#endif
{
	switch (type)
	{
#if NUM_TREE != 0
	case R_TREE:
		if (idx < 0 || idx >= NUM_TREE)
			return 0;
		*((OBJECT **)gaddr) = rs_trindex[idx];
		break;
#endif
#if NUM_OBS != 0
	case R_OBJECT:
		if (idx < 0 || idx >= NUM_OBS)
			return 0;
		*((OBJECT **)gaddr) = &rs_object[idx];
		break;
#endif
#if NUM_TI != 0
	case R_TEDINFO:
		if (idx < 0 || idx >= NUM_TI)
			return 0;
		*((TEDINFO **)gaddr) = &rs_tedinfo[idx];
		break;
#endif
#if NUM_IB != 0
	case R_ICONBLK:
		if (idx < 0 || idx >= NUM_IB)
			return 0;
		*((ICONBLK **)gaddr) = &rs_iconblk[idx];
		break;
#endif
#if NUM_BB != 0
	case R_BITBLK:
		if (idx < 0 || idx >= NUM_BB)
			return 0;
		*((BITBLK **)gaddr) = &rs_bitblk[idx];
		break;
#endif
#if NUM_FRSTR != 0
	case R_STRING:
		if (idx < 0 || idx >= NUM_FRSTR)
			return 0;
		*((char **)gaddr) = (char *)(rs_frstr[idx]);
		break;
#endif
#if NUM_FRIMG != 0
	case R_IMAGEDATA:
		if (idx < 0 || idx >= NUM_FRIMG)
			return 0;
		*((BITBLK **)gaddr) = rs_frimg[idx];
		break;
#endif
#if NUM_OBS != 0
	case R_OBSPEC:
		if (idx < 0 || idx >= NUM_OBS)
			return 0;
		*((_LONG **)gaddr) = &rs_object[idx].ob_spec.index;
		break;
#endif
#if NUM_TI != 0
	case R_TEPTEXT:
		if (idx < 0 || idx >= NUM_TI)
			return 0;
		*((char ***)gaddr) = (char **)(&rs_tedinfo[idx].te_ptext);
		break;
#endif
#if NUM_TI != 0
	case R_TEPTMPLT:
		if (idx < 0 || idx >= NUM_TI)
			return 0;
		*((char ***)gaddr) = (char **)(&rs_tedinfo[idx].te_ptmplt);
		break;
#endif
#if NUM_TI != 0
	case R_TEPVALID:
		if (idx < 0 || idx >= NUM_TI)
			return 0;
		*((char ***)gaddr) = (char **)(&rs_tedinfo[idx].te_pvalid);
		break;
#endif
#if NUM_IB != 0
	case R_IBPMASK:
		if (idx < 0 || idx >= NUM_IB)
			return 0;
		*((char ***)gaddr) = (char **)(&rs_iconblk[idx].ib_pmask);
		break;
#endif
#if NUM_IB != 0
	case R_IBPDATA:
		if (idx < 0 || idx >= NUM_IB)
			return 0;
		*((char ***)gaddr) = (char **)(&rs_iconblk[idx].ib_pdata);
		break;
#endif
#if NUM_IB != 0
	case R_IBPTEXT:
		if (idx < 0 || idx >= NUM_IB)
			return 0;
		*((char ***)gaddr) = (char **)(&rs_iconblk[idx].ib_ptext);
		break;
#endif
#if NUM_BB != 0
	case R_BIPDATA:
		if (idx < 0 || idx >= NUM_BB)
			return 0;
		*((char ***)gaddr) = (char **)(&rs_bitblk[idx].bi_pdata);
		break;
#endif
#if NUM_FRSTR != 0
	case R_FRSTR:
		if (idx < 0 || idx >= NUM_FRSTR)
			return 0;
		*((char ***)gaddr) = (char **)(&rs_frstr[idx]);
		break;
#endif
#if NUM_FRIMG != 0
	case R_FRIMG:
		if (idx < 0 || idx >= NUM_FRIMG)
			return 0;
		*((BITBLK ***)gaddr) = &rs_frimg[idx];
		break;
#endif
	default:
		return 0;
	}
	return 1;
}


#ifdef __STDC__
_WORD hypview_rsc_free(void)
#else
_WORD hypview_rsc_free()
#endif
{
#if NUM_OBS != 0
	hrelease_objs(rs_object, NUM_OBS);
#endif
	return 1;
}

#endif /* RSC_NAMED_FUNCTIONS */

#else /* !RSC_STATIC_FILE */
int rs_numstrings = 162;
int rs_numfrstr = 17;

int rs_nuser = 0;
int rs_numimages = 0;
int rs_numbb = 0;
int rs_numfrimg = 0;
int rs_numib = 0;
int rs_numcib = 15;
int rs_numti = 28;
int rs_numobs = 103;
int rs_numtree = 7;

char rs_name[] = "hypview.rsc";

int _rsc_format = 2; /* RSC_FORM_SOURCE2 */
#endif /* RSC_STATIC_FILE */
